{"version":3,"file":"index-legacy-B5ID_Zgo.js","sources":["../../src/pages/QuickOrder/index.tsx","../../src/utils/b3Price.ts","../../src/shared/service/b2b/graphql/quickOrder.ts","../../src/pages/QuickOrder/components/QuickOrderCard.tsx","../../src/pages/QuickOrder/components/QuickOrderB2BTable.tsx","../../src/pages/QuickOrder/utils.ts","../../src/pages/QuickOrder/components/QuickOrderFooter.tsx","../../src/pages/QuickOrder/components/QuickAdd.tsx","../../src/pages/QuickOrder/components/ChooseOptionsDialog.tsx","../../src/pages/QuickOrder/components/ProductListDialog.tsx","../../src/pages/QuickOrder/components/SearchProduct.tsx","../../src/pages/QuickOrder/components/QuickOrderPad.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport QuickOrderTable from './components/QuickOrderB2BTable';\nimport QuickOrderFooter from './components/QuickOrderFooter';\nimport QuickOrderPad from './components/QuickOrderPad';\nimport { CheckedProduct } from './utils';\n\nfunction QuickOrder() {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const [isMobile] = useMobile();\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [checkedArr, setCheckedArr] = useState<CheckedProduct[]>([]);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowQuickOrderPad = isB2BUser ? purchasabilityPermission : true;\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            m: 0,\n            width: '100%',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={isMobile ? 12 : 8}\n            sx={{\n              backgroundColor: '#ffffff',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              pr: '16px',\n            }}\n          >\n            <QuickOrderTable\n              setCheckedArr={setCheckedArr}\n              setIsRequestLoading={setIsRequestLoading}\n              isRequestLoading={isRequestLoading}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={isMobile ? 12 : 4}\n            sx={{\n              pt: isMobile ? '16px' : '0px !important',\n              pl: isMobile ? '0px !important' : '16px',\n            }}\n          >\n            {isShowQuickOrderPad && <QuickOrderPad />}\n          </Grid>\n        </Grid>\n      </Box>\n      <Box\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          width: '100%',\n          zIndex: '999',\n        }}\n      >\n        <QuickOrderFooter\n          checkedArr={checkedArr}\n          isAgenting={isAgenting}\n          setIsRequestLoading={setIsRequestLoading}\n          isB2BUser={isB2BUser}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuickOrder;\n","import isEmpty from 'lodash-es/isEmpty';\n\nimport { store } from '@/store';\nimport { Variant } from '@/types/products';\n\nconst getProductPriceIncTaxOrExTaxBySetting = (\n  variants: Variant[],\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const {\n    global: { showInclusiveTaxPrice },\n  } = store.getState();\n  const currentVariantInfo: Variant | undefined = variants.find(\n    (item: Variant) => Number(item.variant_id) === variantId || variantSku === item.sku,\n  );\n\n  if (currentVariantInfo && !isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n      tax_exclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = showInclusiveTaxPrice\n      ? Number(bcCalculatedPrice.tax_inclusive)\n      : Number(bcCalculatedPrice.tax_exclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nconst getProductPriceIncTax = (\n  variants: CustomFieldItems,\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const currentVariantInfo =\n    variants.find(\n      (item: CustomFieldItems) => Number(item.variant_id) === variantId || variantSku === item.sku,\n    ) || {};\n\n  if (!isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = Number(bcCalculatedPrice.tax_inclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nexport { getProductPriceIncTax, getProductPriceIncTaxOrExTaxBySetting };\n","import B3Request from '../../request/b3Fetch';\n\ninterface OptionSelection {\n  option_id: number;\n  value_id: number;\n}\n\ninterface OptionList {\n  id: number;\n  option_id: number;\n  order_product_id: number;\n  product_option_id: number;\n  display_name: string;\n  display_name_customer: string;\n  display_name_merchant: string;\n  display_value: string;\n  display_value_customer: string;\n  display_value_merchant: string;\n  value: string;\n  type: string;\n  name: string;\n  display_style: string;\n}\n\nexport interface OrderedProductNode {\n  node: {\n    id: string;\n    createdAt: number;\n    updatedAt: number;\n    productName: string;\n    productBrandName: string;\n    variantSku: string;\n    productId: string;\n    variantId: string;\n    optionList: OptionList[];\n    orderedTimes: string;\n    firstOrderedAt: number;\n    lastOrderedAt: number;\n    lastOrderedItems: string;\n    sku: string;\n    lastOrdered: string;\n    imageUrl: string;\n    baseSku: string;\n    basePrice: string;\n    discount: string;\n    tax: string;\n    enteredInclusive: boolean;\n    productUrl: string;\n    optionSelections: OptionSelection[];\n  };\n}\n\nexport interface RecentlyOrderedProductsResponse {\n  data: {\n    orderedProducts: {\n      totalCount: number;\n      edges: OrderedProductNode[];\n    };\n  };\n}\n\nconst orderedProducts = (data: CustomFieldItems) => `\nquery RecentlyOrderedProducts {\n  orderedProducts (\n    q: \"${data.q || ''}\"\n    first: ${data.first}\n    offset: ${data.offset}\n    beginDateAt: \"${data.beginDateAt}\"\n    endDateAt: \"${data.endDateAt}\"\n    orderBy: \"${data?.orderBy || ''}\"\n  ){\n    totalCount,\n    pageInfo{\n      hasNextPage,\n      hasPreviousPage,\n    },\n    edges{\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        productName,\n        productBrandName,\n        variantSku,\n        productId,\n        variantId,\n        optionList,\n        orderedTimes,\n        firstOrderedAt,\n        lastOrderedAt,\n        lastOrderedItems,\n        sku,\n        lastOrdered,\n        imageUrl,\n        baseSku,\n        basePrice,\n        discount,\n        tax,\n        enteredInclusive,\n        productUrl,\n        optionSelections,\n      }\n    }\n  }\n}`;\n\nexport const getOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n","import { ReactElement } from 'react';\nimport { Box, CardContent, styled, TextField, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { currencyFormat, displayFormat } from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\n\ninterface QuickOrderCardProps {\n  item: any;\n  checkBox?: () => ReactElement;\n  handleUpdateProductQty: (id: number, val: string) => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuickOrderCard(props: QuickOrderCardProps) {\n  const { item: shoppingDetail, checkBox, handleUpdateProductQty } = props;\n  const b3Lang = useB3Lang();\n\n  const {\n    quantity,\n    imageUrl,\n    productName,\n    variantSku,\n    optionList,\n    basePrice,\n    lastOrderedAt,\n    variantId,\n    productsSearch,\n  } = shoppingDetail;\n\n  const price = Number(basePrice) * Number(quantity);\n  const currentVariants = productsSearch.variants || [];\n  const currentImage = b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || imageUrl;\n\n  return (\n    <Box\n      key={shoppingDetail.id}\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>{checkBox && checkBox()}</Box>\n        <Box>\n          <StyledImage\n            src={currentImage || PRODUCT_DEFAULT_IMAGE}\n            alt=\"Product-img\"\n            loading=\"lazy\"\n          />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography variant=\"body1\" color=\"#212121\">\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {variantSku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {optionList.length > 0 && (\n              <Box>\n                {optionList.map((option: CustomFieldItems) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.display_name}\n                  >\n                    {`${option.display_name}: ${option.display_value}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.price', {\n              price: currencyFormat(price),\n            })}\n          </Typography>\n          <Box\n            sx={{\n              '& label': {\n                zIndex: 0,\n              },\n            }}\n          >\n            <TextField\n              size=\"small\"\n              type=\"number\"\n              variant=\"filled\"\n              label=\"Qty\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*',\n              }}\n              value={quantity}\n              sx={{\n                margin: '1rem 0',\n                width: '60%',\n                maxWidth: '100px',\n                '& label': {\n                  fontSize: '14px',\n                },\n                '& input': {\n                  fontSize: '14px',\n                },\n              }}\n              onChange={(e) => {\n                handleUpdateProductQty(shoppingDetail.id, e.target.value);\n              }}\n            />\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.lastOrdered', {\n              lastOrderedAt: displayFormat(lastOrderedAt),\n            })}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuickOrderCard;\n","import { Dispatch, SetStateAction, useRef, useState } from 'react';\nimport { Box, styled, TextField, Typography } from '@mui/material';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile, useSort } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getOrderedProducts, searchProducts } from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, useAppSelector } from '@/store';\nimport { ProductInfoType } from '@/types/gql/graphql';\nimport {\n  currencyFormat,\n  displayFormat,\n  distanceDay,\n  getProductPriceIncTaxOrExTaxBySetting,\n  snackbar,\n} from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\nimport { getDisplayPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport B3FilterMore from '../../../components/filter/B3FilterMore';\nimport B3FilterPicker from '../../../components/filter/B3FilterPicker';\nimport B3FilterSearch from '../../../components/filter/B3FilterSearch';\nimport { CheckedProduct } from '../utils';\n\nimport QuickOrderCard from './QuickOrderCard';\n\ninterface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  taxPrice: number;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: ProductInfoType;\n}\n\ninterface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface SearchProps {\n  q: string;\n  first?: number;\n  offset?: number;\n  beginDateAt?: Date | string | number;\n  endDateAt?: Date | string | number;\n  orderBy: string;\n}\n\ninterface PaginationTableRefProps extends HTMLInputElement {\n  getList: () => void;\n  getCacheList: () => void;\n  setCacheAllList: (items?: ListItemProps[]) => void;\n  setList: (items?: ListItemProps[]) => void;\n  getSelectedValue: () => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nconst StyleQuickOrderTable = styled(Box)(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        paddingTop: '25px',\n      },\n    },\n  },\n}));\n\ninterface QuickOrderTableProps {\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  setCheckedArr: (values: CheckedProduct[]) => void;\n  isRequestLoading: boolean;\n}\n\nconst StyledTextField = styled(TextField)(() => ({\n  '& input': {\n    paddingTop: '12px',\n    paddingRight: '6px',\n  },\n}));\n\nconst defaultSortKey = 'lastOrderedAt';\n\nconst sortKeys = {\n  product: 'productName',\n  lastOrderedAt: 'lastOrderedAt',\n};\n\nfunction QuickOrderTable({\n  setIsRequestLoading,\n  setCheckedArr,\n  isRequestLoading,\n}: QuickOrderTableProps) {\n  const paginationTableRef = useRef<PaginationTableRefProps | null>(null);\n\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n\n  const [search, setSearch] = useState<SearchProps>({\n    q: '',\n    beginDateAt: distanceDay(90),\n    endDateAt: distanceDay(0),\n    orderBy: `-${sortKeys[defaultSortKey]}`,\n  });\n\n  const [handleSetOrderBy, order, orderBy] = useSort(sortKeys, defaultSortKey, search, setSearch);\n\n  const [total, setTotalCount] = useState<number>(0);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n\n  const handleGetProductsById = async (listProducts: ListItemProps[]) => {\n    if (listProducts.length > 0) {\n      const productIds: number[] = [];\n      listProducts.forEach((item) => {\n        const { node } = item;\n        node.quantity = 1;\n        if (!productIds.includes(node.productId)) {\n          productIds.push(node.productId);\n        }\n      });\n\n      try {\n        const { productsSearch } = await searchProducts({\n          productIds,\n          currencyCode,\n          companyId: companyInfoId,\n          customerGroupId,\n        });\n\n        const newProductsSearch = conversionProductsList(productsSearch);\n\n        listProducts.forEach((item) => {\n          const { node } = item;\n\n          const productInfo = newProductsSearch.find((search: CustomFieldItems) => {\n            const { id: productId } = search;\n\n            return Number(node.productId) === Number(productId);\n          });\n\n          node.productsSearch = productInfo || {};\n        });\n\n        return listProducts;\n      } catch (err: any) {\n        snackbar.error(err);\n      }\n    }\n    return [];\n  };\n\n  const getList: GetRequestList<SearchProps, ProductInfoProps> = async (params) => {\n    const {\n      orderedProducts: { edges, totalCount },\n    } = await getOrderedProducts(params);\n\n    const listProducts = await handleGetProductsById(edges);\n\n    setTotalCount(totalCount);\n\n    return {\n      edges: listProducts,\n      totalCount,\n    };\n  };\n\n  const handleSearchProduct = async (q: string) => {\n    setSearch({\n      ...search,\n      q,\n    });\n  };\n\n  const getSelectCheckbox = (selectCheckbox: Array<string | number>) => {\n    if (selectCheckbox.length > 0) {\n      const productList = paginationTableRef.current?.getCacheList() || [];\n      const checkedItems = selectCheckbox.reduce((pre, item: number | string) => {\n        const newItems = productList.find((product: ListItemProps) => {\n          const { node } = product;\n\n          return node.id === item;\n        });\n\n        if (newItems) pre.push(newItems);\n\n        return pre;\n      }, []);\n\n      setCheckedArr([...checkedItems]);\n    } else {\n      setCheckedArr([]);\n    }\n  };\n\n  const handlePickerChange = (key: string, value: Date | string | number) => {\n    const params = {\n      ...search,\n    };\n    if (key === 'start') {\n      params.beginDateAt = value || distanceDay(90);\n    } else {\n      params.endDateAt = value || distanceDay(0);\n    }\n\n    setSearch(params);\n  };\n\n  const handleFilterChange = (data: any) => {\n    const params = {\n      ...search,\n    };\n\n    params.beginDateAt = data.startValue;\n\n    params.endDateAt = data.endValue;\n\n    setSearch(params);\n  };\n\n  const handleUpdateProductQty = (id: number | string, value: number | string) => {\n    if (value !== '' && Number(value) <= 0) return;\n    const listItems = paginationTableRef.current?.getList() || [];\n    const listCacheItems = paginationTableRef.current?.getCacheList() || [];\n\n    const newListItems = listItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    const newListCacheItems = listCacheItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    paginationTableRef.current?.setList([...newListItems]);\n    paginationTableRef.current?.setCacheAllList([...newListCacheItems]);\n  };\n\n  const showPrice = (price: string, row: CustomFieldItems): string | number => {\n    const {\n      productsSearch: { isPriceHidden },\n    } = row;\n    if (isPriceHidden) return '';\n    return getDisplayPrice({\n      price,\n      productInfo: row,\n      showText: isPriceHidden ? '' : price,\n      forcedSkip: true,\n    });\n  };\n\n  const handleSetCheckedQty = (row: CustomFieldItems) => {\n    const cacheProductList: CustomFieldItems = paginationTableRef.current?.getCacheList() || [];\n\n    let qty = row.quantity;\n    if (cacheProductList.length > 0) {\n      const currentProduct = cacheProductList.find(\n        (item: CustomFieldItems) =>\n          item.node.variantId === row.variantId &&\n          item.node.productId === row.productId &&\n          item.node.id === row.id,\n      );\n\n      if (currentProduct && currentProduct.node) {\n        qty = currentProduct.node.quantity || qty;\n      }\n    }\n\n    return qty;\n  };\n\n  const columnItems: TableColumnItem<ProductInfoProps>[] = [\n    {\n      key: 'product',\n      title: b3Lang('purchasedProducts.product'),\n      render: (row: CustomFieldItems) => {\n        const { optionList, productsSearch, variantId } = row;\n        const currentVariants = productsSearch.variants || [];\n\n        const currentImage =\n          b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || row.imageUrl;\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={currentImage || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography variant=\"body1\" color=\"#212121\">\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.variantSku}\n              </Typography>\n              {optionList.length > 0 && (\n                <Box>\n                  {optionList.map((option: any) => (\n                    <Typography\n                      sx={{\n                        fontSize: '0.75rem',\n                        lineHeight: '1.5',\n                        color: '#455A64',\n                      }}\n                      key={option.id}\n                    >\n                      {`${option.display_name}: ${option.display_value}`}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n      isSortable: true,\n    },\n    {\n      key: 'price',\n      title: b3Lang('purchasedProducts.price'),\n      render: (row: CustomFieldItems) => {\n        const {\n          productsSearch: { variants },\n          variantId,\n          basePrice,\n        } = row;\n        let priceIncTax = Number(basePrice);\n        if (variants?.length) {\n          priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) || Number(basePrice);\n        }\n\n        const qty = handleSetCheckedQty(row);\n        const withTaxPrice = priceIncTax || Number(basePrice);\n        const price = withTaxPrice * Number(qty);\n\n        return (\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${showPrice(currencyFormat(price), row)}`}\n          </Typography>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'qty',\n      title: b3Lang('purchasedProducts.qty'),\n      render: (row) => {\n        const qty = handleSetCheckedQty(row);\n\n        return (\n          <StyledTextField\n            size=\"small\"\n            type=\"number\"\n            variant=\"filled\"\n            value={qty}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            onChange={(e) => {\n              handleUpdateProductQty(row.id, e.target.value);\n            }}\n          />\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'lastOrderedAt',\n      title: b3Lang('purchasedProducts.lastOrdered'),\n      render: (row: CustomFieldItems) => (\n        <Box>\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${displayFormat(Number(row.lastOrderedAt))}`}\n          </Typography>\n        </Box>\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n      isSortable: true,\n    },\n  ];\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <StyleQuickOrderTable>\n        <Typography\n          sx={{\n            fontSize: '24px',\n            height: '50px',\n          }}\n        >\n          {b3Lang('purchasedProducts.totalProducts', { total })}\n        </Typography>\n        <Box\n          sx={{\n            marginBottom: '5px',\n            display: 'flex',\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: isMobile ? '100%' : '40%',\n              mr: '20px',\n              display: 'flex',\n              justifyContent: isMobile ? 'space-between' : 'flex-start',\n            }}\n          >\n            <B3FilterSearch\n              h=\"48px\"\n              searchBGColor=\"rgba(0, 0, 0, 0.06)\"\n              handleChange={(e) => {\n                handleSearchProduct(e);\n              }}\n            />\n\n            {isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <B3FilterMore\n                  filterMoreInfo={[]}\n                  startPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.from'),\n                    defaultValue: search?.beginDateAt || '',\n                    pickerKey: 'start',\n                  }}\n                  endPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.to'),\n                    defaultValue: search?.endDateAt || '',\n                    pickerKey: 'end',\n                  }}\n                  isShowMore\n                  onChange={handleFilterChange}\n                />\n              </Box>\n            )}\n          </Box>\n\n          {!isMobile && (\n            <B3FilterPicker\n              handleChange={handlePickerChange}\n              xs={{\n                mt: 0,\n                height: '50px',\n              }}\n              startPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.from'),\n                defaultValue: distanceDay(90),\n                pickerKey: 'start',\n              }}\n              endPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.to'),\n                defaultValue: distanceDay(),\n                pickerKey: 'end',\n              }}\n              customWidth=\"58%\"\n            />\n          )}\n        </Box>\n\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={columnItems}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={getList}\n          searchParams={search}\n          isCustomRender={false}\n          showCheckbox\n          showSelectAllCheckbox\n          disableCheckbox={false}\n          hover\n          labelRowsPerPage={b3Lang('purchasedProducts.itemsPerPage')}\n          showBorder={false}\n          requestLoading={setIsRequestLoading}\n          getSelectCheckbox={getSelectCheckbox}\n          itemIsMobileSpacing={0}\n          isSelectOtherPageCheckbox\n          noDataText={b3Lang('purchasedProducts.noProductsFound')}\n          sortDirection={order}\n          orderBy={orderBy}\n          sortByFn={handleSetOrderBy}\n          renderItem={(row, _, checkBox) => (\n            <QuickOrderCard\n              item={row}\n              checkBox={checkBox}\n              handleUpdateProductQty={handleUpdateProductQty}\n            />\n          )}\n        />\n      </StyleQuickOrderTable>\n    </B3Spin>\n  );\n}\n\nexport default QuickOrderTable;\n","import { LangFormatFunction } from '@/lib/lang';\nimport { getCart } from '@/shared/service/bc/graphql/cart';\nimport { store } from '@/store';\nimport { OrderedProductType, ProductInfoType } from '@/types/gql/graphql';\nimport { snackbar } from '@/utils';\nimport { LineItem } from '@/utils/b3Product/b3Product';\n\ninterface ProductInfo extends OrderedProductType {\n  productsSearch: ProductInfoType;\n  quantity: number;\n}\n\ninterface CommonProducts extends ProductInfoType {\n  quantity: number;\n  variantId?: string;\n}\n\nexport interface CheckedProduct {\n  node: ProductInfo;\n}\n\nconst handleVerifyProduct = (products: CustomFieldItems, b3Lang: LangFormatFunction) => {\n  const {\n    variantId,\n    variants,\n    inventoryLevel,\n    inventoryTracking,\n    orderQuantityMaximum,\n    orderQuantityMinimum,\n    quantity,\n    sku,\n  } = products;\n\n  const isEnableProduct =\n    store.getState().global?.blockPendingQuoteNonPurchasableOOS?.isEnableProduct || false;\n\n  const isStock = inventoryTracking !== 'none';\n  let purchasingDisabled = false;\n  let stock = inventoryLevel;\n  let productSku = sku;\n\n  const currentVariant = variants.find(\n    (variant: CustomFieldItems) => Number(variant.variant_id) === Number(variantId),\n  );\n  if (currentVariant) {\n    purchasingDisabled = currentVariant.purchasing_disabled;\n    stock = inventoryTracking === 'variant' ? currentVariant.inventory_level : stock;\n    productSku = currentVariant.sku || sku;\n  }\n\n  if (purchasingDisabled && !isEnableProduct) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n        notPurchaseSku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'notPurchaseableSku',\n    };\n  }\n\n  if (isStock && Number(quantity) > Number(stock)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.insufficientStockSku', {\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'insufficientStockSku',\n    };\n  }\n\n  if (Number(orderQuantityMinimum) > 0 && Number(quantity) < orderQuantityMinimum) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n        minQuantity: orderQuantityMinimum,\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'minQuantity',\n    };\n  }\n\n  if (Number(orderQuantityMaximum) > 0 && Number(quantity) > Number(orderQuantityMaximum)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n        maxQuantity: orderQuantityMaximum,\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'maxQuantity',\n    };\n  }\n\n  return {\n    isVerify: true,\n  };\n};\n\nexport const getCartProductInfo = async () => {\n  const {\n    data: {\n      site: { cart },\n    },\n  } = await getCart();\n\n  if (cart) {\n    const { lineItems } = cart;\n    return Object.values(lineItems).reduce((pre, lineItems) => {\n      lineItems.forEach((item: LineItem) => {\n        pre.push(item);\n      });\n\n      return pre;\n    }, [] as LineItem[]);\n  }\n\n  return [];\n};\n\nexport const addCartProductToVerify = async (\n  checkedArr: Partial<CheckedProduct>[],\n  b3lang: LangFormatFunction,\n) => {\n  const cartProducts: LineItem[] = await getCartProductInfo();\n\n  const addCommonProducts = checkedArr.reduce((pre, checkItem) => {\n    const { node } = checkItem;\n\n    const num =\n      cartProducts.find(\n        (item: LineItem) =>\n          item.sku === node?.sku &&\n          Number(item?.variantEntityId || 0) === Number(node?.variantId || 0),\n      )?.quantity || 0;\n\n    pre.push({\n      ...node?.productsSearch,\n      variantId: node?.variantId,\n      quantity: (node?.quantity || 0) + num,\n    });\n\n    return pre;\n  }, [] as CommonProducts[]);\n\n  return addCommonProducts.every((product) => {\n    return handleVerifyProduct(product, b3lang).isVerify;\n  });\n};\n","import { Dispatch, SetStateAction, useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowDropDown } from '@mui/icons-material';\nimport { Box, Grid, Menu, MenuItem, SxProps, Typography, useMediaQuery } from '@mui/material';\nimport uniq from 'lodash-es/uniq';\nimport { v1 as uuid } from 'uuid';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL, PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useFeatureFlags, useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { currencyFormat, getProductPriceIncTaxOrExTaxBySetting, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  addQuoteDraftProducts,\n  calculateProductListPrice,\n  getValidOptionsList,\n  validProductQty,\n} from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { createOrUpdateExistingCart } from '@/utils/cartUtils';\nimport { validateProducts } from '@/utils/validateProducts';\n\nimport CreateShoppingList from '../../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../../OrderDetail/components/OrderShoppingList';\nimport { addCartProductToVerify, CheckedProduct } from '../utils';\n\ninterface NodeProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n  optionSelections: CustomFieldItems;\n}\n\ninterface ProductsProps {\n  maxQuantity?: number;\n  minQuantity?: number;\n  stock?: number;\n  isStock?: string;\n  node: NodeProps;\n  isValid?: boolean;\n}\n\ninterface QuickOrderFooterProps {\n  checkedArr: CheckedProduct[];\n  isAgenting: boolean;\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  isB2BUser: boolean;\n}\n\nfunction QuickOrderFooter(props: QuickOrderFooterProps) {\n  const { checkedArr, isAgenting, setIsRequestLoading, isB2BUser } = props;\n  const {\n    state: { productQuoteEnabled = false, shoppingListEnabled = false },\n  } = useContext(GlobalContext);\n  const b3Lang = useB3Lang();\n  const featureFlags = useFeatureFlags();\n\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n  const backendValidationEnabled =\n    featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend'];\n\n  const isShowCartAction = isB2BUser ? purchasabilityPermission : true;\n\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n  const [isMobile] = useMobile();\n  const ref = useRef<HTMLButtonElement | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSubTotal, setSelectedSubTotal] = useState(0.0);\n  const [openShoppingList, setOpenShoppingList] = useState(false);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState(false);\n  const [isShoppingListLoading, setIisShoppingListLoading] = useState(false);\n\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n\n  const navigate = useNavigate();\n\n  const containerStyle = isMobile\n    ? {\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n      }\n    : {\n        alignItems: 'center',\n      };\n\n  const handleOpenBtnList = () => {\n    if (checkedArr.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.error.selectOneItem'));\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  // Add selected to cart\n  const handleSetCartLineItems = (inventoryInfos: ProductsProps[]) => {\n    const lineItems: CustomFieldItems[] = [];\n\n    checkedArr.forEach((item: CheckedProduct) => {\n      const { node } = item;\n\n      const currentProduct: CustomFieldItems | undefined = inventoryInfos.find(\n        (inventory: CustomFieldItems) => Number(node.productId) === inventory.id,\n      );\n      if (currentProduct) {\n        const { variants }: CustomFieldItems = currentProduct;\n\n        if (variants.length > 0) {\n          const currentInventoryInfo: CustomFieldItems | undefined = variants.find(\n            (variant: CustomFieldItems) =>\n              node.variantSku === variant.sku &&\n              Number(node.variantId) === Number(variant.variant_id),\n          );\n\n          if (currentInventoryInfo) {\n            const { optionList, quantity } = node;\n\n            const options = optionList.map((option: CustomFieldItems) => ({\n              optionId: option.product_option_id,\n              optionValue: option.value,\n            }));\n\n            lineItems.push({\n              optionSelections: options,\n              allOptions: optionList,\n              productId: parseInt(currentInventoryInfo.product_id, 10) || 0,\n              quantity,\n              variantId: parseInt(currentInventoryInfo.variant_id, 10) || 0,\n            });\n          }\n        }\n      }\n    });\n\n    return lineItems;\n  };\n\n  const showAddToCartSuccessMessage = () => {\n    snackbar.success(b3Lang('purchasedProducts.footer.productsAdded'), {\n      action: {\n        label: b3Lang('purchasedProducts.footer.viewCart'),\n        onClick: () => {\n          if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n            window.location.href = CART_URL;\n          }\n        },\n      },\n    });\n  };\n\n  const handleFrontedAddSelectedToCart = async (productIds: number[]) => {\n    try {\n      const isPassVerify = await addCartProductToVerify(checkedArr, b3Lang);\n\n      if (!isPassVerify) return;\n\n      const companyId = companyInfoId;\n\n      const { productsSearch: getInventoryInfos } = await searchProducts({\n        productIds,\n        companyId,\n        customerGroupId,\n      });\n\n      const lineItems = handleSetCartLineItems(getInventoryInfos || []);\n\n      const res = await createOrUpdateExistingCart(lineItems);\n\n      if (res && !res.errors) {\n        showAddToCartSuccessMessage();\n      } else if (res && res.errors) {\n        snackbar.error(res.errors[0].message);\n      } else {\n        snackbar.error('Error has occurred');\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  const handleBackendAddSelectedToCart = async () => {\n    try {\n      const lineItems = checkedArr.map(({ node }) => ({\n        productId: Number(node.productId),\n        variantId: Number(node.variantId),\n        quantity: node.quantity,\n        optionSelections: node.optionSelections,\n        allOptions: node.optionList,\n      }));\n      await createOrUpdateExistingCart(lineItems);\n      showAddToCartSuccessMessage();\n    } catch (e) {\n      if (e instanceof Error) {\n        snackbar.error(e.message);\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  const handleAddSelectedToCart = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n\n    const productIds = uniq(checkedArr.map(({ node }) => Number(node.productId)));\n\n    if (productIds.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.footer.selectOneItemToAdd'));\n      return;\n    }\n    if (backendValidationEnabled) {\n      handleBackendAddSelectedToCart();\n    } else {\n      handleFrontedAddSelectedToCart(productIds);\n    }\n  };\n\n  // Add selected to quote\n  const getOptionsList = (options: CustomFieldItems) => {\n    if (options?.length === 0) return [];\n\n    const option = options.map(\n      ({\n        product_option_id: optionId,\n        value,\n      }: {\n        product_option_id: number | string;\n        value: string | number;\n      }) => ({\n        optionId: `attribute[${optionId}]`,\n        optionValue: value,\n      }),\n    );\n\n    return option;\n  };\n\n  const addToQuote = async (products: CustomFieldItems[]) => {\n    if (featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend']) {\n      const validatedProducts = await validateProducts(products, b3Lang);\n\n      addQuoteDraftProducts(validatedProducts);\n\n      return validatedProducts.length > 0;\n    }\n\n    addQuoteDraftProducts(products);\n\n    return true;\n  };\n\n  const handleAddSelectedToQuote = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productsWithSku = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return variantSku !== '' && variantSku !== null && variantSku !== undefined;\n      });\n\n      const noSkuProducts = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return !variantSku;\n      });\n      if (noSkuProducts.length > 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.cantAddProductsNoSku'));\n      }\n      if (noSkuProducts.length === checkedArr.length) return;\n\n      const productIds: number[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const { productsSearch } = await searchProducts({\n        productIds,\n        companyId: companyInfoId,\n        customerGroupId,\n        currencyCode,\n      });\n\n      const newProductInfo: CustomFieldItems = conversionProductsList(productsSearch);\n      let errorMessage = '';\n      let isFondVariant = true;\n\n      const newProducts: CustomFieldItems[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const {\n          node: {\n            basePrice,\n            optionList,\n            variantSku,\n            productId,\n            productName,\n            quantity,\n            variantId,\n            tax,\n          },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const currentProductSearch = newProductInfo.find(\n          (product: CustomFieldItems) => Number(product.id) === Number(productId),\n        );\n\n        const variantItem = currentProductSearch?.variants.find(\n          (item: CustomFieldItems) => item.sku === variantSku,\n        );\n\n        if (!variantItem) {\n          errorMessage = b3Lang('purchasedProducts.footer.notFoundSku', {\n            sku: variantSku as string,\n          });\n          isFondVariant = false;\n        }\n\n        const quoteListitem = {\n          node: {\n            id: uuid(),\n            variantSku: variantItem?.sku || variantSku,\n            variantId,\n            productsSearch: {\n              ...currentProductSearch,\n              newSelectOptionList: optionsList,\n              variantId,\n            },\n            primaryImage: variantItem?.image_url || PRODUCT_DEFAULT_IMAGE,\n            productName,\n            quantity: Number(quantity) || 1,\n            optionList: JSON.stringify(optionsList),\n            productId,\n            basePrice,\n            tax,\n          },\n        };\n\n        newProducts.push(quoteListitem);\n      });\n\n      const isValidQty = validProductQty(newProducts);\n\n      if (!isFondVariant) {\n        snackbar.error(errorMessage);\n\n        return;\n      }\n\n      if (isValidQty) {\n        await calculateProductListPrice(newProducts, '2');\n\n        const success = await addToQuote(newProducts);\n        if (success) {\n          snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToQuote'), {\n            action: {\n              label: b3Lang('purchasedProducts.footer.viewQuote'),\n              onClick: () => {\n                navigate('/quoteDraft');\n              },\n            },\n          });\n        }\n      } else {\n        snackbar.error(b3Lang('purchasedProducts.footer.productsLimit'), {\n          action: {\n            label: b3Lang('purchasedProducts.footer.viewQuote'),\n            onClick: () => {\n              navigate('/quoteDraft');\n            },\n          },\n        });\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to shopping list\n  const gotoShoppingDetail = (id: string | number) => {\n    navigate(`/shoppingList/${id}`);\n  };\n\n  const handleShoppingClose = (isTrue?: boolean) => {\n    if (isTrue) {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    } else {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    }\n  };\n\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleClose();\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  const handleAddSelectedToShoppingList = async (shoppingListId: string | number) => {\n    setIisShoppingListLoading(true);\n    try {\n      const productIds: number[] = [];\n      checkedArr.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const items: CustomFieldItems = [];\n\n      checkedArr.forEach((product: CheckedProduct) => {\n        const {\n          node: { optionList, productId, quantity, variantId, productsSearch },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const newOptionLists = getValidOptionsList(optionsList, productsSearch);\n        items.push({\n          productId: Number(productId),\n          variantId: Number(variantId),\n          quantity: Number(quantity),\n          optionList: newOptionLists,\n        });\n      });\n\n      const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n      await addToShoppingList({\n        shoppingListId: Number(shoppingListId),\n        items,\n      });\n\n      snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToShoppingList'), {\n        action: {\n          label: b3Lang('pdp.notification.viewShoppingList'),\n          onClick: () => gotoShoppingDetail(shoppingListId),\n        },\n      });\n      handleShoppingClose(true);\n    } catch (err) {\n      b2bLogger.error(err);\n    } finally {\n      setIisShoppingListLoading(false);\n    }\n  };\n\n  const buttonList = [\n    {\n      name: b3Lang('purchasedProducts.footer.addToCart'),\n      key: 'add-selected-to-cart',\n      handleClick: handleAddSelectedToCart,\n      isDisabled: !isShowCartAction,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addToQuote'),\n      key: 'add-selected-to-quote',\n      handleClick: handleAddSelectedToQuote,\n      isDisabled: !productQuoteEnabled,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addSelectedProductsToShoppingList'),\n      key: 'add-selected-to-shoppingList',\n      handleClick: handleCreateShoppingClick,\n      isDisabled: !shoppingListEnabled,\n    },\n  ];\n\n  useEffect(() => {\n    if (checkedArr.length > 0) {\n      let total = 0.0;\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const {\n          node: {\n            variantId,\n            productsSearch: { variants },\n            quantity,\n            basePrice,\n          },\n        } = item;\n\n        if (variants?.length) {\n          const priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) ||\n            Number(basePrice || 0);\n          total += priceIncTax * Number(quantity);\n        } else {\n          total += Number(basePrice || 0) * Number(quantity);\n        }\n      });\n\n      setSelectedSubTotal((1000 * total) / 1000);\n    } else {\n      setSelectedSubTotal(0.0);\n    }\n  }, [checkedArr]);\n\n  let gridBarStyles: SxProps = {\n    display: isMobile ? 'initial' : 'flex',\n    flexBasis: '100%',\n  };\n\n  if (isDesktopLimit) {\n    gridBarStyles = {\n      display: 'flex',\n      flexGrow: 1,\n      maxWidth: 1775,\n      margin: 'auto',\n    };\n  }\n\n  return (\n    <>\n      {isShowCartAction || productQuoteEnabled || shoppingListEnabled ? (\n        <Grid\n          sx={{\n            position: 'fixed',\n            bottom: isMobile && isAgenting ? '52px' : 0,\n            left: 0,\n            backgroundColor: '#fff',\n            width: '100%',\n            padding: isMobile ? '0 0 1rem 0' : '16px 0 16px',\n            height: isMobile ? '8rem' : 'auto',\n            marginLeft: 0,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            zIndex: '1000',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid item={isMobile} sx={gridBarStyles}>\n            <Box\n              sx={{\n                width: 263,\n                display: isMobile ? 'none' : 'block',\n              }}\n            />\n            <Box\n              sx={{\n                flex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: isMobile ? 0 : '50px',\n                paddingRight: isMobile ? 0 : '80px',\n              }}\n            >\n              <Box\n                sx={{\n                  width: isMobile ? '100%' : 'calc(66.6667% + 32px)',\n                  display: 'flex',\n                  zIndex: '999',\n                  justifyContent: 'space-between',\n                  ...containerStyle,\n                }}\n              >\n                <Typography\n                  sx={{\n                    color: '#000000',\n                    fontSize: '16px',\n                    fontWeight: '400',\n                  }}\n                >\n                  {b3Lang('purchasedProducts.footer.selectedProducts', {\n                    quantity: checkedArr.length,\n                  })}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: isMobile ? 'wrap' : 'nowrap',\n                    width: isMobile ? '100%' : 'auto',\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    sx={{\n                      fontSize: '16px',\n                      fontWeight: '700',\n                      color: '#000000',\n                    }}\n                  >\n                    {b3Lang('purchasedProducts.footer.subtotal', {\n                      subtotal: currencyFormat(selectedSubTotal),\n                    })}\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginTop: isMobile ? '0.5rem' : 0,\n                      marginLeft: isMobile ? 0 : '20px',\n                      width: isMobile ? '100%' : 'auto',\n                    }}\n                  >\n                    <CustomButton\n                      variant=\"contained\"\n                      ref={ref}\n                      onClick={handleOpenBtnList}\n                      sx={{\n                        marginRight: isMobile ? '1rem' : 0,\n                        width: isMobile ? '100%' : 'auto',\n                      }}\n                      endIcon={<ArrowDropDown />}\n                    >\n                      {b3Lang('purchasedProducts.footer.addSelectedTo')}\n                    </CustomButton>\n\n                    <Menu\n                      id=\"basic-menu\"\n                      anchorEl={ref.current}\n                      open={isOpen}\n                      onClose={handleClose}\n                      MenuListProps={{\n                        'aria-labelledby': 'basic-button',\n                      }}\n                    >\n                      {buttonList.length > 0 &&\n                        buttonList.map((button) => {\n                          if (button.isDisabled) return null;\n\n                          return (\n                            <MenuItem\n                              key={button.key}\n                              onClick={() => {\n                                button.handleClick();\n                              }}\n                            >\n                              {button.name}\n                            </MenuItem>\n                          );\n                        })}\n                    </Menu>\n                  </Box>\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  width: '33.3333%',\n                  display: isMobile ? 'none' : 'block',\n                }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      ) : null}\n\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('purchasedProducts.footer.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleAddSelectedToShoppingList}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isShoppingListLoading}\n        setLoading={setIisShoppingListLoading}\n      />\n\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default QuickOrderFooter;\n","import { KeyboardEventHandler, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice, useFeatureFlags } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getVariantInfoBySkus } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { getQuickAddRowFields } from '@/utils/b3Product/shared/config';\nimport { validateProducts } from '@/utils/validateProducts';\n\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\nimport { getCartProductInfo } from '../utils';\n\ninterface AddToListContentProps {\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n}\n\nconst LEVEL = 3;\n\nconst parseOptionList = (options: string[] | undefined): ShoppingListAddProductOption[] => {\n  return (options || []).reduce((arr: ShoppingListAddProductOption[], optionStr: string) => {\n    try {\n      const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n      arr.push({\n        optionId: `attribute[${option.option_id}]`,\n        optionValue: `${option.id}`,\n      });\n      return arr;\n    } catch (error) {\n      return arr;\n    }\n  }, []);\n};\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const { quickAddToList } = props;\n  const buttonText = b3Lang('purchasedProducts.quickOrderPad.addProductsToCart');\n  const featureFlags = useFeatureFlags();\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const [rows, setRows] = useState(LEVEL);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n  }, [b3Lang, rows]);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleAddRowsClick = () => {\n    setRows(rows + LEVEL);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = async (\n    variantInfoList: CustomFieldItems,\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const notFoundSku: string[] = [];\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const passSku: string[] = [];\n    const notStockSku: {\n      sku: string;\n      stock: number;\n    }[] = [];\n    const orderLimitSku: {\n      sku: string;\n      min: number;\n      max: number;\n    }[] = [];\n\n    const cartProducts = await getCartProductInfo();\n\n    skus.forEach((sku) => {\n      const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n        (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n      );\n\n      if (!variantInfo) {\n        notFoundSku.push(sku);\n        return;\n      }\n\n      const {\n        productId,\n        variantId,\n        option: options,\n        purchasingDisabled = '1',\n        stock,\n        isStock,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n      } = variantInfo;\n\n      const num =\n        cartProducts.find(\n          (item) =>\n            item.sku === variantSku &&\n            Number(item?.variantEntityId || 0) === Number(variantId || 0),\n        )?.quantity || 0;\n\n      const quantity = (skuValue[sku] as number) || 0;\n\n      const allQuantity = (skuValue[sku] as number) + num || 0;\n\n      if (purchasingDisabled === '1') {\n        notPurchaseSku.push(sku);\n        return;\n      }\n\n      if (isStock === '1' && allQuantity > Number(stock)) {\n        notStockSku.push({\n          sku,\n          stock: Number(stock),\n        });\n\n        return;\n      }\n\n      if (\n        maxQuantity !== 0 &&\n        minQuantity !== 0 &&\n        allQuantity > 0 &&\n        (allQuantity > maxQuantity || allQuantity < minQuantity)\n      ) {\n        orderLimitSku.push({\n          sku,\n          min: allQuantity < minQuantity ? minQuantity : 0,\n          max: allQuantity > maxQuantity ? maxQuantity : 0,\n        });\n\n        return;\n      }\n\n      const optionList = parseOptionList(options);\n\n      passSku.push(sku);\n\n      productItems.push({\n        ...variantInfo,\n        newSelectOptionList: optionList,\n        productId: parseInt(productId, 10) || 0,\n        quantity,\n        variantId: parseInt(variantId, 10) || 0,\n      });\n    });\n\n    return {\n      notFoundSku,\n      notPurchaseSku,\n      notStockSku,\n      productItems,\n      passSku,\n      orderLimitSku,\n    };\n  };\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySkus(skus);\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleFrontendValidation = async (\n    value: CustomFieldItems,\n    variantInfoList: CustomFieldItems[],\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const { notFoundSku, notPurchaseSku, productItems, passSku, notStockSku, orderLimitSku } =\n      await getProductItems(variantInfoList, skuValue, skus);\n\n    if (notFoundSku.length > 0) {\n      showErrors(value, notFoundSku, 'sku', '');\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n          notFoundSku: notFoundSku.join(','),\n        }),\n      );\n    }\n\n    if (notPurchaseSku.length > 0) {\n      showErrors(value, notPurchaseSku, 'sku', '');\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.notPurchaseableSku', {\n          notPurchaseSku: notPurchaseSku.join(','),\n        }),\n      );\n    }\n\n    if (notStockSku.length > 0) {\n      const stockSku = notStockSku.map((item) => item.sku);\n\n      notStockSku.forEach((item) => {\n        const { sku, stock } = item;\n\n        showErrors(value, [sku], 'qty', `${stock} in stock`);\n      });\n\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.insufficientStockSku', {\n          stockSku: stockSku.join(','),\n        }),\n      );\n    }\n\n    if (orderLimitSku.length > 0) {\n      orderLimitSku.forEach((item) => {\n        const { min, max, sku } = item;\n\n        const type = min === 0 ? 'Max' : 'Min';\n        const limit = min === 0 ? max : min;\n        showErrors(value, [sku], 'qty', `${type} is ${limit}`);\n\n        const typeText = min === 0 ? 'maximum' : 'minimum';\n        snackbar.error(\n          b3Lang('purchasedProducts.quickAdd.purchaseQuantityLimitMessage', {\n            typeText,\n            limit,\n            sku,\n          }),\n        );\n      });\n    }\n\n    return { productItems, passSku };\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n        let productItems: CustomFieldItems[] = [];\n        let passSku: string[] = [];\n\n        if (featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend']) {\n          if (variantInfoList.length <= 0) {\n            snackbar.error(\n              b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n                notFoundSku: skus.join(','),\n              }),\n            );\n            return;\n          }\n          // Map catalog products to format expected by backend validation\n          const productsToValidate = variantInfoList.map((catalogProduct: CustomFieldItems) => {\n            const matchingSkuFromInput = Object.keys(skuValue).find(\n              (inputSku) => inputSku.toUpperCase() === catalogProduct.variantSku.toUpperCase(),\n            );\n            const requestedQuantity = matchingSkuFromInput\n              ? (skuValue[matchingSkuFromInput] as number)\n              : 0;\n            return {\n              node: {\n                productId: parseInt(catalogProduct.productId, 10) || 0,\n                quantity: requestedQuantity,\n                productsSearch: {\n                  variantId: parseInt(catalogProduct.variantId, 10) || 0,\n                  newSelectOptionList: parseOptionList(catalogProduct.option),\n                },\n              },\n            };\n          });\n\n          const backendValidatedProducts = await validateProducts(productsToValidate, b3Lang);\n\n          productItems = backendValidatedProducts.map(\n            ({ node: validatedProduct }: CustomFieldItems) => {\n              const originalProductInfo = variantInfoList.find(\n                (catalogProduct: CustomFieldItems) =>\n                  parseInt(catalogProduct.productId, 10) === validatedProduct.productId,\n              );\n              return {\n                ...originalProductInfo,\n                newSelectOptionList: validatedProduct.productsSearch.newSelectOptionList,\n                productId: validatedProduct.productId,\n                quantity: validatedProduct.quantity,\n                variantId: validatedProduct.productsSearch.variantId,\n              };\n            },\n          );\n\n          passSku = backendValidatedProducts\n            .map(({ node: validatedProduct }: CustomFieldItems) => {\n              const originalProductInfo = variantInfoList.find(\n                (catalogProduct: CustomFieldItems) =>\n                  parseInt(catalogProduct.productId, 10) === validatedProduct.productId,\n              );\n              return originalProductInfo?.variantSku || '';\n            })\n            .filter(Boolean);\n        } else {\n          ({ productItems, passSku } = await handleFrontendValidation(\n            value,\n            variantInfoList,\n            skuValue,\n            skus,\n          ));\n        }\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          snackbar.error(e.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('purchasedProducts.quickAdd.title')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('purchasedProducts.quickAdd.showMoreRowsButton')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n","import {\n  ChangeEvent,\n  Dispatch,\n  KeyboardEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport styled from '@emotion/styled';\nimport { Box, Divider, TextField, Typography } from '@mui/material';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { AllOptionProps, ShoppingListProductItem, SimpleObject, Variant } from '@/types';\nimport { currencyFormat, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { calculateProductListPrice, getBCPrice } from '@/utils/b3Product/b3Product';\nimport {\n  Base64,\n  getOptionRequestData,\n  getProductOptionsFields,\n} from '@/utils/b3Product/shared/config';\n\nconst Flex = styled('div')({\n  display: 'flex',\n  wordBreak: 'break-word',\n  gap: '8px',\n  flexWrap: 'wrap',\n  padding: '12px 0 12px',\n  '&:first-of-type': {\n    marginTop: '12px',\n  },\n});\n\ninterface FlexItemProps {\n  padding?: string;\n}\n\nconst FlexItem = styled('div')(({ padding }: FlexItemProps) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexShrink: 1,\n  alignItems: 'flex-start',\n  width: '100%',\n  padding: padding || '0 0 0 16px',\n}));\n\nconst ProductImage = styled('img')(() => ({\n  width: '60px',\n  height: '60px',\n  borderRadius: '4px',\n  marginTop: '12px',\n  flexShrink: 0,\n}));\n\nconst ProductOptionText = styled('div')(() => ({\n  fontSize: '0.75rem',\n  lineHeight: '1.5',\n  color: '#455A64',\n}));\n\nconst StyleTextField = styled(TextField)(() => ({\n  '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n    marginTop: '-8px',\n    marginBottom: '8px',\n  },\n}));\n\ninterface ChooseOptionsDialogProps {\n  isOpen: boolean;\n  product?: ShoppingListProductItem;\n  onCancel: () => void;\n  onConfirm: (products: CustomFieldItems[]) => void;\n  isLoading: boolean;\n  setIsLoading: Dispatch<SetStateAction<boolean>>;\n}\n\ninterface ChooseOptionsProductProps extends ShoppingListProductItem {\n  newSelectOptionList: {\n    optionId: string;\n    optionValue: unknown;\n  }[];\n  productId: number;\n  quantity: number;\n  variantId: number;\n  additionalProducts: CustomFieldItems;\n}\n\nexport default function ChooseOptionsDialog(props: ChooseOptionsDialogProps) {\n  const { isOpen, onCancel, onConfirm, product, isLoading, setIsLoading } = props;\n  const b3Lang = useB3Lang();\n\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const [quantity, setQuantity] = useState<number | string>(1);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [variantInfo, setVariantInfo] = useState<Partial<Variant> | null>(null);\n  const [variantSku, setVariantSku] = useState('');\n  const [currentImage, setCurrentImage] = useState<string>(product?.imageUrl || '');\n  const [additionalProducts, setAdditionalProducts] = useState<CustomFieldItems>({});\n  const [productPriceChangeOptions, setProductPriceChangeOptions] = useState<\n    Partial<AllOptionProps>[]\n  >([]);\n  const [newPrice, setNewPrice] = useState<number>(0);\n  const [chooseOptionsProduct, setChooseOptionsProduct] = useState<ChooseOptionsProductProps[]>([]);\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  const isShowPrice = Boolean(product?.isPriceHidden);\n\n  const setChooseOptionsForm = async (product: ShoppingListProductItem) => {\n    try {\n      setIsLoading(true);\n\n      const modifiers =\n        product?.modifiers?.filter(\n          (modifier) =>\n            modifier.type === 'product_list_with_images' || modifier.type === 'product_list',\n        ) || [];\n      const productImages: SimpleObject = {};\n      const additionalProductsParams: CustomFieldItems = {};\n      if (modifiers.length > 0) {\n        const productIds = modifiers.reduce((arr: number[], modifier) => {\n          const { option_values: optionValues } = modifier;\n          optionValues.forEach((option) => {\n            if (option?.value_data?.product_id) {\n              arr.push(option.value_data.product_id);\n            }\n          });\n          return arr;\n        }, []);\n\n        if (productIds.length > 0) {\n          const companyId = companyInfoId || salesRepCompanyId;\n          const { productsSearch } = await searchProducts({\n            productIds,\n            companyId,\n            customerGroupId,\n          });\n\n          productsSearch.forEach((product: CustomFieldItems) => {\n            productImages[product.id] = product.imageUrl;\n            additionalProductsParams[product.id] = product;\n          });\n        }\n      }\n\n      setAdditionalProducts(additionalProductsParams);\n\n      setQuantity(product.quantity);\n      if (product.variants?.length === 1 && product.variants[0]) {\n        setVariantInfo(product.variants[0]);\n      }\n\n      const productOptionsFields = getProductOptionsFields(product, productImages);\n      setFormFields([...productOptionsFields]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getProductPriceOptions = (product: ShoppingListProductItem) => {\n    const newProductPriceChangeOptionLists: Partial<AllOptionProps>[] = [];\n    product.allOptions?.forEach((item) => {\n      if (\n        item.type === 'product_list_with_images' ||\n        item.type === 'product_list' ||\n        item.type === 'checkbox' ||\n        item.type === 'rectangles' ||\n        item.type === 'swatch' ||\n        item.type === 'radio_buttons' ||\n        item.type === 'dropdown'\n      ) {\n        newProductPriceChangeOptionLists.push(item);\n      }\n    });\n\n    setProductPriceChangeOptions(newProductPriceChangeOptionLists);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setChooseOptionsForm(product);\n      setChooseOptionsProduct([]);\n      setNewPrice(0);\n      if (product?.allOptions?.length) {\n        getProductPriceOptions(product);\n      }\n    } else {\n      setQuantity(1);\n      setFormFields([]);\n    }\n    // disabling as we don't need dispatchers here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [product]);\n\n  const getProductPrice = (product: ShoppingListProductItem) => {\n    const { variants = [] } = product;\n\n    let priceNumber = 0;\n    if (variantSku) {\n      const variantCalculatePrice = variants.find(\n        (variant) => variant.sku === variantSku,\n      )?.bc_calculated_price;\n      priceNumber =\n        (showInclusiveTaxPrice\n          ? variantCalculatePrice?.tax_inclusive\n          : variantCalculatePrice?.tax_exclusive) || 0;\n    } else {\n      const variantCalculatePrice = variants[0]?.bc_calculated_price;\n      priceNumber =\n        parseFloat(\n          (showInclusiveTaxPrice\n            ? variantCalculatePrice?.tax_inclusive\n            : variantCalculatePrice?.tax_exclusive\n          )?.toString(),\n        ) || 0;\n    }\n\n    return priceNumber;\n  };\n\n  const handleProductQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value || parseInt(e.target.value, 10) > 0) {\n      setQuantity(e.target.value);\n    }\n  };\n\n  const handleNumberInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (['KeyE', 'Equal', 'Minus'].indexOf(event.code) > -1) {\n      event.preventDefault();\n    }\n  };\n\n  const handleNumberInputBlur = () => {\n    if (!quantity) {\n      setQuantity(1);\n    }\n\n    if (Number(quantity) > 1000000) {\n      setQuantity(1000000);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const formValues = watch();\n  const cache = useRef(formValues);\n\n  const getProductVariantId = useCallback(\n    async (value: CustomFieldItems, changeName = '') => {\n      const isVariantOptionChange =\n        formFields.find((item: CustomFieldItems) => item.name === changeName)?.isVariantOption ||\n        false;\n\n      if (!isVariantOptionChange || !product || !changeName) {\n        return;\n      }\n\n      const { variants = [] } = product || {};\n\n      const variantInfo =\n        variants.find((variant) => {\n          const { option_values: optionValues = [] } = variant;\n\n          const isSelectVariant = optionValues.reduce((isSelect, option) => {\n            if (\n              value[Base64.encode(`attribute[${option.option_id}]`)].toString() !==\n              (option.id || '').toString()\n            ) {\n              return false;\n            }\n            return isSelect;\n          }, true);\n\n          return isSelectVariant;\n        }) || null;\n\n      setVariantSku(variantInfo ? variantInfo.sku : '');\n      setVariantInfo(variantInfo);\n\n      if (variantInfo && (variantInfo.sku || variantInfo.variant_id)) {\n        const currentVariant = variants.find(\n          (variant) =>\n            variant.sku === variantInfo.sku || variant.variant_id === variantInfo.variant_id,\n        );\n\n        setCurrentImage(currentVariant?.image_url || product.imageUrl || '');\n      }\n    },\n    [formFields, product],\n  );\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      getProductVariantId(value, name);\n    });\n\n    if (formFields[0]) {\n      const defaultValues: SimpleObject = formFields.reduce((value: SimpleObject, fields) => {\n        const formFieldValue = value;\n        formFieldValue[fields.name] = fields.default;\n        setValue(fields.name, fields.default);\n        return value;\n      }, {});\n      getProductVariantId(defaultValues, formFields[0].name);\n    }\n\n    return () => subscription.unsubscribe();\n    // disabling as we don't need dispatchers or subscribers in the dep array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formFields, getProductVariantId]);\n\n  const validateQuantityNumber = useCallback(() => {\n    const { purchasing_disabled: purchasingDisabled = true } = variantInfo || {};\n\n    if (purchasingDisabled && !isEnableProduct) {\n      snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n      return false;\n    }\n\n    return true;\n  }, [b3Lang, isEnableProduct, variantInfo]);\n\n  const getOptionList = useCallback(\n    (value: FieldValues) => {\n      const optionsData = getOptionRequestData(formFields, {}, value);\n      return Object.keys(optionsData).map((optionId) => ({\n        optionId,\n        optionValue: optionsData[optionId]?.toString(),\n      }));\n    },\n    [formFields],\n  );\n\n  useEffect(() => {\n    if (cache?.current && isEqual(cache?.current, formValues)) {\n      return;\n    }\n\n    cache.current = formValues;\n    if (Object.keys(formValues).length && formFields.length && productPriceChangeOptions.length) {\n      const optionList = getOptionList(formValues);\n      const { variant_id: variantId = '' } = variantInfo || {};\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      const newChooseOptionsProduct = [\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ];\n\n      if (chooseOptionsProduct[0]) {\n        let optionChangeFlag = false;\n        const { newSelectOptionList } = chooseOptionsProduct[0];\n        newSelectOptionList.forEach((option) => {\n          const findAttributeId = productPriceChangeOptions.findIndex((item) =>\n            option.optionId.includes(String(item.id)),\n          );\n          optionList.forEach((newOption) => {\n            if (\n              option.optionId === newOption.optionId &&\n              option.optionValue !== newOption.optionValue &&\n              findAttributeId !== -1\n            ) {\n              optionChangeFlag = true;\n            }\n          });\n        });\n        if (optionChangeFlag) {\n          setChooseOptionsProduct(newChooseOptionsProduct);\n        }\n      } else {\n        setChooseOptionsProduct(newChooseOptionsProduct);\n      }\n    }\n  }, [\n    additionalProducts,\n    chooseOptionsProduct,\n    formFields.length,\n    formValues,\n    getOptionList,\n    product,\n    productPriceChangeOptions,\n    quantity,\n    validateQuantityNumber,\n    variantInfo,\n  ]);\n\n  useEffect(() => {\n    const getNewProductPrice = async () => {\n      try {\n        if (chooseOptionsProduct.length) {\n          setIsRequestLoading(true);\n          const products = await calculateProductListPrice(chooseOptionsProduct);\n\n          if (products[0]) {\n            const { basePrice, taxPrice } = products[0];\n            const price = getBCPrice(Number(basePrice), Number(taxPrice));\n            setNewPrice(price);\n          }\n        }\n      } catch (err) {\n        b2bLogger.error(err);\n      } finally {\n        setIsRequestLoading(false);\n      }\n    };\n\n    getNewProductPrice();\n  }, [chooseOptionsProduct]);\n\n  const handleConfirmClicked = () => {\n    handleSubmit((value) => {\n      const optionList = getOptionList(value);\n\n      const { variant_id: variantId = '' } = variantInfo || {};\n\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      onConfirm([\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ]);\n    })();\n  };\n\n  const handleCancelClicked = () => {\n    setQuantity(1);\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n    // disabling as reset does not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <B3Dialog\n      isOpen={isOpen}\n      rightSizeBtn={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n      handleLeftClick={handleCancelClicked}\n      handRightClick={handleConfirmClicked}\n      title={b3Lang('shoppingList.chooseOptionsDialog.chooseOptions')}\n      loading={isLoading || isRequestLoading}\n    >\n      <B3Spin isSpinning={isLoading}>\n        {product && (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <ProductImage src={currentImage || product.imageUrl || PRODUCT_DEFAULT_IMAGE} />\n                <Flex>\n                  <FlexItem padding=\"0\">\n                    <Box\n                      sx={{\n                        marginLeft: '16px',\n                      }}\n                    >\n                      <Typography variant=\"body1\" color=\"#212121\">\n                        {product.name}\n                      </Typography>\n                      <Typography variant=\"body1\" color=\"#616161\">\n                        {variantSku || product.sku}\n                      </Typography>\n                      {(product.product_options || []).map((option) => (\n                        <ProductOptionText\n                          key={`${option.option_id}`}\n                        >{`${option.display_name}: ${option.display_value}`}</ProductOptionText>\n                      ))}\n                    </Box>\n                  </FlexItem>\n\n                  <FlexItem>\n                    <span>{b3Lang('shoppingList.chooseOptionsDialog.price')}</span>\n                    {!isShowPrice\n                      ? ''\n                      : currencyFormat(newPrice * Number(quantity) || getProductPrice(product))}\n                  </FlexItem>\n\n                  <FlexItem>\n                    <StyleTextField\n                      type=\"number\"\n                      variant=\"filled\"\n                      label={b3Lang('shoppingList.chooseOptionsDialog.quantity')}\n                      value={quantity}\n                      onChange={handleProductQuantityChange}\n                      onKeyDown={handleNumberInputKeyDown}\n                      onBlur={handleNumberInputBlur}\n                      size=\"small\"\n                      sx={{\n                        width: '60%',\n                        maxWidth: '100px',\n                      }}\n                    />\n                  </FlexItem>\n                </Flex>\n              </Box>\n\n              <Divider\n                sx={{\n                  margin: '16px 0 24px',\n                }}\n              />\n\n              <B3CustomForm\n                formFields={formFields}\n                errors={errors}\n                control={control}\n                getValues={getValues}\n                setValue={setValue}\n              />\n            </Box>\n          </Box>\n        )}\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useCallback, useContext } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport { B3ProductList } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { ShoppingListDetailsContext } from '@/pages/ShoppingListDetails/context/ShoppingListDetailsContext';\nimport { useAppSelector } from '@/store';\nimport { ShoppingListProductItem } from '@/types';\nimport { snackbar } from '@/utils';\n\ninterface ProductTableActionProps {\n  product: ShoppingListProductItem;\n  onAddToListClick: (id: number) => void;\n  onChooseOptionsClick: (id: number) => void;\n  addButtonText: string;\n}\n\nfunction ProductTableAction(props: ProductTableActionProps) {\n  const {\n    product: { id, allOptions: productOptions },\n    onAddToListClick,\n    onChooseOptionsClick,\n    addButtonText,\n  } = props;\n\n  const {\n    state: { isLoading = false },\n  } = useContext(ShoppingListDetailsContext);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  return productOptions && productOptions.length > 0 ? (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onChooseOptionsClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {b3Lang('global.searchProduct.chooseOptionsButton')}\n    </CustomButton>\n  ) : (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onAddToListClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {addButtonText}\n    </CustomButton>\n  );\n}\n\ninterface ProductListDialogProps {\n  isLoading: boolean;\n  isOpen: boolean;\n  searchText: string;\n  productList: ShoppingListProductItem[];\n  onCancel: () => void;\n  onSearchTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n  onProductQuantityChange: (id: number, newQuantity: number) => void;\n  onAddToListClick: (products: CustomFieldItems[]) => void;\n  onChooseOptionsClick: (id: number) => void;\n}\n\nconst ProductTable = B3ProductList<ShoppingListProductItem>;\n\nexport default function ProductListDialog(props: ProductListDialogProps) {\n  const b3Lang = useB3Lang();\n\n  const {\n    isOpen,\n    onCancel,\n    searchText,\n    productList,\n    onSearchTextChange,\n    onSearch,\n    onProductQuantityChange,\n    onAddToListClick,\n    onChooseOptionsClick,\n    isLoading,\n  } = props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const [isMobile] = useMobile();\n\n  const handleCancelClicked = () => {\n    onCancel();\n  };\n\n  const handleSearchKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  const validateQuantityNumber = useCallback(\n    (product: ShoppingListProductItem) => {\n      const { variants = [] } = product || {};\n      const { purchasing_disabled: purchasingDisabled = true } = variants[0] || {};\n\n      if (purchasingDisabled && !isEnableProduct) {\n        snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n        return false;\n      }\n\n      return true;\n    },\n    [b3Lang, isEnableProduct],\n  );\n\n  const handleAddToList = (id: number) => {\n    const product = productList.find((product) => product.id === id);\n\n    if (product && validateQuantityNumber(product || {})) {\n      let variantId: number | string = product.variantId || 0;\n\n      if (!product.variantId && product.variants?.[0]) {\n        variantId = product.variants[0].variant_id;\n      }\n\n      onAddToListClick([\n        {\n          ...product,\n          newSelectOptionList: [],\n          quantity: parseInt(product.quantity.toString(), 10) || 1,\n          variantId,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n      showRightBtn={false}\n      loading={isLoading}\n      maxWidth=\"md\"\n      leftSizeBtn={b3Lang('shoppingLists.close')}\n    >\n      <B3Spin isSpinning={isLoading}>\n        <Box\n          sx={{\n            minWidth: isMobile ? 'initial' : '100%',\n            flex: 1,\n          }}\n        >\n          <TextField\n            hiddenLabel\n            variant=\"filled\"\n            fullWidth\n            size=\"small\"\n            value={searchText}\n            onChange={onSearchTextChange}\n            onKeyDown={handleSearchKeyDown}\n            error={!productList || productList.length <= 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              margin: '12px 0',\n              '& input': {\n                padding: '12px 12px 12px 0',\n              },\n            }}\n          />\n\n          {productList && productList.length > 0 ? (\n            <ProductTable\n              products={productList}\n              quantityEditable\n              type=\"quickOrder\"\n              textAlign={isMobile ? 'left' : 'right'}\n              canToProduct\n              onProductQuantityChange={onProductQuantityChange}\n              renderAction={(product) => (\n                <ProductTableAction\n                  product={product}\n                  onAddToListClick={handleAddToList}\n                  onChooseOptionsClick={onChooseOptionsClick}\n                  addButtonText={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n                />\n              )}\n              actionWidth=\"180px\"\n            />\n          ) : (\n            <Typography>No products found</Typography>\n          )}\n        </Box>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { calculateProductListPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListProductItem } from '../../../types';\n\nimport ChooseOptionsDialog from './ChooseOptionsDialog';\nimport ProductListDialog from './ProductListDialog';\n\ninterface SearchProductProps {\n  addToList: (products: CustomFieldItems[]) => void;\n}\n\nexport default function SearchProduct({ addToList }: SearchProductProps) {\n  const b3Lang = useB3Lang();\n\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const companyId = companyInfoId || salesRepCompanyId;\n  const [isLoading, setIsLoading] = useState(false);\n  const [productListOpen, setProductListOpen] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [productList, setProductList] = useState<ShoppingListProductItem[]>([]);\n  const [chooseOptionsOpen, setChooseOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<ShoppingListProductItem>();\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleSearchTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const searchProduct = async () => {\n    if (!searchText || isLoading) {\n      return;\n    }\n\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('global.searchProductAddProduct.businessAccountPendingApproval'));\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { productsSearch } = await searchProducts({\n        search: searchText,\n        companyId,\n        customerGroupId,\n        categoryFilter: true,\n      });\n\n      const product = conversionProductsList(productsSearch);\n\n      setProductList(product);\n      setProductListOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchTextKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchProduct();\n    }\n  };\n\n  const handleSearchButtonClicked = () => {\n    searchProduct();\n  };\n\n  const clearProductInfo = () => {\n    setProductList([]);\n  };\n\n  const handleProductListDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(false);\n\n    if (isAdded) {\n      setIsAdded(false);\n    }\n\n    clearProductInfo();\n  };\n\n  const handleProductQuantityChange = (id: number, newQuantity: number) => {\n    const product = productList.find((product) => product.id === id);\n    if (product) {\n      product.quantity = newQuantity;\n    }\n\n    setProductList([...productList]);\n  };\n\n  const handleAddToListClick = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await addToList(products);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleProductListAddToList = async (products: CustomFieldItems[]) => {\n    await handleAddToListClick(products);\n  };\n\n  const handleChangeOptionsClick = (productId: number) => {\n    const product = productList.find((product) => product.id === productId);\n    if (product) {\n      setOptionsProduct({\n        ...product,\n      });\n    }\n    setProductListOpen(false);\n    setChooseOptionsOpen(true);\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(true);\n  };\n\n  const handleChooseOptionsDialogConfirm = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await handleAddToListClick(products);\n      setChooseOptionsOpen(false);\n      setProductListOpen(true);\n    } catch (error) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: '24px 0',\n      }}\n    >\n      <Typography>{b3Lang('global.searchProductAddProduct.searchBySkuOrName')}</Typography>\n      <TextField\n        hiddenLabel\n        placeholder={b3Lang('global.searchProduct.placeholder.quickOrder')}\n        variant=\"filled\"\n        fullWidth\n        size=\"small\"\n        value={searchText}\n        onChange={handleSearchTextChange}\n        onKeyDown={handleSearchTextKeyDown}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          margin: '12px 0',\n          '& input': {\n            padding: '12px 12px 12px 0',\n          },\n        }}\n      />\n      <CustomButton\n        variant=\"outlined\"\n        fullWidth\n        disabled={isLoading}\n        onClick={handleSearchButtonClicked}\n      >\n        <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n          <Box\n            sx={{\n              flex: 1,\n              textAlign: 'center',\n            }}\n          >\n            {b3Lang('global.searchProductAddProduct.searchProduct')}\n          </Box>\n        </B3Spin>\n      </CustomButton>\n\n      <ProductListDialog\n        isOpen={productListOpen}\n        isLoading={isLoading}\n        productList={productList}\n        searchText={searchText}\n        onSearchTextChange={handleSearchTextChange}\n        onSearch={handleSearchButtonClicked}\n        onCancel={handleProductListDialogCancel}\n        onProductQuantityChange={handleProductQuantityChange}\n        onChooseOptionsClick={handleChangeOptionsClick}\n        onAddToListClick={handleProductListAddToList}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={handleChooseOptionsDialogConfirm}\n      />\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { UploadFile as UploadFileIcon } from '@mui/icons-material';\nimport { Box, Card, CardContent, Divider, Typography } from '@mui/material';\n\nimport { B3Upload } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL } from '@/constants';\nimport { useBlockPendingAccountViewPrice, useFeatureFlags } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { createOrUpdateExistingCart } from '@/utils/cartUtils';\n\nimport { addCartProductToVerify } from '../utils';\n\nimport QuickAdd from './QuickAdd';\nimport SearchProduct from './SearchProduct';\n\nexport default function QuickOrderPad() {\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [isOpenBulkLoadCSV, setIsOpenBulkLoadCSV] = useState(false);\n  const [productData, setProductData] = useState<CustomFieldItems>([]);\n  const [addBtnText, setAddBtnText] = useState<string>('Add to cart');\n  const [isLoading, setIsLoading] = useState(false);\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n  const featureFlags = useFeatureFlags();\n  const backendValidationEnabled =\n    featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend'];\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n\n  const getSnackbarMessage = (res: any) => {\n    if (res && !res.errors) {\n      snackbar.success(b3Lang('purchasedProducts.quickOrderPad.productsAdded'), {\n        action: {\n          label: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          onClick: () => {\n            if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n              window.location.href = CART_URL;\n            }\n          },\n        },\n      });\n    } else {\n      snackbar.error('Error has occurred');\n    }\n  };\n\n  const quickAddToList = async (products: CustomFieldItems[]) => {\n    const res = await createOrUpdateExistingCart(products);\n\n    if (res && res.errors) {\n      snackbar.error(res.errors[0].message);\n    } else {\n      snackbar.success(b3Lang('purchasedProducts.quickOrderPad.productsAdded'), {\n        action: {\n          label: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          onClick: () => {\n            if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n              window.location.href = CART_URL;\n            }\n          },\n        },\n      });\n    }\n\n    b3TriggerCartNumber();\n\n    return res;\n  };\n\n  const getValidProducts = (products: CustomFieldItems) => {\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const limitProduct: CustomFieldItems[] = [];\n    const minLimitQuantity: CustomFieldItems[] = [];\n    const maxLimitQuantity: CustomFieldItems[] = [];\n    const outOfStock: string[] = [];\n\n    products.forEach((item: CustomFieldItems) => {\n      const { products: currentProduct, qty } = item;\n      const {\n        option,\n        isStock,\n        stock,\n        purchasingDisabled,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n        variantId,\n        productId,\n        modifiers,\n      } = currentProduct;\n      if (purchasingDisabled === '1' || purchasingDisabled) {\n        notPurchaseSku.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock === 0) {\n        outOfStock.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock > 0 && stock < Number(qty)) {\n        limitProduct.push({\n          variantSku,\n          AvailableAmount: stock,\n        });\n        return;\n      }\n\n      if (Number(minQuantity) > 0 && Number(qty) < Number(minQuantity)) {\n        minLimitQuantity.push({\n          variantSku,\n          minQuantity,\n        });\n\n        return;\n      }\n\n      if (Number(maxQuantity) > 0 && Number(qty) > Number(maxQuantity)) {\n        maxLimitQuantity.push({\n          variantSku,\n          maxQuantity,\n        });\n\n        return;\n      }\n\n      const optionsList = option.map((item: CustomFieldItems) => ({\n        optionId: item.option_id,\n        optionValue: item.id,\n      }));\n\n      productItems.push({\n        productId: parseInt(productId, 10) || 0,\n        variantId: parseInt(variantId, 10) || 0,\n        quantity: Number(qty),\n        optionSelections: optionsList,\n        allOptions: modifiers,\n      });\n    });\n\n    return {\n      notPurchaseSku,\n      productItems,\n      limitProduct,\n      minLimitQuantity,\n      maxLimitQuantity,\n      outOfStock,\n    };\n  };\n\n  const handleAddToCart = async (productsData: CustomFieldItems) => {\n    setIsLoading(true);\n    try {\n      const { stockErrorFile, validProduct } = productsData;\n\n      const {\n        notPurchaseSku,\n        productItems,\n        limitProduct,\n        minLimitQuantity,\n        maxLimitQuantity,\n        outOfStock,\n      } = getValidProducts(validProduct);\n\n      if (productItems.length > 0) {\n        const res = await createOrUpdateExistingCart(productItems);\n\n        getSnackbarMessage(res);\n        b3TriggerCartNumber();\n      }\n\n      if (limitProduct.length > 0) {\n        limitProduct.forEach((data: CustomFieldItems) => {\n          snackbar.warning(\n            b3Lang('purchasedProducts.quickOrderPad.notEnoughStock', {\n              variantSku: data.variantSku,\n            }),\n            {\n              description: b3Lang('purchasedProducts.quickOrderPad.availableAmount', {\n                availableAmount: data.AvailableAmount,\n              }),\n            },\n          );\n        });\n      }\n\n      if (notPurchaseSku.length > 0) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n            notPurchaseSku: notPurchaseSku.join(','),\n          }),\n        );\n      }\n\n      if (outOfStock.length > 0 && stockErrorFile) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.outOfStockSku', {\n            outOfStock: outOfStock.join(','),\n          }),\n          {\n            action: {\n              label: b3Lang('purchasedProducts.quickOrderPad.downloadErrorsCSV'),\n              onClick: () => {\n                window.location.href = stockErrorFile;\n              },\n            },\n          },\n        );\n      }\n\n      if (minLimitQuantity.length > 0) {\n        minLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n              minQuantity: data.minQuantity,\n              sku: data.variantSku,\n            }),\n          );\n        });\n      }\n\n      if (maxLimitQuantity.length > 0) {\n        maxLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n              maxQuantity: data.maxQuantity,\n              sku: data.variantSku,\n            }),\n          );\n        });\n      }\n\n      setIsOpenBulkLoadCSV(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickSearchAddCart = async (productData: CustomFieldItems[]) => {\n    const currentProducts = productData.map((item) => {\n      return {\n        node: {\n          ...item,\n          productsSearch: item,\n        },\n      };\n    });\n    const isPassVerify = await addCartProductToVerify(\n      currentProducts as CustomFieldItems[],\n      b3Lang,\n    );\n    try {\n      if (isPassVerify) {\n        await quickAddToList(productData);\n      }\n    } catch (error) {\n      b2bLogger.error(error);\n    }\n\n    return productData;\n  };\n\n  const handleOpenUploadDiag = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart'));\n    } else {\n      setIsOpenBulkLoadCSV(true);\n    }\n  };\n\n  const handleBackendQuickSearchAddToCart = async (productData: CustomFieldItems[]) => {\n    try {\n      await quickAddToList(productData);\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        snackbar.error(e.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (productData?.length > 0) {\n      setAddBtnText(\n        b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart', {\n          quantity: productData.length,\n        }),\n      );\n    }\n  }, [b3Lang, productData]);\n\n  return (\n    <Card sx={{ marginBottom: isMobile ? '8.5rem' : '50px' }}>\n      <CardContent>\n        <Box>\n          <Typography variant=\"h5\" sx={{ marginBottom: '1rem' }}>\n            {b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n          </Typography>\n\n          <SearchProduct\n            addToList={\n              backendValidationEnabled\n                ? handleBackendQuickSearchAddToCart\n                : handleQuickSearchAddCart\n            }\n          />\n\n          <Divider />\n\n          <QuickAdd quickAddToList={quickAddToList} />\n\n          <Divider />\n\n          <Box sx={{ margin: '20px 0 0' }}>\n            <CustomButton variant=\"text\" onClick={() => handleOpenUploadDiag()}>\n              <UploadFileIcon sx={{ marginRight: '8px' }} />\n              {b3Lang('purchasedProducts.quickOrderPad.bulkUploadCSV')}\n            </CustomButton>\n          </Box>\n        </Box>\n      </CardContent>\n\n      <B3Upload\n        isOpen={isOpenBulkLoadCSV}\n        setIsOpen={setIsOpenBulkLoadCSV}\n        handleAddToList={handleAddToCart}\n        setProductData={setProductData}\n        addBtnText={addBtnText}\n        isLoading={isLoading}\n        isToCart\n      />\n    </Card>\n  );\n}\n"],"names":["isB2BUser","useAppSelector","isB2BUserSelector","isAgenting","b2bFeatures","masqueradeCompany","isMobile","useMobile","isRequestLoading","setIsRequestLoading","useState","checkedArr","setCheckedArr","purchasabilityPermission","rolePermissionSelector","isShowQuickOrderPad","jsxs","Box","sx","width","children","jsx","display","justifyContent","Grid","m","container","spacing","item","xs","backgroundColor","boxShadow","borderRadius","pr","QuickOrderTable","pt","pl","QuickOrderPad","position","bottom","left","zIndex","QuickOrderFooter","getProductPriceIncTaxOrExTaxBySetting","variants","variantId","variantSku","global","showInclusiveTaxPrice","store","getState","currentVariantInfo","find","Number","variant_id","sku","isEmpty","bcCalculatedPrice","bc_calculated_price","tax_inclusive","tax_exclusive","orderedProducts","data","q","first","offset","beginDateAt","endDateAt","orderBy","getOrderedProducts","B3Request","graphqlB2B","query","StyledImage","styled","maxWidth","height","marginRight","QuickOrderCard","props","shoppingDetail","checkBox","handleUpdateProductQty","b3Lang","useB3Lang","quantity","imageUrl","productName","optionList","basePrice","lastOrderedAt","productsSearch","price","currentVariants","currentImage","b2bGetVariantImageByVariantInfo","borderTop","CardContent","color","src","PRODUCT_DEFAULT_IMAGE","alt","loading","flex","Typography","variant","margin","length","map","option","fontSize","lineHeight","display_name","display_value","currencyFormat","TextField","size","type","label","inputProps","inputMode","pattern","value","onChange","e","id","target","displayFormat","StyleQuickOrderTable","flexDirection","verticalAlign","paddingTop","StyledTextField","paddingRight","defaultSortKey","sortKeys","product","paginationTableRef","useRef","companyInfoId","company","companyInfo","customerGroupId","customer","search","setSearch","distanceDay","handleSetOrderBy","order","useSort","total","setTotalCount","currency_code","currencyCode","activeCurrencyInfoSelector","listItems","current","getList","listCacheItems","getCacheList","newListItems","node","newListCacheItems","setList","setCacheAllList","showPrice","row","isPriceHidden","getDisplayPrice","productInfo","showText","forcedSkip","handleSetCheckedQty","cacheProductList","qty","currentProduct","productId","columnItems","key","title","render","alignItems","isSortable","priceIncTax","padding","style","textAlign","B3Spin","isSpinning","marginBottom","mr","B3FilterSearch","h","searchBGColor","handleChange","async","handleSearchProduct","B3FilterMore","filterMoreInfo","startPicker","isEnabled","defaultValue","pickerKey","endPicker","isShowMore","params","startValue","endValue","B3FilterPicker","handlePickerChange","mt","customWidth","B3PaginationTable","ref","rowsPerPageOptions","getRequestList","edges","totalCount","listProducts","productIds","forEach","includes","push","searchProducts","companyId","newProductsSearch","conversionProductsList","err","snackbar","error","handleGetProductsById","searchParams","isCustomRender","showCheckbox","showSelectAllCheckbox","disableCheckbox","hover","labelRowsPerPage","showBorder","requestLoading","getSelectCheckbox","selectCheckbox","productList","checkedItems","reduce","pre","newItems","itemIsMobileSpacing","isSelectOtherPageCheckbox","noDataText","sortDirection","sortByFn","renderItem","_","getCartProductInfo","site","cart","getCart","lineItems","Object","values","addCartProductToVerify","b3lang","cartProducts","checkItem","num","variantEntityId","every","handleVerifyProduct","products","inventoryLevel","inventoryTracking","orderQuantityMaximum","orderQuantityMinimum","isEnableProduct","blockPendingQuoteNonPurchasableOOS","isStock","purchasingDisabled","stock","productSku","currentVariant","purchasing_disabled","inventory_level","notPurchaseSku","isVerify","minQuantity","maxQuantity","state","productQuoteEnabled","shoppingListEnabled","useContext","GlobalContext","featureFlags","useFeatureFlags","backendValidationEnabled","isShowCartAction","isDesktopLimit","useMediaQuery","isOpen","setIsOpen","selectedSubTotal","setSelectedSubTotal","openShoppingList","setOpenShoppingList","isOpenCreateShopping","setIsOpenCreateShopping","isShoppingListLoading","setIisShoppingListLoading","navigate","useNavigate","containerStyle","handleClose","showAddToCartSuccessMessage","success","action","onClick","window","b2b","callbacks","dispatchEvent","location","href","CART_URL","handleFrontedAddSelectedToCart","getInventoryInfos","inventoryInfos","inventory","currentInventoryInfo","options","optionId","product_option_id","optionValue","optionSelections","allOptions","parseInt","product_id","handleSetCartLineItems","res","createOrUpdateExistingCart","errors","message","b3TriggerCartNumber","getOptionsList","handleShoppingClose","isTrue","handleCloseShoppingClick","handleCreateShoppingClick","buttonList","name","handleClick","uniq","Error","handleBackendAddSelectedToCart","isDisabled","productsWithSku","filter","checkedItem","noSkuProducts","newProductInfo","errorMessage","isFondVariant","newProducts","tax","optionsList","currentProductSearch","variantItem","quoteListitem","uuid","newSelectOptionList","primaryImage","image_url","JSON","stringify","isValidQty","validProductQty","calculateProductListPrice","validatedProducts","validateProducts","addQuoteDraftProducts","addToQuote","b2bLogger","useEffect","gridBarStyles","flexBasis","flexGrow","Fragment","marginLeft","flexWrap","paddingLeft","fontWeight","subtotal","marginTop","CustomButton","handleOpenBtnList","endIcon","ArrowDropDown","Menu","anchorEl","open","onClose","MenuListProps","button","MenuItem","OrderShoppingList","dialogTitle","onConfirm","items","newOptionLists","getValidOptionsList","addToShoppingList","addProductToShoppingList","addProductToBcShoppingList","shoppingListId","onCreate","handleOpenCreateDialog","isLoading","setLoading","CreateShoppingList","LEVEL","parseOptionList","arr","optionStr","parse","option_id","QuickAdd","quickAddToList","buttonText","companyStatus","status","rows","setRows","formFields","setFormFields","setIsLoading","loopRows","fn","Array","fill","index","getQuickAddRowFields","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","control","handleSubmit","getValues","formState","setError","setValue","useForm","mode","getProductData","skuValue","isValid","validateSkuInput","skus","keys","showErrors","inputType","skuFieldName","replace","handleFrontendValidation","variantInfoList","notFoundSku","productItems","passSku","notStockSku","orderLimitSku","variantInfo","toUpperCase","allQuantity","min","max","getProductItems","join","stockSku","limit","typeText","handleAddToList","info","getVariantInfoBySkus","getVariantList","productsToValidate","catalogProduct","matchingSkuFromInput","inputSku","requestedQuantity","backendValidatedProducts","validatedProduct","originalProductInfo","Boolean","clearInputValue","spinningHeight","textTransform","ml","handleAddRowsClick","onKeyDown","B3CustomForm","fullWidth","disabled","tip","Flex","wordBreak","gap","FlexItem","flexShrink","ProductImage","ProductOptionText","StyleTextField","ChooseOptionsDialog","onCancel","salesRepCompanyId","setQuantity","setVariantInfo","setVariantSku","setCurrentImage","additionalProducts","setAdditionalProducts","productPriceChangeOptions","setProductPriceChangeOptions","newPrice","setNewPrice","chooseOptionsProduct","setChooseOptionsProduct","isShowPrice","modifiers","modifier","productImages","additionalProductsParams","option_values","optionValues","value_data","productOptionsFields","getProductOptionsFields","setChooseOptionsForm","newProductPriceChangeOptionLists","getProductPriceOptions","watch","reset","formValues","cache","getProductVariantId","useCallback","changeName","isVariantOption","isSelect","Base64","encode","toString","subscription","defaultValues","fields","default","unsubscribe","validateQuantityNumber","getOptionList","optionsData","getOptionRequestData","isEqual","newChooseOptionsProduct","optionChangeFlag","findAttributeId","findIndex","String","newOption","taxPrice","getBCPrice","getNewProductPrice","B3Dialog","rightSizeBtn","handleLeftClick","handleCancelClicked","handRightClick","handleConfirmClicked","product_options","priceNumber","variantCalculatePrice","parseFloat","getProductPrice","event","indexOf","code","preventDefault","onBlur","handleNumberInputBlur","Divider","ProductTableAction","productOptions","onAddToListClick","onChooseOptionsClick","addButtonText","ShoppingListDetailsContext","ProductTable","B3ProductList","ProductListDialog","searchText","onSearchTextChange","onSearch","onProductQuantityChange","showRightBtn","leftSizeBtn","minWidth","hiddenLabel","InputProps","startAdornment","InputAdornment","SearchIcon","quantityEditable","canToProduct","renderAction","actionWidth","SearchProduct","addToList","productListOpen","setProductListOpen","isAdded","setIsAdded","setSearchText","setProductList","chooseOptionsOpen","setChooseOptionsOpen","optionsProduct","setOptionsProduct","handleSearchTextChange","searchProduct","categoryFilter","handleSearchButtonClicked","handleAddToListClick","placeholder","handleProductListDialogCancel","handleProductQuantityChange","newQuantity","handleChooseOptionsDialogCancel","isOpenBulkLoadCSV","setIsOpenBulkLoadCSV","productData","setProductData","addBtnText","setAddBtnText","Card","currentProducts","isPassVerify","UploadFileIcon","B3Upload","stockErrorFile","validProduct","productsData","limitProduct","minLimitQuantity","maxLimitQuantity","outOfStock","AvailableAmount","getValidProducts","getSnackbarMessage","warning","description","availableAmount","isToCart"],"mappings":"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"}