{"version":3,"file":"getQuoteExtraFields-BMutsMTX.js","sources":["../../src/components/B3CollapseContainer.tsx","../../src/pages/quote/components/FileUpload.tsx","../../src/pages/quote/components/QuoteAttachment.tsx","../../src/pages/quote/style.ts","../../src/pages/quote/components/QuoteInfoAndExtrafieldsItem.tsx","../../src/pages/quote/components/QuoteInfo.tsx","../../src/pages/quote/components/QuoteNote.tsx","../../src/pages/quote/utils/getQuoteExtraFields.ts"],"sourcesContent":["import { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\nimport { Box, Collapse, Typography } from '@mui/material';\n\ninterface CollapseContainerProps {\n  title?: string | ReactElement;\n  header?: ReactNode;\n  defaultOpen?: boolean;\n  children: ReactNode;\n  handleOnChange?: (open: boolean) => void;\n}\n\nexport default function B3CollapseContainer(props: CollapseContainerProps) {\n  const { children, title = '', header, defaultOpen = false, handleOnChange } = props;\n\n  const [open, setOpen] = useState(defaultOpen);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  useEffect(() => {\n    if (handleOnChange) handleOnChange(open);\n  }, [handleOnChange, open]);\n\n  useEffect(() => {\n    if (defaultOpen) {\n      setOpen(defaultOpen);\n    }\n  }, [defaultOpen]);\n\n  return (\n    <Box>\n      <Box\n        onClick={handleClick}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          cursor: 'pointer',\n          alignItems: 'center',\n        }}\n      >\n        {header || <Typography variant=\"h5\">{title}</Typography>}\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </Box>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {children}\n      </Collapse>\n    </Box>\n  );\n}\n","import { forwardRef, Ref, useImperativeHandle, useState } from 'react';\nimport { DropzoneArea } from 'react-mui-dropzone';\nimport styled from '@emotion/styled';\nimport {\n  AttachFile as AttachFileIcon,\n  Delete as DeleteIcon,\n  Help as HelpIcon,\n} from '@mui/icons-material';\nimport { Box, Tooltip, Typography, useTheme } from '@mui/material';\nimport noop from 'lodash-es/noop';\nimport { v1 as uuid } from 'uuid';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useB3Lang } from '@/lib/lang';\nimport { uploadB2BFile } from '@/shared/service/b2b';\nimport { snackbar } from '@/utils';\n\nimport { FILE_UPLOAD_ACCEPT_TYPE } from '../../../constants';\n\nconst FileUploadContainer = styled(Box)(({ style }) => ({\n  '& .file-upload-area': {\n    cursor: 'pointer',\n    '& .MuiDropzoneArea-textContainer': {\n      display: 'flex',\n      alignItems: 'center',\n      color: style?.color || '#1976D2',\n    },\n    '& .MuiDropzoneArea-text': {\n      order: 1,\n      textTransform: 'uppercase',\n      fontWeight: 500,\n      fontSize: '14px',\n      lineHeight: '24px',\n    },\n  },\n}));\n\nconst FileListItem = styled(Box)((props: CustomFieldItems) => ({\n  display: 'flex',\n  background: props.hasdelete === 'true' ? 'rgba(25, 118, 210, 0.3)' : 'rgba(0, 0, 0, 0.12)',\n  borderRadius: '18px',\n  padding: '6px 8px',\n  alignItems: 'center',\n  margin: '0 0 2px',\n  color: 'rgba(0, 0, 0, 0.54)',\n  '& .fileList-name-area': {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n  },\n  '& .fileList-name': {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    flexGrow: 1,\n    flexBasis: '100px',\n    maxWidth: '200px',\n    color: '#313440',\n    fontSize: '14px',\n    cursor: 'pointer',\n  },\n}));\n\nconst FileUserTitle = styled(Typography)({\n  marginBottom: '16px',\n  fontSize: '10px',\n  color: 'rgba(0, 0, 0, 0.38)',\n  padding: '0 12px',\n  textAlign: 'right',\n  wordBreak: 'break-word',\n});\n\nexport interface FileObjects {\n  id?: string;\n  fileName: string;\n  fileType: string;\n  fileUrl: string;\n  fileSize?: number;\n  title?: string;\n  hasDelete?: boolean;\n  isCustomer?: boolean;\n}\n\ninterface FileUploadProps {\n  title?: string;\n  tips?: string;\n  maxFileSize?: number;\n  fileNumber?: number;\n  acceptedFiles?: string[];\n  onchange?: (file: FileObjects) => void;\n  fileList: FileObjects[];\n  allowUpload?: boolean;\n  onDelete?: (id: string) => void;\n  limitUploadFn?: () => boolean;\n  isEndLoadding?: boolean;\n  requestType?: string;\n}\n\nconst AttachFile = styled(AttachFileIcon)(() => ({\n  transform: 'rotate(45deg)',\n  marginRight: '5px',\n}));\n\nfunction FileUpload(props: FileUploadProps, ref: Ref<unknown>) {\n  const b3Lang = useB3Lang();\n  const {\n    title = b3Lang('global.fileUpload.addAttachment'),\n    tips = b3Lang('global.fileUpload.maxFileSizeMessage'),\n    maxFileSize = 2097152, // 2MB\n    fileNumber = 3,\n    limitUploadFn,\n    acceptedFiles = FILE_UPLOAD_ACCEPT_TYPE,\n    onchange = noop,\n    fileList = [],\n    allowUpload = true,\n    onDelete = noop,\n    isEndLoadding = false,\n    requestType = 'quoteAttachedFile',\n  } = props;\n\n  const theme = useTheme();\n\n  const primaryColor = theme.palette.primary.main;\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useImperativeHandle(ref, () => ({\n    setUploadLoadding: (flag: boolean) => setLoading(flag),\n  }));\n\n  const getMaxFileSizeLabel = (maxSize: number) => {\n    if (maxSize / 1048576 > 1) {\n      return `${(maxSize / 1048576).toFixed(1)}MB`;\n    }\n    if (maxSize / 1024 > 1) {\n      return `${(maxSize / 1024).toFixed(1)}KB`;\n    }\n    return `${maxSize}B`;\n  };\n\n  const getRejectMessage = (rejectedFile: File, acceptedFiles: string[], maxFileSize: number) => {\n    const { size, type } = rejectedFile;\n\n    let isAcceptFileType = false;\n    acceptedFiles.forEach((acceptedFileType: string) => {\n      isAcceptFileType = new RegExp(acceptedFileType).test(type) || isAcceptFileType;\n    });\n\n    let message = '';\n    if (!isAcceptFileType) {\n      message = b3Lang('global.fileUpload.fileTypeNotSupported');\n    }\n\n    if (size > maxFileSize) {\n      message = b3Lang('global.fileUpload.fileSizeExceedsLimit', {\n        maxFileSize: getMaxFileSizeLabel(maxFileSize),\n      });\n    }\n\n    if (message) {\n      snackbar.error(message);\n    }\n\n    return message;\n  };\n\n  const getFileLimitExceedMessage = () => {\n    snackbar.error(\n      b3Lang('global.fileUpload.fileSizeExceedsLimit', {\n        maxFileSize: getMaxFileSizeLabel(maxFileSize),\n      }),\n    );\n    return '';\n  };\n\n  const handleChange = async (files: File[]) => {\n    const file = files.length > 0 ? files[0] : null;\n\n    if (file && limitUploadFn && limitUploadFn()) {\n      return;\n    }\n\n    if (!limitUploadFn && file && fileList.length >= fileNumber) {\n      snackbar.error(b3Lang('global.fileUpload.maxFileNumber', { fileNumber }));\n      return;\n    }\n\n    if (file) {\n      try {\n        setLoading(true);\n        const {\n          code,\n          data: fileInfo,\n          message,\n        } = await uploadB2BFile({\n          file,\n          type: requestType,\n        });\n        if (code === 200) {\n          onchange({\n            ...fileInfo,\n            id: uuid(),\n          });\n        } else {\n          snackbar.error(message);\n        }\n      } finally {\n        if (!isEndLoadding) {\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  const handleDelete = (id: string) => {\n    onDelete(id);\n  };\n\n  const downloadFile = (fileUrl: string) => {\n    if (fileUrl) {\n      window.open(fileUrl, '_blank');\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={loading}>\n      <Box\n        sx={{\n          padding: '12px 0 0',\n          width: '100%',\n        }}\n      >\n        <Box>\n          {fileList.map((file, index) => (\n            <Box key={file.id || index}>\n              <FileListItem hasdelete={(file?.hasDelete || '').toString()}>\n                <Box className=\"fileList-name-area\">\n                  <AttachFile />\n                  <Typography\n                    className=\"fileList-name\"\n                    onClick={() => {\n                      downloadFile(file.fileUrl);\n                    }}\n                  >\n                    {file.fileName}\n                  </Typography>\n                </Box>\n                {file.hasDelete && (\n                  <DeleteIcon\n                    sx={{\n                      cursor: 'pointer',\n                    }}\n                    onClick={() => {\n                      handleDelete(file?.id || '');\n                    }}\n                  />\n                )}\n              </FileListItem>\n              <FileUserTitle>{file.title || ''}</FileUserTitle>\n            </Box>\n          ))}\n        </Box>\n        {allowUpload && (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: '10px',\n            }}\n          >\n            <FileUploadContainer\n              style={{\n                color: primaryColor,\n              }}\n            >\n              <DropzoneArea\n                dropzoneClass=\"file-upload-area\"\n                Icon={AttachFile}\n                filesLimit={1}\n                onChange={handleChange}\n                showPreviews={false}\n                showPreviewsInDropzone={false}\n                maxFileSize={maxFileSize}\n                showAlerts={false}\n                dropzoneText={title}\n                getDropRejectMessage={getRejectMessage}\n                getFileLimitExceedMessage={getFileLimitExceedMessage}\n                acceptedFiles={acceptedFiles}\n              />\n            </FileUploadContainer>\n\n            <Tooltip\n              title={tips}\n              sx={{\n                fontSize: '20px',\n                color: 'rgba(0, 0, 0, 0.54)',\n              }}\n            >\n              <HelpIcon />\n            </Tooltip>\n          </Box>\n        )}\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default forwardRef(FileUpload);\n","import { useEffect, useRef, useState } from 'react';\nimport { Box, Card, CardContent } from '@mui/material';\n\nimport { B3CollapseContainer } from '@/components';\nimport { useRole } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { quoteDetailAttachFileCreate, quoteDetailAttachFileDelete } from '@/shared/service/b2b';\nimport { setDraftQuoteInfo, useAppDispatch, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\n\nimport FileUpload, { FileObjects } from './FileUpload';\n\ninterface UpLoaddingProps extends HTMLInputElement {\n  setUploadLoadding: (flag: boolean) => void;\n}\n\ninterface QuoteAttachmentProps {\n  allowUpload?: boolean;\n  defaultFileList?: FileObjects[];\n  status?: number;\n  quoteId?: number;\n}\n\nexport default function QuoteAttachment(props: QuoteAttachmentProps) {\n  const { allowUpload = true, defaultFileList = [], status, quoteId } = props;\n  const b3Lang = useB3Lang();\n  const dispatch = useAppDispatch();\n\n  const firstName = useAppSelector(({ company }) => company.customer.firstName);\n  const lastName = useAppSelector(({ company }) => company.customer.lastName);\n  const draftQuoteInfo = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteInfo);\n\n  const [roleText] = useRole();\n\n  const [fileList, setFileList] = useState<FileObjects[]>([]);\n\n  const uploadRef = useRef<UpLoaddingProps | null>(null);\n\n  useEffect(() => {\n    if (status === 0) {\n      const { fileInfo = [] }: CustomFieldItems = draftQuoteInfo || {};\n\n      setFileList(typeof fileInfo !== 'object' ? [] : fileInfo);\n    } else if (defaultFileList.length) {\n      setFileList(defaultFileList);\n    }\n    // disabling as it throws render errors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultFileList.length, status]);\n\n  const saveQuoteInfo = (newFileInfo: FileObjects[]) => {\n    if (draftQuoteInfo) {\n      const newQuoteInfo = {\n        ...draftQuoteInfo,\n        fileInfo: newFileInfo,\n      };\n      dispatch(setDraftQuoteInfo(newQuoteInfo));\n    }\n  };\n\n  const handleChange = async (file: FileObjects) => {\n    try {\n      let newFileList: FileObjects[] = [];\n      if (status !== 0) {\n        const createFile: FileObjects = {\n          fileName: file.fileName,\n          fileType: file.fileType,\n          fileUrl: file.fileUrl,\n          fileSize: file.fileSize,\n        };\n        const {\n          quoteAttachFileCreate: { attachFiles },\n        } = await quoteDetailAttachFileCreate({\n          fileList: [\n            {\n              ...createFile,\n            },\n          ],\n          quoteId,\n        });\n\n        createFile.id = attachFiles[0].id;\n        newFileList = [\n          {\n            ...createFile,\n            title: b3Lang('global.quoteAttachment.uploadedByCustomer', {\n              createdBy: attachFiles[0].createdBy,\n            }),\n            hasDelete: true,\n          },\n          ...fileList,\n        ];\n      } else {\n        newFileList = [\n          {\n            ...file,\n            title: b3Lang('global.quoteAttachment.uploadedByCustomerWithName', {\n              firstName,\n              lastName,\n            }),\n            hasDelete: true,\n          },\n          ...fileList,\n        ];\n\n        saveQuoteInfo(newFileList);\n      }\n      setFileList(newFileList);\n    } finally {\n      uploadRef.current?.setUploadLoadding(false);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      uploadRef.current?.setUploadLoadding(true);\n      const deleteFile = fileList.find((file) => file.id === id);\n      const newFileList = fileList.filter((file) => file.id !== id);\n      if (status !== 0 && deleteFile) {\n        await quoteDetailAttachFileDelete({\n          fileId: deleteFile?.id || '',\n          quoteId,\n        });\n      } else {\n        saveQuoteInfo(newFileList);\n      }\n      setFileList(newFileList);\n    } finally {\n      uploadRef.current?.setUploadLoadding(false);\n    }\n  };\n\n  const limitUploadFn = () => {\n    const customerFiles = fileList.filter(\n      (file: FileObjects) => file?.title && file.title.includes('by customer'),\n    );\n    if (customerFiles.length >= 3) {\n      snackbar.error(b3Lang('global.quoteAttachment.maxFilesMessage'));\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer title={b3Lang('global.quoteAttachment.title')}>\n          <Box>\n            <FileUpload\n              ref={uploadRef}\n              requestType={roleText !== 'b2b' ? 'customerQuoteAttachedFile' : 'quoteAttachedFile'}\n              isEndLoadding\n              fileList={fileList}\n              limitUploadFn={limitUploadFn}\n              onchange={handleChange}\n              onDelete={handleDelete}\n              allowUpload={allowUpload}\n            />\n          </Box>\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import styled from '@emotion/styled';\n\ninterface ContainerProps {\n  padding?: string;\n  flexBasis?: string;\n  alignItems?: string;\n  backgroundColor?: string;\n  width?: string;\n  xs?: {\n    [key: string]: string | number;\n  };\n  flexDirection?:\n    | 'column'\n    | 'inherit'\n    | '-moz-initial'\n    | 'initial'\n    | 'revert'\n    | 'unset'\n    | 'column-reverse'\n    | 'row'\n    | 'row-reverse';\n}\n\nconst Container = styled('div')(\n  ({\n    padding = '1rem',\n    alignItems = 'flex-start',\n    flexDirection = 'row',\n    backgroundColor = 'white',\n    width = '100%',\n    xs,\n  }: ContainerProps) => ({\n    display: 'flex',\n    flexDirection,\n    alignItems,\n    padding,\n    width,\n    backgroundColor,\n    ...xs,\n  }),\n);\n\nexport default Container;\n","import { useId } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nimport { useB3Lang } from '@/lib/lang';\nimport { QuoteInfoAndExtrafieldsItemProps } from '@/types/quotes';\n\nimport { Base64 } from '../../../utils/b3Product/shared/config';\n\ninterface QuoteInfoAndExtrafieldsProps {\n  quoteInfo: QuoteInfoAndExtrafieldsItemProps;\n  status?: string;\n}\n\nfunction QuoteInfoAndExtrafieldsItem({ status, quoteInfo }: QuoteInfoAndExtrafieldsProps) {\n  const b3Lang = useB3Lang();\n\n  const {\n    info: { quoteTitle, referenceNumber },\n    extraFields = [],\n    recipients,\n  } = quoteInfo;\n\n  const titleId = useId();\n\n  return (\n    <Box\n      role=\"article\"\n      aria-labelledby={titleId}\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Typography\n        id={titleId}\n        sx={{\n          fontWeight: 400,\n          fontSize: '24px',\n          height: '32px',\n        }}\n      >\n        {b3Lang('quoteDraft.quoteInfo.title')}\n      </Typography>\n      <Box\n        sx={{\n          p: '15px 0',\n        }}\n      >\n        {(quoteTitle || status === 'Draft') && (\n          <Typography>{`${b3Lang('quoteDraft.quoteInfo.titleText')} ${quoteTitle}`}</Typography>\n        )}\n        {(referenceNumber || status === 'Draft') && (\n          <Typography>{`${b3Lang(\n            'quoteDraft.quoteInfo.referenceText',\n          )} ${referenceNumber}`}</Typography>\n        )}\n\n        {status === 'Draft' && !recipients.length ? (\n          <Typography>{b3Lang('quoteDraft.quoteInfo.ccEmailText')}</Typography>\n        ) : (\n          recipients.map((ccEmail) => (\n            <Typography\n              key={`ccEmail-${Base64.encode(ccEmail)}`}\n              sx={{ wordBreak: 'break-all' }}\n            >{`${b3Lang('quoteDraft.quoteInfo.ccEmailText')} ${ccEmail}`}</Typography>\n          ))\n        )}\n\n        {extraFields.map(\n          (field) =>\n            (field.value || status === 'Draft') && (\n              <Typography\n                key={`extraField-${field.fieldName}`}\n              >{`${field.fieldName}: ${field.value}`}</Typography>\n            ),\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuoteInfoAndExtrafieldsItem;\n","import { useId } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport {\n  BillingAddress,\n  ContactInfo,\n  QuoteInfoAndExtrafieldsItemProps,\n  ShippingAddress,\n} from '@/types/quotes';\n\nimport Container from '../style';\n\nimport QuoteInfoAndExtrafieldsItem from './QuoteInfoAndExtrafieldsItem';\n\ninterface QuoteInfoItemType {\n  [key: string]: string;\n}\ninterface InfoProps {\n  contactInfo: ContactInfo;\n  quoteAndExtraFieldsInfo: QuoteInfoAndExtrafieldsItemProps;\n  shippingAddress: ShippingAddress;\n  billingAddress: BillingAddress;\n  handleEditInfoClick?: () => void;\n  status?: string;\n}\n\ntype Keys = string | string[];\n\nconst contactInfoKeys: string[] = ['name', 'email', 'companyName', 'phoneNumber'];\n\nconst addressVerifyKeys: string[] = [\n  'label',\n  'firstName',\n  'lastName',\n  'company',\n  'address',\n  'apartment',\n  'city',\n  'state',\n  'zipCode',\n  'country',\n  'phoneNumber',\n];\n\nconst addressKeys: Keys[] = [\n  'label',\n  ['firstName', 'lastName'],\n  'company',\n  'address',\n  'apartment',\n  ['city', 'state', 'zipCode', 'country'],\n  'phoneNumber',\n];\n\ninterface QuoteInfoItemProps {\n  flag?: string;\n  title: string;\n  info: QuoteInfoItemType;\n  status?: string;\n}\n\nfunction QuoteInfoItem({ flag, title, info, status }: QuoteInfoItemProps) {\n  const keyTable = flag === 'info' ? contactInfoKeys : addressKeys;\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const noAddressText =\n    status === 'Draft'\n      ? `Please add ${flag === 'Billing' ? 'billing' : 'shipping'} address `\n      : `No ${flag === 'Billing' ? 'billing' : 'shipping'} address`;\n\n  const isComplete =\n    flag !== 'info' ? addressVerifyKeys.some((item: string) => info && !!info[item]) : false;\n\n  const infoPaddingLeft = flag === 'info' || isMobile ? 0 : '10px';\n  const titleId = useId();\n\n  return (\n    <Box\n      aria-labelledby={titleId}\n      role=\"article\"\n      sx={{\n        width: isMobile || flag === 'info' ? '100%' : '33.3%',\n        paddingLeft: infoPaddingLeft,\n      }}\n    >\n      <Typography\n        id={titleId}\n        sx={{\n          fontWeight: 400,\n          fontSize: '24px',\n          height: '32px',\n        }}\n      >\n        {title}\n      </Typography>\n      <Box\n        sx={{\n          p: '15px 0',\n        }}\n      >\n        {(isComplete || flag === 'info') &&\n          JSON.stringify(info) !== '{}' &&\n          keyTable.map((list: Keys) => {\n            if (list === 'quoteTitle') {\n              return status === 'Draft' ? (\n                <Typography\n                  sx={{\n                    wordBreak: 'break-all',\n                  }}\n                  key={list}\n                  variant=\"body1\"\n                >\n                  {`${b3Lang('quoteDraft.quoteInfo.quoteTitle')}${info[list] || ''}`}\n                </Typography>\n              ) : (\n                ''\n              );\n            }\n\n            if (typeof list === 'string') {\n              return (\n                <Typography key={list} variant=\"body1\">\n                  {(info && info[list]) || ''}\n                </Typography>\n              );\n            }\n\n            return (\n              <Typography key={`${list}`} variant=\"body1\">\n                {list.map((item: string, index: number) => {\n                  if (index === list.length - 1) {\n                    return info[item] || '';\n                  }\n                  if (item === 'firstName') return `${info[item] || ''} `;\n                  return info[item] ? `${info[item] || ''}, ` : '';\n                })}\n              </Typography>\n            );\n          })}\n\n        {!isComplete && flag !== 'info' && <Box>{noAddressText}</Box>}\n      </Box>\n    </Box>\n  );\n}\n\nfunction QuoteInfo({\n  quoteAndExtraFieldsInfo,\n  contactInfo,\n  shippingAddress,\n  billingAddress,\n  handleEditInfoClick,\n  status,\n}: InfoProps) {\n  const b3Lang = useB3Lang();\n  const [isMobile] = useMobile();\n\n  return (\n    <Container\n      flexDirection=\"column\"\n      xs={{\n        boxShadow:\n          '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n        borderRadius: '4px',\n      }}\n    >\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexDirection: isMobile ? 'column' : 'row',\n        }}\n      >\n        <Box\n          sx={{\n            width: isMobile ? '100%' : '33.3%',\n          }}\n        >\n          <QuoteInfoItem\n            title={b3Lang('quoteDraft.contactInfo.contact')}\n            flag=\"info\"\n            status={status}\n            info={contactInfo as unknown as QuoteInfoItemType}\n          />\n          <QuoteInfoAndExtrafieldsItem status={status} quoteInfo={quoteAndExtraFieldsInfo} />\n        </Box>\n\n        <QuoteInfoItem\n          title={b3Lang('global.quoteInfo.billing')}\n          flag=\"Billing\"\n          status={status}\n          info={billingAddress as unknown as QuoteInfoItemType}\n        />\n\n        <QuoteInfoItem\n          title={b3Lang('global.quoteInfo.shipping')}\n          flag=\"Shipping\"\n          status={status}\n          info={shippingAddress as unknown as QuoteInfoItemType}\n        />\n      </Box>\n      {handleEditInfoClick && (\n        <CustomButton\n          sx={{\n            mt: '10px',\n            mb: '15px',\n          }}\n          onClick={handleEditInfoClick}\n          variant=\"outlined\"\n        >\n          {b3Lang('global.quoteInfo.editInfo')}\n        </CustomButton>\n      )}\n    </Container>\n  );\n}\n\nexport default QuoteInfo;\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Card, CardContent, TextField, Typography } from '@mui/material';\n\nimport { B3CollapseContainer } from '@/components';\nimport { useB3Lang } from '@/lib/lang';\nimport {\n  isB2BUserSelector,\n  rolePermissionSelector,\n  setDraftQuoteInfoNote,\n  store,\n  useAppSelector,\n} from '@/store';\n\ninterface QuoteNoteProps {\n  quoteStatus?: string | number;\n  quoteNotes?: string;\n}\n\nexport default function QuoteNote(props: QuoteNoteProps) {\n  const b3Lang = useB3Lang();\n  const { quoteStatus, quoteNotes = '' } = props;\n\n  const [noteText, setNoteText] = useState('');\n  const [defaultOpen, setDefaultOpen] = useState(false);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n\n  const quotesActionsPermission = isB2BUser ? b2bPermissions.quotesCreateActionsPermission : true;\n\n  const handleNoteTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setNoteText(event?.target.value || '');\n    store.dispatch(setDraftQuoteInfoNote(event?.target.value || ''));\n  };\n\n  useEffect(() => {\n    const note = store.getState().quoteInfo.draftQuoteInfo.note || '';\n\n    setNoteText(note);\n  }, []);\n\n  useEffect(() => {\n    store.dispatch(setDraftQuoteInfoNote(noteText || ''));\n  }, [noteText]);\n\n  useEffect(() => {\n    if (quoteNotes) setDefaultOpen(true);\n  }, [quoteNotes]);\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer\n          title={\n            quoteStatus && quoteStatus === 'Draft'\n              ? b3Lang('global.quoteNote.message')\n              : b3Lang('global.quoteNote.notes')\n          }\n          defaultOpen={defaultOpen}\n        >\n          <Box\n            sx={{\n              padding: '16px 0',\n            }}\n          >\n            {quoteStatus && quoteStatus === 'Draft' && (\n              <Box\n                sx={{\n                  fontSize: '16px',\n                  color: 'rgba(0, 0, 0, 0.38)',\n                  mb: '16px',\n                }}\n              >\n                {b3Lang('global.quoteNote.messageNote')}\n              </Box>\n            )}\n            {quoteNotes ? (\n              <Typography\n                variant=\"body1\"\n                style={{\n                  whiteSpace: 'pre-line',\n                  maxHeight: '400px',\n                  overflow: 'auto',\n                }}\n              >\n                {quoteNotes}\n              </Typography>\n            ) : (\n              <Box>\n                {quotesActionsPermission ? (\n                  <TextField\n                    multiline\n                    fullWidth\n                    rows={5}\n                    value={noteText}\n                    onChange={handleNoteTextChange}\n                    label={b3Lang('global.quoteNote.typeMessage')}\n                    size=\"small\"\n                    variant=\"filled\"\n                    sx={{\n                      '& .MuiFormLabel-root': {\n                        color: 'rgba(0, 0, 0, 0.38)',\n                      },\n                    }}\n                  />\n                ) : null}\n              </Box>\n            )}\n          </Box>\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { getQuoteExtraFieldsConfig } from '@/shared/service/b2b';\nimport { QuoteExtraFieldsOrigin, QuoteFormattedItemsProps } from '@/types/quotes';\nimport b2bLogger from '@/utils/b3Logger';\n\nconst handleConversionExtraItemFormat = (quoteExtraFields: QuoteExtraFieldsOrigin[]) => {\n  const formattedQuoteExtraFields = quoteExtraFields.map((item) => {\n    const { listOfValue } = item;\n\n    const currentItems: QuoteFormattedItemsProps = {\n      isExtraFields: true,\n      name: item.fieldName || '',\n      label: item.labelName || '',\n      required: item.isRequired,\n      default: item.defaultValue || '',\n      fieldType: item.fieldCategory || '',\n      xs: 6,\n      variant: 'filled',\n      size: 'small',\n      id: item.id,\n    };\n\n    switch (item.fieldCategory) {\n      case 'dropdown':\n        if (listOfValue) {\n          const options = listOfValue?.map((option) => ({\n            label: option,\n            value: option,\n          }));\n\n          if (options.length > 0) {\n            currentItems.options = options;\n          }\n        }\n\n        break;\n      case 'number':\n        currentItems.max = item.maximumValue || '';\n        break;\n      case 'multiline':\n        currentItems.rows = item.numberOfRows || '';\n        break;\n      default:\n        currentItems.maxLength = item.maximumLength || '';\n        break;\n    }\n\n    return currentItems;\n  });\n\n  return formattedQuoteExtraFields;\n};\n\nconst getB2BQuoteExtraFields = async () => {\n  let quoteExtraFieldsList: QuoteFormattedItemsProps[] = [];\n  try {\n    const { quoteExtraFieldsConfig } = await getQuoteExtraFieldsConfig();\n\n    const visibleFields = quoteExtraFieldsConfig.filter((item) => item.visibleToEnduser);\n\n    const formattedQuoteExtraFields = handleConversionExtraItemFormat(visibleFields);\n\n    quoteExtraFieldsList = formattedQuoteExtraFields;\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  return quoteExtraFieldsList;\n};\n\nexport default getB2BQuoteExtraFields;\n"],"names":["B3CollapseContainer","props","children","title","header","defaultOpen","handleOnChange","open","setOpen","useState","handleClick","useEffect","Box","jsxs","jsx","Typography","ExpandLess","ExpandMore","Collapse","FileUploadContainer","styled","style","FileListItem","FileUserTitle","AttachFile","AttachFileIcon","FileUpload","ref","b3Lang","useB3Lang","tips","maxFileSize","fileNumber","limitUploadFn","acceptedFiles","FILE_UPLOAD_ACCEPT_TYPE","onchange","noop","fileList","allowUpload","onDelete","isEndLoadding","requestType","primaryColor","useTheme","loading","setLoading","useImperativeHandle","flag","getMaxFileSizeLabel","maxSize","getRejectMessage","rejectedFile","size","type","isAcceptFileType","acceptedFileType","message","snackbar","getFileLimitExceedMessage","handleChange","files","file","code","fileInfo","uploadB2BFile","uuid","handleDelete","id","downloadFile","fileUrl","B3Spin","index","DeleteIcon","DropzoneArea","Tooltip","HelpIcon","FileUpload$1","forwardRef","QuoteAttachment","defaultFileList","status","quoteId","dispatch","useAppDispatch","firstName","useAppSelector","company","lastName","draftQuoteInfo","quoteInfo","roleText","useRole","setFileList","uploadRef","useRef","saveQuoteInfo","newFileInfo","newQuoteInfo","setDraftQuoteInfo","newFileList","createFile","attachFiles","quoteDetailAttachFileCreate","_a","deleteFile","quoteDetailAttachFileDelete","_b","Card","CardContent","Container","padding","alignItems","flexDirection","backgroundColor","width","xs","QuoteInfoAndExtrafieldsItem","quoteTitle","referenceNumber","extraFields","recipients","titleId","useId","ccEmail","Base64","field","contactInfoKeys","addressVerifyKeys","addressKeys","QuoteInfoItem","info","keyTable","isMobile","useMobile","noAddressText","isComplete","item","infoPaddingLeft","list","QuoteInfo","quoteAndExtraFieldsInfo","contactInfo","shippingAddress","billingAddress","handleEditInfoClick","CustomButton","QuoteNote","quoteStatus","quoteNotes","noteText","setNoteText","setDefaultOpen","isB2BUser","isB2BUserSelector","b2bPermissions","rolePermissionSelector","quotesActionsPermission","handleNoteTextChange","event","store","setDraftQuoteInfoNote","note","TextField","handleConversionExtraItemFormat","quoteExtraFields","listOfValue","currentItems","options","option","getB2BQuoteExtraFields","quoteExtraFieldsList","quoteExtraFieldsConfig","getQuoteExtraFieldsConfig","visibleFields","err","b2bLogger"],"mappings":"8kBAYA,SAAwBA,EAAoBC,EAA+B,CACzE,KAAM,CAAE,SAAAC,EAAU,MAAAC,EAAQ,GAAI,OAAAC,EAAQ,YAAAC,EAAc,GAAO,eAAAC,GAAmBL,EAExE,CAACM,EAAMC,CAAO,EAAIC,EAAAA,SAASJ,CAAW,EAEtCK,EAAc,IAAM,CACxBF,EAAQ,CAACD,CAAI,CACf,EACAI,OAAAA,EAAAA,UAAU,IAAM,CACVL,KAA+BC,CAAI,CACzC,EAAG,CAACD,EAAgBC,CAAI,CAAC,EAEzBI,EAAAA,UAAU,IAAM,CACVN,GACFG,EAAQH,CAAW,CAEvB,EAAG,CAACA,CAAW,CAAC,SAGbO,EAAA,CACC,SAAA,CAAAC,EAAAA,KAACD,EAAA,CACC,QAASF,EACT,GAAI,CACF,QAAS,OACT,eAAgB,gBAChB,OAAQ,UACR,WAAY,QAAA,EAGb,SAAA,CAAAN,GAAUU,EAAAA,IAACC,EAAA,CAAW,QAAQ,KAAM,SAAAZ,EAAM,EAC1CI,EAAOO,EAAAA,IAACE,GAAA,CAAA,CAAW,QAAMC,GAAA,CAAA,CAAW,CAAA,CAAA,CAAA,EAEvCH,MAACI,GAAS,GAAIX,EAAM,QAAQ,OAAO,cAAa,GAC7C,SAAAL,CAAA,CACH,CAAA,EACF,CAEJ,CC9BA,MAAMiB,GAAsBC,EAAOR,CAAG,EAAE,CAAC,CAAE,MAAAS,MAAa,CACtD,sBAAuB,CACrB,OAAQ,UACR,mCAAoC,CAClC,QAAS,OACT,WAAY,SACZ,OAAOA,GAAA,YAAAA,EAAO,QAAS,SAAA,EAEzB,0BAA2B,CACzB,MAAO,EACP,cAAe,YACf,WAAY,IACZ,SAAU,OACV,WAAY,MAAA,CACd,CAEJ,EAAE,EAEIC,GAAeF,EAAOR,CAAG,EAAGX,IAA6B,CAC7D,QAAS,OACT,WAAYA,EAAM,YAAc,OAAS,0BAA4B,sBACrE,aAAc,OACd,QAAS,UACT,WAAY,SACZ,OAAQ,UACR,MAAO,sBACP,wBAAyB,CACvB,QAAS,OACT,KAAM,EACN,WAAY,QAAA,EAEd,mBAAoB,CAClB,WAAY,SACZ,aAAc,WACd,SAAU,SACV,SAAU,EACV,UAAW,QACX,SAAU,QACV,MAAO,UACP,SAAU,OACV,OAAQ,SAAA,CAEZ,EAAE,EAEIsB,GAAgBH,EAAOL,CAAU,EAAE,CACvC,aAAc,OACd,SAAU,OACV,MAAO,sBACP,QAAS,SACT,UAAW,QACX,UAAW,YACb,CAAC,EA4BKS,EAAaJ,EAAOK,EAAc,EAAE,KAAO,CAC/C,UAAW,gBACX,YAAa,KACf,EAAE,EAEF,SAASC,GAAWzB,EAAwB0B,EAAmB,CAC7D,MAAMC,EAASC,EAAA,EACT,CACJ,MAAA1B,EAAQyB,EAAO,iCAAiC,EAChD,KAAAE,EAAOF,EAAO,sCAAsC,EACpD,YAAAG,EAAc,QACd,WAAAC,EAAa,EACb,cAAAC,EACA,cAAAC,EAAgBC,GAChB,SAAAC,EAAWC,EACX,SAAAC,EAAW,CAAA,EACX,YAAAC,EAAc,GACd,SAAAC,EAAWH,EACX,cAAAI,EAAgB,GAChB,YAAAC,EAAc,mBAAA,EACZzC,EAIE0C,EAFQC,EAAA,EAEa,QAAQ,QAAQ,KAErC,CAACC,EAASC,CAAU,EAAIrC,EAAAA,SAAkB,EAAK,EAErDsC,EAAAA,oBAAoBpB,EAAK,KAAO,CAC9B,kBAAoBqB,GAAkBF,EAAWE,CAAI,CAAA,EACrD,EAEF,MAAMC,EAAuBC,GACvBA,EAAU,QAAU,EACf,GAAI,QAAAA,EAAU,SAAS,QAAQ,CAAC,EAAC,MAEtCA,EAAU,KAAO,EACZ,GAAI,QAAAA,EAAU,MAAM,QAAQ,CAAC,EAAC,MAEhC,GAAG,OAAAA,EAAO,KAGbC,EAAmB,CAACC,EAAoBlB,EAAyBH,IAAwB,CAC7F,KAAM,CAAE,KAAAsB,EAAM,KAAAC,CAAA,EAASF,EAEvB,IAAIG,EAAmB,GACvBrB,EAAc,QAASsB,GAA6B,CAClDD,EAAmB,IAAI,OAAOC,CAAgB,EAAE,KAAKF,CAAI,GAAKC,CAChE,CAAC,EAED,IAAIE,EAAU,GACd,OAAKF,IACHE,EAAU7B,EAAO,wCAAwC,GAGvDyB,EAAOtB,IACT0B,EAAU7B,EAAO,yCAA0C,CACzD,YAAaqB,EAAoBlB,CAAW,CAAA,CAC7C,GAGC0B,GACFC,EAAS,MAAMD,CAAO,EAGjBA,CACT,EAEME,EAA4B,KAChCD,EAAS,MACP9B,EAAO,yCAA0C,CAC/C,YAAaqB,EAAoBlB,CAAW,CAAA,CAC7C,CAAA,EAEI,IAGH6B,EAAe,MAAOC,GAAkB,CAC5C,MAAMC,EAAOD,EAAM,OAAS,EAAIA,EAAM,CAAC,EAAI,KAE3C,GAAI,EAAAC,GAAQ7B,GAAiBA,KAI7B,IAAI,CAACA,GAAiB6B,GAAQxB,EAAS,QAAUN,EAAY,CAC3D0B,EAAS,MAAM9B,EAAO,kCAAmC,CAAE,WAAAI,CAAA,CAAY,CAAC,EACxE,MACF,CAEA,GAAI8B,EACF,GAAI,CACFhB,EAAW,EAAI,EACf,KAAM,CACJ,KAAAiB,EACA,KAAMC,EACN,QAAAP,CAAA,EACE,MAAMQ,GAAc,CACtB,KAAAH,EACA,KAAMpB,CAAA,CACP,EACGqB,IAAS,IACX3B,EAAS,CACP,GAAG4B,EACH,GAAIE,GAAA,CAAK,CACV,EAEDR,EAAS,MAAMD,CAAO,CAE1B,QAAA,CACOhB,GACHK,EAAW,EAAK,CAEpB,EAEJ,EAEMqB,EAAgBC,GAAe,CACnC5B,EAAS4B,CAAE,CACb,EAEMC,EAAgBC,GAAoB,CACpCA,GACF,OAAO,KAAKA,EAAS,QAAQ,CAEjC,EAEA,OACExD,EAAAA,IAACyD,GAAA,CAAO,WAAY1B,EAClB,SAAAhC,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,QAAS,WACT,MAAO,MAAA,EAGT,SAAA,CAAAE,EAAAA,IAACF,GACE,SAAA0B,EAAS,IAAI,CAACwB,EAAMU,WAClB5D,EAAA,CACC,SAAA,CAAAC,OAACS,IAAa,YAAYwC,GAAA,YAAAA,EAAM,YAAa,IAAI,WAC/C,SAAA,CAAAjD,EAAAA,KAACD,EAAA,CAAI,UAAU,qBACb,SAAA,CAAAE,EAAAA,IAACU,EAAA,EAAW,EACZV,EAAAA,IAACC,EAAA,CACC,UAAU,gBACV,QAAS,IAAM,CACbsD,EAAaP,EAAK,OAAO,CAC3B,EAEC,SAAAA,EAAK,QAAA,CAAA,CACR,EACF,EACCA,EAAK,WACJhD,EAAAA,IAAC2D,GAAA,CACC,GAAI,CACF,OAAQ,SAAA,EAEV,QAAS,IAAM,CACbN,GAAaL,GAAA,YAAAA,EAAM,KAAM,EAAE,CAC7B,CAAA,CAAA,CACF,EAEJ,EACAhD,EAAAA,IAACS,GAAA,CAAe,SAAAuC,EAAK,OAAS,EAAA,CAAG,CAAA,CAAA,EAxBzBA,EAAK,IAAMU,CAyBrB,CACD,CAAA,CACH,EACCjC,GACC1B,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,QAAS,OACT,eAAgB,gBAChB,UAAW,MAAA,EAGb,SAAA,CAAAE,EAAAA,IAACK,GAAA,CACC,MAAO,CACL,MAAOwB,CAAA,EAGT,SAAA7B,EAAAA,IAAC4D,GAAA,CACC,cAAc,mBACd,KAAMlD,EACN,WAAY,EACZ,SAAUoC,EACV,aAAc,GACd,uBAAwB,GACxB,YAAA7B,EACA,WAAY,GACZ,aAAc5B,EACd,qBAAsBgD,EACtB,0BAAAQ,EACA,cAAAzB,CAAA,CAAA,CACF,CAAA,EAGFpB,EAAAA,IAAC6D,EAAA,CACC,MAAO7C,EACP,GAAI,CACF,SAAU,OACV,MAAO,qBAAA,EAGT,eAAC8C,GAAA,CAAA,CAAS,CAAA,CAAA,CACZ,CAAA,CAAA,CACF,CAAA,CAAA,EAGN,CAEJ,CAEA,MAAAC,GAAeC,EAAAA,WAAWpD,EAAU,EC5RpC,SAAwBqD,GAAgB9E,EAA6B,CACnE,KAAM,CAAE,YAAAsC,EAAc,GAAM,gBAAAyC,EAAkB,CAAA,EAAI,OAAAC,EAAQ,QAAAC,GAAYjF,EAChE2B,EAASC,EAAA,EACTsD,EAAWC,GAAA,EAEXC,EAAYC,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,SAAS,EACtEC,EAAWF,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,QAAQ,EACpEE,EAAiBH,EAAe,CAAC,CAAE,UAAAI,CAAA,IAAgBA,EAAU,cAAc,EAE3E,CAACC,CAAQ,EAAIC,GAAA,EAEb,CAACtD,EAAUuD,CAAW,EAAIpF,EAAAA,SAAwB,CAAA,CAAE,EAEpDqF,EAAYC,EAAAA,OAA+B,IAAI,EAErDpF,EAAAA,UAAU,IAAM,CACd,GAAIsE,IAAW,EAAG,CAChB,KAAM,CAAE,SAAAjB,EAAW,EAAC,EAAwByB,GAAkB,CAAA,EAE9DI,EAAY,OAAO7B,GAAa,SAAW,CAAA,EAAKA,CAAQ,CAC1D,MAAWgB,EAAgB,QACzBa,EAAYb,CAAe,CAI/B,EAAG,CAACA,EAAgB,OAAQC,CAAM,CAAC,EAEnC,MAAMe,EAAiBC,GAA+B,CACpD,GAAIR,EAAgB,CAClB,MAAMS,EAAe,CACnB,GAAGT,EACH,SAAUQ,CAAA,EAEZd,EAASgB,GAAkBD,CAAY,CAAC,CAC1C,CACF,EAEMtC,EAAe,MAAOE,GAAsB,OAChD,GAAI,CACF,IAAIsC,EAA6B,CAAA,EACjC,GAAInB,IAAW,EAAG,CAChB,MAAMoB,EAA0B,CAC9B,SAAUvC,EAAK,SACf,SAAUA,EAAK,SACf,QAASA,EAAK,QACd,SAAUA,EAAK,QAAA,EAEX,CACJ,sBAAuB,CAAE,YAAAwC,CAAA,CAAY,EACnC,MAAMC,GAA4B,CACpC,SAAU,CACR,CACE,GAAGF,CAAA,CACL,EAEF,QAAAnB,CAAA,CACD,EAEDmB,EAAW,GAAKC,EAAY,CAAC,EAAE,GAC/BF,EAAc,CACZ,CACE,GAAGC,EACH,MAAOzE,EAAO,4CAA6C,CACzD,UAAW0E,EAAY,CAAC,EAAE,SAAA,CAC3B,EACD,UAAW,EAAA,EAEb,GAAGhE,CAAA,CAEP,MACE8D,EAAc,CACZ,CACE,GAAGtC,EACH,MAAOlC,EAAO,oDAAqD,CACjE,UAAAyD,EACA,SAAAG,CAAA,CACD,EACD,UAAW,EAAA,EAEb,GAAGlD,CAAA,EAGL0D,EAAcI,CAAW,EAE3BP,EAAYO,CAAW,CACzB,QAAA,EACEI,EAAAV,EAAU,UAAV,MAAAU,EAAmB,kBAAkB,GACvC,CACF,EAEMrC,EAAe,MAAOC,GAAe,SACzC,GAAI,EACFoC,EAAAV,EAAU,UAAV,MAAAU,EAAmB,kBAAkB,IACrC,MAAMC,EAAanE,EAAS,KAAMwB,GAASA,EAAK,KAAOM,CAAE,EACnDgC,EAAc9D,EAAS,OAAQwB,GAASA,EAAK,KAAOM,CAAE,EACxDa,IAAW,GAAKwB,EAClB,MAAMC,GAA4B,CAChC,QAAQD,GAAA,YAAAA,EAAY,KAAM,GAC1B,QAAAvB,CAAA,CACD,EAEDc,EAAcI,CAAW,EAE3BP,EAAYO,CAAW,CACzB,QAAA,EACEO,EAAAb,EAAU,UAAV,MAAAa,EAAmB,kBAAkB,GACvC,CACF,EAEM1E,EAAgB,IACEK,EAAS,OAC5BwB,IAAsBA,GAAA,YAAAA,EAAM,QAASA,EAAK,MAAM,SAAS,aAAa,CAAA,EAEvD,QAAU,GAC1BJ,EAAS,MAAM9B,EAAO,wCAAwC,CAAC,EACxD,IAEF,GAGT,aACGgF,EAAA,CACC,SAAA9F,EAAAA,IAAC+F,EAAA,CACC,GAAI,CACF,EAAG,iBAAA,EAGL,eAAC7G,EAAA,CAAoB,MAAO4B,EAAO,8BAA8B,EAC/D,eAAChB,EAAA,CACC,SAAAE,EAAAA,IAACY,GAAA,CACC,IAAKoE,EACL,YAAaH,IAAa,MAAQ,4BAA8B,oBAChE,cAAa,GACb,SAAArD,EACA,cAAAL,EACA,SAAU2B,EACV,SAAUO,EACV,YAAA5B,CAAA,CAAA,EAEJ,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,CChJA,MAAMuE,GAAY1F,EAAO,KAAK,EAC5B,CAAC,CACC,QAAA2F,EAAU,OACV,WAAAC,EAAa,aACb,cAAAC,EAAgB,MAChB,gBAAAC,EAAkB,QAClB,MAAAC,EAAQ,OACR,GAAAC,CAAA,KACqB,CACrB,QAAS,OACT,cAAAH,EACA,WAAAD,EACA,QAAAD,EACA,MAAAI,EACA,gBAAAD,EACA,GAAGE,CAAA,EAEP,EC3BA,SAASC,GAA4B,CAAE,OAAApC,EAAQ,UAAAS,GAA2C,CACxF,MAAM9D,EAASC,EAAA,EAET,CACJ,KAAM,CAAE,WAAAyF,EAAY,gBAAAC,CAAA,EACpB,YAAAC,EAAc,CAAA,EACd,WAAAC,CAAA,EACE/B,EAEEgC,EAAUC,EAAAA,MAAA,EAEhB,OACE9G,EAAAA,KAACD,EAAA,CACC,KAAK,UACL,kBAAiB8G,EACjB,GAAI,CACF,MAAO,MAAA,EAGT,SAAA,CAAA5G,EAAAA,IAACC,EAAA,CACC,GAAI2G,EACJ,GAAI,CACF,WAAY,IACZ,SAAU,OACV,OAAQ,MAAA,EAGT,WAAO,4BAA4B,CAAA,CAAA,EAEtC7G,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,EAAG,QAAA,EAGH,SAAA,EAAA0G,GAAcrC,IAAW,UACzBnE,EAAAA,IAACC,EAAA,CAAY,SAAA,GAAG,OAAAa,EAAO,gCAAgC,EAAC,KAAI,OAAA0F,EAAU,CAAG,GAEzEC,GAAmBtC,IAAW,UAC9BnE,EAAAA,IAACC,GAAY,SAAA,GAAG,OAAAa,EACd,oCAAA,EACD,KAAI,OAAA2F,GAAkB,EAGxBtC,IAAW,SAAW,CAACwC,EAAW,OACjC3G,EAAAA,IAACC,EAAA,CAAY,SAAAa,EAAO,kCAAkC,CAAA,CAAE,EAExD6F,EAAW,IAAKG,GACd9G,EAAAA,IAACC,EAAA,CAEC,GAAI,CAAE,UAAW,WAAA,EACjB,SAAA,GAAG,OAAAa,EAAO,kCAAkC,EAAC,KAAI,OAAAgG,EAAO,EAFnD,WAAW,OAAAC,GAAO,OAAOD,CAAO,EAAC,CAGzC,EAGFJ,EAAY,IACVM,IACEA,EAAM,OAAS7C,IAAW,UACzBnE,EAAAA,IAACC,EAAA,CAEC,SAAA,GAAG,OAAA+G,EAAM,UAAS,MAAK,OAAAA,EAAM,MAAK,EAD7B,cAAc,OAAAA,EAAM,UAAS,CACG,CAE7C,CAAA,CAAA,CACF,CAAA,CAAA,CAGN,CC/CA,MAAMC,GAA4B,CAAC,OAAQ,QAAS,cAAe,aAAa,EAE1EC,GAA8B,CAClC,QACA,YACA,WACA,UACA,UACA,YACA,OACA,QACA,UACA,UACA,aACF,EAEMC,GAAsB,CAC1B,QACA,CAAC,YAAa,UAAU,EACxB,UACA,UACA,YACA,CAAC,OAAQ,QAAS,UAAW,SAAS,EACtC,aACF,EASA,SAASC,EAAc,CAAE,KAAAlF,EAAM,MAAA7C,EAAO,KAAAgI,EAAM,OAAAlD,GAA8B,CACxE,MAAMmD,EAAWpF,IAAS,OAAS+E,GAAkBE,GAC/C,CAACI,CAAQ,EAAIC,EAAA,EACb1G,EAASC,EAAA,EAET0G,EACJtD,IAAW,QACP,cAAc,OAAAjC,IAAS,UAAY,UAAY,WAAU,aACzD,MAAM,OAAAA,IAAS,UAAY,UAAY,WAAU,YAEjDwF,EACJxF,IAAS,OAASgF,GAAkB,KAAMS,GAAiBN,GAAQ,CAAC,CAACA,EAAKM,CAAI,CAAC,EAAI,GAE/EC,EAAkB1F,IAAS,QAAUqF,EAAW,EAAI,OACpDX,EAAUC,EAAAA,MAAA,EAEhB,OACE9G,EAAAA,KAACD,EAAA,CACC,kBAAiB8G,EACjB,KAAK,UACL,GAAI,CACF,MAAOW,GAAYrF,IAAS,OAAS,OAAS,QAC9C,YAAa0F,CAAA,EAGf,SAAA,CAAA5H,EAAAA,IAACC,EAAA,CACC,GAAI2G,EACJ,GAAI,CACF,WAAY,IACZ,SAAU,OACV,OAAQ,MAAA,EAGT,SAAAvH,CAAA,CAAA,EAEHU,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,EAAG,QAAA,EAGH,SAAA,EAAA4H,GAAcxF,IAAS,SACvB,KAAK,UAAUmF,CAAI,IAAM,MACzBC,EAAS,IAAKO,GACRA,IAAS,aACJ1D,IAAW,QAChBnE,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,UAAW,WAAA,EAGb,QAAQ,QAEP,SAAA,GAAG,OAAAa,EAAO,iCAAiC,GAAI,OAAAuG,EAAKQ,CAAI,GAAK,GAAE,EAH3DA,CAAA,EAMP,GAIA,OAAOA,GAAS,SAEhB7H,MAACC,GAAsB,QAAQ,QAC3B,YAAQoH,EAAKQ,CAAI,GAAM,EAAA,EADVA,CAEjB,EAKF7H,MAACC,GAA2B,QAAQ,QACjC,WAAK,IAAI,CAAC0H,EAAcjE,IACnBA,IAAUmE,EAAK,OAAS,EACnBR,EAAKM,CAAI,GAAK,GAEnBA,IAAS,YAAoB,GAAG,OAAAN,EAAKM,CAAI,GAAK,GAAE,KAC7CN,EAAKM,CAAI,EAAI,GAAG,OAAAN,EAAKM,CAAI,GAAK,GAAE,MAAO,EAC/C,CAAA,EAPc,GAAG,OAAAE,EAQpB,CAEH,EAEF,CAACH,GAAcxF,IAAS,QAAUlC,EAAAA,IAACF,GAAK,SAAA2H,CAAA,CAAc,CAAA,CAAA,CAAA,CACzD,CAAA,CAAA,CAGN,CAEA,SAASK,GAAU,CACjB,wBAAAC,EACA,YAAAC,EACA,gBAAAC,EACA,eAAAC,EACA,oBAAAC,EACA,OAAAhE,CACF,EAAc,CACZ,MAAMrD,EAASC,EAAA,EACT,CAACwG,CAAQ,EAAIC,EAAA,EAEnB,OACEzH,EAAAA,KAACiG,GAAA,CACC,cAAc,SACd,GAAI,CACF,UACE,wGACF,aAAc,KAAA,EAGhB,SAAA,CAAAjG,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,MAAO,OACP,QAAS,OACT,eAAgB,gBAChB,cAAeyH,EAAW,SAAW,KAAA,EAGvC,SAAA,CAAAxH,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,MAAOyH,EAAW,OAAS,OAAA,EAG7B,SAAA,CAAAvH,EAAAA,IAACoH,EAAA,CACC,MAAOtG,EAAO,gCAAgC,EAC9C,KAAK,OACL,OAAAqD,EACA,KAAM6D,CAAA,CAAA,EAERhI,EAAAA,IAACuG,GAAA,CAA4B,OAAApC,EAAgB,UAAW4D,CAAA,CAAyB,CAAA,CAAA,CAAA,EAGnF/H,EAAAA,IAACoH,EAAA,CACC,MAAOtG,EAAO,0BAA0B,EACxC,KAAK,UACL,OAAAqD,EACA,KAAM+D,CAAA,CAAA,EAGRlI,EAAAA,IAACoH,EAAA,CACC,MAAOtG,EAAO,2BAA2B,EACzC,KAAK,WACL,OAAAqD,EACA,KAAM8D,CAAA,CAAA,CACR,CAAA,CAAA,EAEDE,GACCnI,EAAAA,IAACoI,GAAA,CACC,GAAI,CACF,GAAI,OACJ,GAAI,MAAA,EAEN,QAASD,EACT,QAAQ,WAEP,WAAO,2BAA2B,CAAA,CAAA,CACrC,CAAA,CAAA,CAIR,CC1MA,SAAwBE,GAAUlJ,EAAuB,CACvD,MAAM2B,EAASC,EAAA,EACT,CAAE,YAAAuH,EAAa,WAAAC,EAAa,EAAA,EAAOpJ,EAEnC,CAACqJ,EAAUC,CAAW,EAAI9I,EAAAA,SAAS,EAAE,EACrC,CAACJ,EAAamJ,CAAc,EAAI/I,EAAAA,SAAS,EAAK,EAE9CgJ,EAAYnE,EAAeoE,EAAiB,EAC5CC,EAAiBrE,EAAesE,EAAsB,EAEtDC,EAA0BJ,EAAYE,EAAe,8BAAgC,GAErFG,EAAwBC,GAAyC,CACrER,GAAYQ,GAAA,YAAAA,EAAO,OAAO,QAAS,EAAE,EACrCC,EAAM,SAASC,GAAsBF,GAAA,YAAAA,EAAO,OAAO,QAAS,EAAE,CAAC,CACjE,EAEApJ,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMuJ,EAAOF,EAAM,SAAA,EAAW,UAAU,eAAe,MAAQ,GAE/DT,EAAYW,CAAI,CAClB,EAAG,CAAA,CAAE,EAELvJ,EAAAA,UAAU,IAAM,CACdqJ,EAAM,SAASC,EAAsBX,GAAY,EAAE,CAAC,CACtD,EAAG,CAACA,CAAQ,CAAC,EAEb3I,EAAAA,UAAU,IAAM,CACV0I,KAA2B,EAAI,CACrC,EAAG,CAACA,CAAU,CAAC,QAGZzC,EAAA,CACC,SAAA9F,EAAAA,IAAC+F,EAAA,CACC,GAAI,CACF,EAAG,iBAAA,EAGL,SAAA/F,EAAAA,IAACd,EAAA,CACC,MAEM4B,EADJwH,GAAeA,IAAgB,QACpB,2BACA,wBAD0B,EAGvC,YAAA/I,EAEA,SAAAQ,EAAAA,KAACD,EAAA,CACC,GAAI,CACF,QAAS,QAAA,EAGV,SAAA,CAAAwI,GAAeA,IAAgB,SAC9BtI,EAAAA,IAACF,EAAA,CACC,GAAI,CACF,SAAU,OACV,MAAO,sBACP,GAAI,MAAA,EAGL,WAAO,8BAA8B,CAAA,CAAA,EAGzCyI,EACCvI,EAAAA,IAACC,EAAA,CACC,QAAQ,QACR,MAAO,CACL,WAAY,WACZ,UAAW,QACX,SAAU,MAAA,EAGX,SAAAsI,CAAA,CAAA,EAGHvI,EAAAA,IAACF,EAAA,CACE,SAAAiJ,EACC/I,EAAAA,IAACqJ,EAAA,CACC,UAAS,GACT,UAAS,GACT,KAAM,EACN,MAAOb,EACP,SAAUQ,EACV,MAAOlI,EAAO,8BAA8B,EAC5C,KAAK,QACL,QAAQ,SACR,GAAI,CACF,uBAAwB,CACtB,MAAO,qBAAA,CACT,CACF,CAAA,EAEA,IAAA,CACN,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EAEJ,CAEJ,CCjHA,MAAMwI,GAAmCC,GACLA,EAAiB,IAAK5B,GAAS,CAC/D,KAAM,CAAE,YAAA6B,GAAgB7B,EAElB8B,EAAyC,CAC7C,cAAe,GACf,KAAM9B,EAAK,WAAa,GACxB,MAAOA,EAAK,WAAa,GACzB,SAAUA,EAAK,WACf,QAASA,EAAK,cAAgB,GAC9B,UAAWA,EAAK,eAAiB,GACjC,GAAI,EACJ,QAAS,SACT,KAAM,QACN,GAAIA,EAAK,EAAA,EAGX,OAAQA,EAAK,cAAA,CACX,IAAK,WACH,GAAI6B,EAAa,CACf,MAAME,EAAUF,GAAA,YAAAA,EAAa,IAAKG,IAAY,CAC5C,MAAOA,EACP,MAAOA,CAAA,IAGLD,EAAQ,OAAS,IACnBD,EAAa,QAAUC,EAE3B,CAEA,MACF,IAAK,SACHD,EAAa,IAAM9B,EAAK,cAAgB,GACxC,MACF,IAAK,YACH8B,EAAa,KAAO9B,EAAK,cAAgB,GACzC,MACF,QACE8B,EAAa,UAAY9B,EAAK,eAAiB,GAC/C,KAAA,CAGJ,OAAO8B,CACT,CAAC,EAKGG,GAAyB,SAAY,CACzC,IAAIC,EAAmD,CAAA,EACvD,GAAI,CACF,KAAM,CAAE,uBAAAC,GAA2B,MAAMC,GAAA,EAEnCC,EAAgBF,EAAuB,OAAQnC,GAASA,EAAK,gBAAgB,EAInFkC,EAFkCP,GAAgCU,CAAa,CAGjF,OAASC,EAAK,CACZC,GAAU,MAAMD,CAAG,CACrB,CAEA,OAAOJ,CACT"}