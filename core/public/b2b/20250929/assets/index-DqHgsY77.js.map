{"version":3,"file":"index-DqHgsY77.js","sources":["../../../../node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/uuid/dist/esm-browser/v4.js","../../src/hooks/useGetCountry.ts","../../src/utils/quoteUtils.ts","../../src/pages/quote/components/AddToQuote.tsx","../../src/pages/quote/components/ContactInfo.tsx","../../src/pages/quote/components/AddressItemCard.tsx","../../src/pages/quote/components/ChooseAddress.tsx","../../src/pages/quote/components/QuoteAddress.tsx","../../src/pages/quote/components/QuoteSubmissionResponse.tsx","../../src/pages/quote/shared/utils.ts","../../src/pages/quote/components/QuoteSummary.tsx","../../src/components/table/PaginationTable.tsx","../../src/pages/quote/components/QuoteTableCard.tsx","../../src/pages/quote/components/QuoteTable.tsx","../../src/pages/quote/config.ts","../../src/pages/QuoteDraft/index.tsx"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { useContext, useEffect } from 'react';\nimport { Control, FieldValues, UseFormGetValues, UseFormSetValue, useWatch } from 'react-hook-form';\n\nimport { GlobalContext } from '@/shared/global';\nimport { Country, State } from '@/shared/global/context/config';\nimport { getB2BCountries } from '@/shared/service/b2b';\n\nconst useSetCountry = () => {\n  const {\n    state: { countriesList },\n    dispatch,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const init = async () => {\n      if (countriesList && !countriesList.length) {\n        const { countries } = await getB2BCountries();\n\n        dispatch({\n          type: 'common',\n          payload: {\n            countriesList: countries,\n          },\n        });\n      }\n    };\n    init();\n    // ignore dispatch, it's not affecting any value from this\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [countriesList]);\n};\n\ninterface FormFieldsProps extends Record<string, any> {\n  name: string;\n  label?: string;\n  required?: boolean;\n  fieldType?: string;\n  default?: string | Array<any> | number;\n  xs: number;\n  variant: string;\n  size: string;\n  options?: any[];\n}\n\ninterface GetCountryProps {\n  setAddress: (arr: FormFieldsProps[]) => void;\n  setValue: UseFormSetValue<FieldValues>;\n  getValues: UseFormGetValues<FieldValues>;\n  addresses: FormFieldsProps[];\n  control: Control;\n}\n\nconst useGetCountry = ({\n  setAddress,\n  setValue,\n  getValues,\n  control,\n  addresses,\n}: GetCountryProps) => {\n  const {\n    state: { countriesList },\n  } = useContext(GlobalContext);\n\n  const countryCode = useWatch({\n    control,\n    name: 'country',\n  });\n\n  // Populate country array\n  useEffect(() => {\n    const countriesFieldIndex = addresses.findIndex(\n      (formFields: FormFieldsProps) => formFields.name === 'country',\n    );\n    if (countriesList?.length && countriesFieldIndex !== -1) {\n      setAddress(\n        addresses.map((addressField, addressFieldIndex) => {\n          if (countriesFieldIndex === addressFieldIndex) {\n            return { ...addressField, options: countriesList };\n          }\n          return addressField;\n        }),\n      );\n    }\n    // ignore addresses cause it will trigger loop array\n    // ignore setAddress due it's no affecting any logic\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [countriesList]);\n\n  // Populate state array when the user change selected country\n  useEffect(() => {\n    if (!countryCode || !countriesList?.length) return;\n    const stateList =\n      countriesList.find((country: Country) => country.countryCode === countryCode)?.states || [];\n    const stateFieldIndex = addresses.findIndex(\n      (formFields: FormFieldsProps) => formFields.name === 'state',\n    );\n    if (stateFieldIndex !== -1) {\n      setAddress(\n        addresses.map((addressField, addressFieldIndex) => {\n          if (stateFieldIndex === addressFieldIndex) {\n            if (stateList.length > 0) {\n              return {\n                ...addressField,\n                fieldType: 'dropdown',\n                options: stateList,\n                required: true,\n              };\n            }\n            return { ...addressField, fieldType: 'text', options: [], required: false };\n          }\n          return addressField;\n        }),\n      );\n    }\n\n    const stateVal = getValues('state');\n\n    setValue(\n      'state',\n      stateVal &&\n        countryCode &&\n        (stateList.find((state: State) => state.stateName === stateVal) || stateList.length === 0)\n        ? stateVal\n        : '',\n    );\n    // ignore addresses cause it will trigger loop array\n    // ignore setAddress, getValues and setValue due they're not affecting any value from this\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [countryCode, countriesList]);\n};\n\nexport { useGetCountry, useSetCountry };\n","import { QuoteInfo } from '@/types/quotes';\n\ntype ValidKeys = 'contactInfo' | 'shippingAddress' | 'billingAddress';\n\nconst validateObject = (quoteInfo: QuoteInfo, key: ValidKeys) =>\n  Object.values(quoteInfo?.[key]).every((x) => x === '' || x === 0);\n\nexport default validateObject;\n","import { useState } from 'react';\nimport { UploadFile as UploadFileIcon } from '@mui/icons-material';\nimport { Box, Card, CardContent, Divider } from '@mui/material';\nimport { v1 as uuid } from 'uuid';\n\nimport { B3CollapseContainer, B3Upload } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { calculateProductListPrice, validProductQty } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport QuickAdd from '../../ShoppingListDetails/components/QuickAdd';\nimport SearchProduct from '../../ShoppingListDetails/components/SearchProduct';\n\ninterface AddToListProps {\n  updateList: () => void;\n  addToQuote: (products: CustomFieldItems[]) => Promise<boolean>;\n}\n\nexport default function AddToQuote(props: AddToListProps) {\n  const { updateList, addToQuote } = props;\n\n  const companyId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n\n  const [isOpenBulkLoadCSV, setIsOpenBulkLoadCSV] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const b3Lang = useB3Lang();\n\n  const getNewQuoteProduct = (products: CustomFieldItems[]) =>\n    products.map((product) => {\n      const {\n        variantId,\n        newSelectOptionList,\n        id: productId,\n        name: productName,\n        quantity,\n        variants = [],\n        basePrice,\n        taxPrice,\n        calculatedValue,\n      } = product;\n\n      const variantInfo =\n        variants.length === 1\n          ? variants[0]\n          : variants.find((item: CustomFieldItems) => item.variant_id === variantId);\n\n      const { image_url: primaryImage = '', sku: variantSku } = variantInfo;\n\n      let selectOptions;\n      try {\n        selectOptions = JSON.stringify(newSelectOptionList);\n      } catch (error) {\n        selectOptions = '[]';\n      }\n\n      const taxExclusive = variantInfo.bc_calculated_price.tax_exclusive;\n      const taxInclusive = variantInfo.bc_calculated_price.tax_inclusive;\n\n      const basePriceExclusiveTax = basePrice || taxExclusive;\n\n      const tax = taxPrice || Number(taxInclusive) - Number(taxExclusive);\n\n      return {\n        node: {\n          basePrice: basePriceExclusiveTax,\n          taxPrice: tax,\n          optionList: selectOptions,\n          id: uuid(),\n          primaryImage,\n          productId,\n          productName,\n          calculatedValue,\n          productsSearch: {\n            ...product,\n            selectOptions,\n          },\n          quantity,\n          variantSku,\n        },\n      };\n    });\n\n  const addToList = async (products: CustomFieldItems[]) => {\n    const newProducts = getNewQuoteProduct(products);\n    const noSkuProducts = products.filter(({ sku, variantId, variants }) => {\n      const currentProduct = variants.find(\n        (item: CustomFieldItems) => item.variant_id === variantId || item.variantId === variantId,\n      );\n\n      const variantSku = currentProduct.sku;\n\n      return !(sku || variantSku);\n    });\n    if (noSkuProducts.length > 0) {\n      snackbar.error(b3Lang('quoteDraft.notification.cantAddProductsNoSku'));\n    }\n\n    if (noSkuProducts.length === products.length) return;\n\n    const success = await addToQuote(newProducts);\n\n    if (success) {\n      snackbar.success(b3Lang('quoteDraft.notification.productSingular'));\n    }\n  };\n\n  const quickAddToList = async (variantProducts: CustomFieldItems[]) => {\n    const productIds = variantProducts.map((item) => item.productId);\n\n    const { productsSearch } = await searchProducts({\n      productIds,\n      companyId,\n      customerGroupId,\n    });\n\n    const productList = conversionProductsList(productsSearch).map((product: CustomFieldItems) => {\n      const variantProduct =\n        variantProducts.find(\n          (variantProduct: CustomFieldItems) => variantProduct.productId === product.id,\n        ) || {};\n\n      const { variantId, newSelectOptionList, quantity } = variantProduct;\n\n      return {\n        ...product,\n        variantId,\n        newSelectOptionList,\n        quantity,\n      };\n    });\n\n    await calculateProductListPrice(productList);\n\n    const newProducts = getNewQuoteProduct(productList);\n\n    const success = await addToQuote(newProducts);\n\n    if (success) {\n      snackbar.success(b3Lang('quoteDraft.notification.productPlural'));\n    }\n  };\n\n  const getOptionsList = (options: CustomFieldItems) => {\n    if (options?.length === 0) return [];\n\n    const option = options.map(\n      ({ option_id: optionId, id }: { option_id: number | string; id: string | number }) => ({\n        optionId: `attribute[${optionId}]`,\n        optionValue: id,\n      }),\n    );\n\n    return option;\n  };\n\n  const handleCSVAddToList = async (productsData: CustomFieldItems) => {\n    setIsLoading(true);\n    try {\n      const { validProduct } = productsData;\n\n      const productIds: number[] = [];\n      validProduct.forEach((product: CustomFieldItems) => {\n        const { products } = product;\n\n        if (!productIds.includes(Number(products.productId))) {\n          productIds.push(Number(products.productId));\n        }\n      });\n\n      const { productsSearch } = await searchProducts({\n        productIds,\n        companyId,\n        customerGroupId,\n      });\n\n      const newProductInfo: CustomFieldItems = conversionProductsList(productsSearch);\n\n      const newProducts: CustomFieldItems[] = [];\n      validProduct.forEach((product: CustomFieldItems) => {\n        const {\n          products: { option, variantSku, productId, productName, variantId },\n          qty,\n        } = product;\n\n        const optionsList = getOptionsList(option);\n\n        const currentProductSearch = newProductInfo.find(\n          (product: CustomFieldItems) => Number(product.id) === Number(productId),\n        );\n\n        const variantItem = currentProductSearch.variants.find(\n          (item: CustomFieldItems) => item?.sku?.toUpperCase() === variantSku?.toUpperCase(),\n        );\n\n        const quoteListitem = {\n          node: {\n            id: uuid(),\n            variantSku: variantItem?.sku,\n            variantId,\n            productsSearch: {\n              ...currentProductSearch,\n              newSelectOptionList: optionsList,\n              variantId,\n            },\n            primaryImage: variantItem.image_url || PRODUCT_DEFAULT_IMAGE,\n            productName,\n            quantity: Number(qty) || 1,\n            optionList: JSON.stringify(optionsList),\n            productId,\n            basePrice: variantItem.bc_calculated_price.as_entered,\n            taxPrice:\n              variantItem.bc_calculated_price.tax_inclusive -\n              variantItem.bc_calculated_price.tax_exclusive,\n          },\n        };\n\n        newProducts.push(quoteListitem);\n      });\n\n      const isSuccess = validProductQty(newProducts);\n      if (isSuccess) {\n        await calculateProductListPrice(newProducts, '2');\n\n        const success = await addToQuote(newProducts);\n        if (success) {\n          snackbar.success(b3Lang('quoteDraft.notification.productPlural'));\n        }\n        updateList();\n        setIsOpenBulkLoadCSV(false);\n      } else {\n        snackbar.error(b3Lang('quoteDraft.notification.errorRangeProducts'));\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOpenUploadDiag = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('quoteDraft.notification.businessAccountPendingActivation'));\n    } else {\n      setIsOpenBulkLoadCSV(true);\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer title={b3Lang('quoteDraft.collapseTitle.addToQuote')}>\n          <SearchProduct\n            updateList={updateList}\n            addToList={addToList}\n            type=\"quote\"\n            searchDialogTitle={b3Lang('quoteDraft.modalTitle.addToQuote')}\n            addButtonText={b3Lang('quoteDraft.searchProduct.addToQuoteButton')}\n          />\n\n          <Divider />\n\n          <QuickAdd\n            updateList={updateList}\n            quickAddToList={quickAddToList}\n            level={1}\n            buttonText={b3Lang('quoteDraft.button.addProductsToAddToQuote')}\n          />\n\n          <Divider />\n\n          <Box\n            sx={{\n              margin: '20px 0 0',\n            }}\n          >\n            <CustomButton variant=\"text\" onClick={() => handleOpenUploadDiag()}>\n              <UploadFileIcon\n                sx={{\n                  marginRight: '8px',\n                }}\n              />\n              {b3Lang('quoteDraft.button.bulkUploadCSV')}\n            </CustomButton>\n          </Box>\n\n          <B3Upload\n            isOpen={isOpenBulkLoadCSV}\n            setIsOpen={setIsOpenBulkLoadCSV}\n            handleAddToList={handleCSVAddToList}\n            isLoading={isLoading}\n            withModifiers\n          />\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { forwardRef, useEffect, useImperativeHandle } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@mui/material';\nimport trim from 'lodash-es/trim';\n\nimport { B3CustomForm } from '@/components';\nimport { useMobile } from '@/hooks';\nimport { LangFormatFunction, useB3Lang } from '@/lib/lang';\nimport { validateQuoteExtraFields } from '@/shared/service/b2b';\nimport { isValidUserTypeSelector, useAppSelector } from '@/store';\nimport { CustomerRole } from '@/types';\nimport {\n  ContactInfo as ContactInfoType,\n  QuoteExtraFields,\n  QuoteFormattedItemsProps,\n} from '@/types/quotes';\nimport { validatorRules } from '@/utils';\n\ninterface GetQuoteInfoProps {\n  isMobile: boolean;\n  b3Lang: LangFormatFunction;\n  quoteExtraFields: QuoteFormattedItemsProps[];\n  referenceNumber: string | undefined;\n  recipients: string[] | undefined;\n  handleSaveClick: (ccEmails: string[]) => void;\n}\n\nconst emailValidate = validatorRules(['email']);\n\nconst getContactInfo = (isMobile: boolean, b3Lang: LangFormatFunction, isGuest: boolean) => {\n  const contactInfo = [\n    {\n      name: 'name',\n      label: b3Lang('quoteDraft.contactInfo.contactPerson'),\n      required: true,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n      disabled: !isGuest,\n    },\n    {\n      name: 'email',\n      label: b3Lang('quoteDraft.contactInfo.email'),\n      required: true,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n      validate: emailValidate,\n      disabled: !isGuest,\n    },\n    {\n      name: 'phoneNumber',\n      label: b3Lang('quoteDraft.contactInfo.phone'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'companyName',\n      label: b3Lang('quoteDraft.contactInfo.companyName'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  return contactInfo;\n};\n\nconst getQuoteInfo = ({\n  isMobile,\n  b3Lang,\n  quoteExtraFields,\n  referenceNumber,\n  recipients,\n  handleSaveClick,\n}: GetQuoteInfoProps) => {\n  const currentExtraFields = quoteExtraFields.map((field) => ({\n    ...field,\n    xs: isMobile ? 12 : 6,\n  }));\n\n  const quoteInfo = [\n    {\n      name: 'quoteTitle',\n      label: b3Lang('quoteDraft.contactInfo.quoteTitle'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'referenceNumber',\n      label: b3Lang('quoteDraft.contactInfo.referenceNumber'),\n      required: false,\n      default: referenceNumber || '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    ...currentExtraFields,\n    {\n      name: 'ccEmail',\n      label: b3Lang('quoteDraft.contactInfo.ccEmail'),\n      required: false,\n      default: '',\n      fieldType: 'multiInputText',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n      isEmail: true,\n      existValue: recipients,\n      validate: emailValidate,\n      isEnterTrigger: true,\n      handleSave: handleSaveClick,\n    },\n  ];\n\n  return quoteInfo;\n};\n\ninterface ContactInfoProps {\n  info: ContactInfoType;\n  quoteExtraFields: QuoteFormattedItemsProps[];\n  emailAddress?: string;\n  referenceNumber?: string | undefined;\n  extraFieldsDefault: QuoteExtraFields[];\n  recipients: string[] | undefined;\n  handleSaveCCEmail: (ccEmail: string[]) => void;\n}\n\nfunction ContactInfo(\n  {\n    info,\n    emailAddress,\n    quoteExtraFields,\n    referenceNumber,\n    extraFieldsDefault,\n    recipients,\n    handleSaveCCEmail,\n  }: ContactInfoProps,\n  ref: any,\n) {\n  const {\n    control,\n    getValues,\n    setError,\n    formState: { errors },\n    setValue,\n    handleSubmit,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const isGuest = role === CustomerRole.GUEST;\n\n  const isValidUserType = useAppSelector(isValidUserTypeSelector);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  useEffect(() => {\n    if (info && JSON.stringify(info) !== '{}') {\n      Object.keys(info).forEach((item: string) => {\n        setValue(item, info && info[item as keyof ContactInfoType]);\n      });\n    }\n\n    if (extraFieldsDefault.length) {\n      extraFieldsDefault.forEach((item) => {\n        if (item.fieldName) setValue(item.fieldName, item.value);\n      });\n    }\n    // Disable eslint exhaustive-deps rule for setValue dispatcher\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [info, extraFieldsDefault]);\n\n  const validateEmailValue = async (emailValue: string) => {\n    if (emailAddress === trim(emailValue)) return true;\n\n    if (!isValidUserType) {\n      setError('email', {\n        type: 'custom',\n        message: b3Lang('quoteDraft.contactInfo.emailExists'),\n      });\n    }\n\n    return isValidUserType;\n  };\n\n  const validateQuoteExtraFieldsInfo = async () => {\n    const values = getValues();\n    const extraFields = quoteExtraFields.map((field) => ({\n      fieldName: field.name,\n      fieldValue: field.name ? values[field.name] : '',\n    }));\n\n    const res = await validateQuoteExtraFields({\n      extraFields,\n    });\n\n    if (res.code !== 200) {\n      const message = res.data?.errMsg || res.message || '';\n\n      const messageArr = message.split(':');\n\n      if (messageArr.length >= 2) {\n        const field = quoteExtraFields?.find((field) => field.name === messageArr[0]);\n        if (field && field.name) {\n          setError(field.name, {\n            type: 'manual',\n            message: messageArr[1],\n          });\n\n          return false;\n        }\n      }\n      return false;\n    }\n    return true;\n  };\n\n  const handleSaveClick = (ccEmails: string[]) => {\n    handleSaveCCEmail(ccEmails);\n  };\n\n  const getContactInfoValue = async () => {\n    let isValid = true;\n    await handleSubmit(\n      async (data) => {\n        isValid = await validateEmailValue(data.email);\n      },\n      () => {\n        isValid = false;\n      },\n    )();\n\n    if (isValid) {\n      isValid = await validateQuoteExtraFieldsInfo();\n    }\n\n    return isValid ? getValues() : isValid;\n  };\n\n  useImperativeHandle(ref, () => ({\n    getContactInfoValue,\n  }));\n\n  const contactInfo = getContactInfo(isMobile, b3Lang, isGuest);\n  const quoteInfo = getQuoteInfo({\n    isMobile,\n    b3Lang,\n    quoteExtraFields,\n    referenceNumber,\n    recipients,\n    handleSaveClick,\n  });\n\n  const formData = [\n    {\n      title: b3Lang('quoteDraft.contactInfo.contact'),\n      infos: contactInfo,\n    },\n    {\n      title: b3Lang('quoteDraft.quoteInfo.title'),\n      infos: quoteInfo,\n      style: {\n        mt: '20px',\n      },\n    },\n  ];\n\n  return (\n    <Box width=\"100%\">\n      {formData.map((data) => (\n        <Box key={data.title} width=\"100%\">\n          <Box\n            sx={{\n              fontWeight: 400,\n              fontSize: '24px',\n              height: '32px',\n              mb: '20px',\n              ...data?.style,\n            }}\n          >\n            {data.title}\n          </Box>\n\n          <B3CustomForm\n            formFields={data.infos}\n            errors={errors}\n            control={control}\n            setError={setError}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n      ))}\n    </Box>\n  );\n}\n\nexport default forwardRef(ContactInfo);\n","import styled from '@emotion/styled';\nimport { Theme, useTheme } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nimport { B3Tag } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { useB3Lang } from '@/lib/lang';\n\nimport { AddressItemType } from '../../../types/address';\n\ninterface OrderItemCardProps {\n  item: AddressItemType;\n  onSetAddress: (data: AddressItemType) => void;\n}\n\ninterface TagBoxProps {\n  marginBottom: number | string;\n}\n\nconst TagBox = styled('div')(({ marginBottom }: TagBoxProps) => ({\n  marginBottom,\n  '& > span:not(:last-child)': {\n    marginRight: '4px',\n  },\n}));\n\ninterface FlexProps {\n  theme?: Theme;\n}\n\nconst Flex = styled('div')(({ theme }: FlexProps) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  marginTop: theme!.spacing(3),\n}));\n\nexport function AddressItemCard(props: OrderItemCardProps) {\n  const { item: addressInfo, onSetAddress } = props;\n\n  const theme = useTheme();\n\n  const b3Lang = useB3Lang();\n\n  return (\n    <Card key={addressInfo.id}>\n      <CardContent\n        sx={{\n          color: '#313440',\n          wordBreak: 'break-word',\n        }}\n      >\n        {addressInfo.label && (\n          <Typography\n            variant=\"h5\"\n            sx={{\n              marginBottom:\n                addressInfo.isDefaultShipping === 1 || addressInfo.isDefaultBilling === 1\n                  ? theme.spacing(1)\n                  : theme.spacing(3),\n              color: 'rgba(0, 0, 0, 0.87)',\n            }}\n          >\n            {addressInfo.label}\n          </Typography>\n        )}\n\n        <TagBox\n          marginBottom={\n            addressInfo.isDefaultShipping === 1 || addressInfo.isDefaultBilling === 1\n              ? theme.spacing(3)\n              : 0\n          }\n        >\n          {addressInfo.isDefaultShipping === 1 && (\n            <B3Tag color=\"#C4DD6C\" textColor=\"rgba(0, 0, 0, 0.87)\">\n              {b3Lang('quoteDraft.addressItemCard.defaultShipping')}\n            </B3Tag>\n          )}\n          {addressInfo.isDefaultBilling === 1 && (\n            <B3Tag color=\"#C4DD6C\" textColor=\"rgba(0, 0, 0, 0.87)\">\n              {b3Lang('quoteDraft.addressItemCard.defaultBilling')}\n            </B3Tag>\n          )}\n        </TagBox>\n\n        <Typography variant=\"body1\">{`${addressInfo.firstName} ${addressInfo.lastName}`}</Typography>\n        <Typography variant=\"body1\">{addressInfo.company || ''}</Typography>\n        <Typography variant=\"body1\">{addressInfo.addressLine1}</Typography>\n        <Typography variant=\"body1\">{addressInfo.addressLine2}</Typography>\n        <Typography variant=\"body1\">{`${addressInfo.city}, ${addressInfo.state} ${addressInfo.zipCode}, ${addressInfo.country}`}</Typography>\n        <Typography variant=\"body1\">{addressInfo.phoneNumber}</Typography>\n\n        <Flex>\n          <CustomButton\n            variant=\"text\"\n            onClick={() => {\n              onSetAddress(addressInfo);\n            }}\n          >\n            {b3Lang('quoteDraft.addressItemCard.chooseAddress')}\n          </CustomButton>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3FilterSearch from '@/components/filter/B3FilterSearch';\nimport { useB3Lang } from '@/lib/lang';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { AddressItemType } from '@/types/address';\n\nimport { AddressItemCard } from './AddressItemCard';\n\ntype AddressItemProps = {\n  node: AddressItemType;\n};\n\ninterface ChooseAddressProps {\n  isOpen: boolean;\n  addressList: AddressItemProps[];\n  closeModal: () => void;\n  handleChangeAddress: (address: AddressItemType) => void;\n  type: string;\n}\n\ninterface RefProps {\n  copyList: AddressItemType[];\n}\n\nfunction ChooseAddress({\n  isOpen,\n  closeModal,\n  handleChangeAddress,\n  addressList = [],\n  type,\n}: ChooseAddressProps) {\n  const recordList = useRef<RefProps>({\n    copyList: [],\n  });\n  const b3Lang = useB3Lang();\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const [list, setList] = useState<AddressItemType[]>([]);\n\n  useEffect(() => {\n    if (addressList.length) {\n      const allList = addressList.map((item: AddressItemProps) => item.node);\n      const newList = allList.filter(\n        (item) =>\n          (item.isShipping === 1 && type === 'shipping') ||\n          (item.isBilling === 1 && type === 'billing'),\n      );\n      recordList.current.copyList = isB2BUser ? newList : allList;\n      setList(newList);\n    }\n  }, [addressList, type, isB2BUser]);\n\n  const keys = [\n    'address',\n    'firstName',\n    'lastName',\n    'phoneNumber',\n    'state',\n    'zipCode',\n    'country',\n    'label',\n    'address',\n    'addressLine1',\n  ];\n\n  const handleSearchProduct = (q: string) => {\n    if (!q && recordList?.current) {\n      setList(recordList.current.copyList);\n      return;\n    }\n    const newList: AddressItemType[] = [];\n    keys.forEach((key: string) => {\n      let flag = true;\n      list.forEach((item: AddressItemType) => {\n        if (item[key].includes(q) && flag) {\n          newList.push(item);\n          flag = false;\n        }\n      });\n    });\n    setList(newList);\n  };\n\n  const handleCancelClicked = () => {\n    closeModal();\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={b3Lang('quoteDraft.chooseAddress.chooseFromSaved')}\n      showRightBtn={false}\n      maxWidth=\"lg\"\n    >\n      <Box>\n        <B3FilterSearch\n          searchBGColor=\"rgba(0, 0, 0, 0.06)\"\n          placeholder={b3Lang('quoteDraft.chooseAddress.searchAddress')}\n          handleChange={(e) => {\n            handleSearchProduct(e);\n          }}\n        />\n      </Box>\n      <Box\n        sx={{\n          mt: '20px',\n        }}\n      >\n        <Grid container spacing={2}>\n          {list.map((addressItem: AddressItemType) => (\n            <Grid item key={addressItem.id} xs={4}>\n              <AddressItemCard item={addressItem} onSetAddress={handleChangeAddress} />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </B3Dialog>\n  );\n}\n\nexport default ChooseAddress;\n","import { forwardRef, useEffect, useId, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Typography } from '@mui/material';\nimport cloneDeep from 'lodash-es/cloneDeep';\n\nimport { B3CustomForm } from '@/components';\nimport { useGetCountry, useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { AddressItemType } from '@/types/address';\nimport { BillingAddress, ContactInfo, ShippingAddress } from '@/types/quotes';\n\nimport ChooseAddress from './ChooseAddress';\n\ntype AddressItemProps = {\n  node: AddressItemType;\n};\n\ninterface AccountFormFieldsProps extends Record<string, any> {\n  name: string;\n  label?: string;\n  required?: boolean;\n  fieldType?: string;\n  default?: string | Array<any> | number;\n  xs: number;\n  variant: string;\n  size: string;\n  options?: any[];\n}\n\ninterface AddressProps {\n  title: string;\n  pr?: string | number;\n  pl?: string | number;\n  addressList?: AddressItemProps[];\n  info: ContactInfo | ShippingAddress | BillingAddress;\n  role: string | number;\n  accountFormFields: AccountFormFieldsProps[];\n  shippingSameAsBilling: boolean;\n  type: string;\n  setBillingChange: (value: boolean) => void;\n}\n\nfunction QuoteAddress(\n  {\n    title,\n    addressList = [],\n    pr = 0,\n    pl = 0,\n    info,\n    role,\n    accountFormFields = [],\n    shippingSameAsBilling = false,\n    type,\n    setBillingChange,\n  }: AddressProps,\n  ref: any,\n) {\n  const {\n    control,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  type InfoKeys = keyof typeof info;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [quoteAddress, setQuoteAddress] = useState<AccountFormFieldsProps[]>(\n    cloneDeep(accountFormFields),\n  );\n\n  useGetCountry({\n    control,\n    setValue,\n    getValues,\n    setAddress: setQuoteAddress,\n    addresses: quoteAddress,\n  });\n\n  const getContactInfoValue = () => getValues();\n  const setShippingInfoValue = (address: any) => {\n    const addressKey = Object.keys(address);\n\n    addressKey.forEach((item: string) => {\n      if (item === 'company') return;\n      setValue(item, address[item]);\n    });\n  };\n\n  useImperativeHandle(ref, () => ({\n    getContactInfoValue,\n    setShippingInfoValue,\n  }));\n\n  const handleAddressChoose = () => {\n    setOpen(true);\n  };\n\n  const handleCloseAddressChoose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeAddress = (address: AddressItemType) => {\n    const addressItem: any = {\n      label: address?.label || '',\n      firstName: address?.firstName || '',\n      lastName: address?.lastName || '',\n      company: address?.company || '',\n      country: address?.countryCode || '',\n      address: address?.addressLine1 || '',\n      apartment: address?.addressLine2 || '',\n      city: address?.city || '',\n      state: address?.state || '',\n      zipCode: address?.zipCode || '',\n      phoneNumber: address?.phoneNumber || '',\n    };\n\n    Object.keys(addressItem).forEach((item: string) => {\n      if (item === 'company') return;\n      setValue(item, addressItem[item]);\n    });\n    if (type === 'billing' && shippingSameAsBilling) {\n      setBillingChange(true);\n    }\n\n    handleCloseAddressChoose();\n  };\n\n  useEffect(() => {\n    if (JSON.stringify(info) !== '{}') {\n      Object.keys(info).forEach((item: string) => {\n        setValue(item, info[item as InfoKeys]);\n      });\n    }\n    // Disabling this rule as dispatcher dep setValue is the same between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [info]);\n\n  const fieldsetId = useId();\n\n  return (\n    <Box\n      role=\"group\"\n      aria-labelledby={fieldsetId}\n      width={isMobile ? '100%' : '50%'}\n      mt={isMobile ? '2rem' : '0'}\n      pr={pr}\n      pl={pl}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          mb: '20px',\n        }}\n      >\n        <Typography\n          id={fieldsetId}\n          sx={{\n            fontWeight: 400,\n            fontSize: '24px',\n            height: '32px',\n            mr: '16px',\n          }}\n        >\n          {title}\n        </Typography>\n        {Number(role) !== 100 && (\n          <Typography\n            onClick={handleAddressChoose}\n            sx={{\n              fontWeight: 500,\n              fontSize: '14px',\n              color: 'primary.main',\n              display: 'flex',\n              alignItems: 'flex-end',\n              cursor: 'pointer',\n              textTransform: 'uppercase',\n            }}\n          >\n            {b3Lang('quoteDraft.quoteAddress.chooseFromSaved')}\n          </Typography>\n        )}\n      </Box>\n\n      <B3CustomForm\n        formFields={quoteAddress}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n\n      <ChooseAddress\n        isOpen={isOpen}\n        handleChangeAddress={handleChangeAddress}\n        closeModal={handleCloseAddressChoose}\n        addressList={addressList}\n        type={type}\n      />\n    </Box>\n  );\n}\n\nexport default forwardRef(QuoteAddress);\n","import { Box, Typography } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport { useB3Lang } from '@/lib/lang';\n\ninterface QuoteSubmissionResponseProps {\n  isOpen: boolean;\n  onClose: () => void;\n  quoteSubmissionResponseInfo: {\n    value: string;\n    key: string;\n    message: string;\n    title: string;\n  };\n}\n\nfunction QuoteSubmissionResponse({\n  isOpen = false,\n  onClose,\n  quoteSubmissionResponseInfo,\n}: QuoteSubmissionResponseProps) {\n  const b3Lang = useB3Lang();\n  const messageArr = quoteSubmissionResponseInfo.message.split('\\n');\n\n  return (\n    <Box\n      sx={{\n        '#b2b-dialog-container': {\n          '& [aria-labelledby=\"alert-dialog-title\"]': {\n            width: '500px',\n            maxHeight: '500px',\n          },\n\n          '& h2': {\n            color: '#313440',\n          },\n          '& h6': {\n            color: '#313440',\n            fontSize: '16px',\n          },\n        },\n      }}\n    >\n      <B3Dialog\n        isOpen={isOpen}\n        title={quoteSubmissionResponseInfo.title}\n        showLeftBtn={false}\n        handRightClick={onClose}\n        isShowBordered={false}\n        rightSizeBtn={b3Lang('quoteDraft.submission.response.button.text')}\n        maxWidth={false}\n      >\n        {messageArr.map((item) => {\n          return (\n            <Typography\n              key={item}\n              variant=\"subtitle2\"\n              sx={{\n                marginTop: '1rem',\n              }}\n            >\n              {item}\n            </Typography>\n          );\n        })}\n      </B3Dialog>\n    </Box>\n  );\n}\n\nexport default QuoteSubmissionResponse;\n","import { store } from '@/store';\nimport { getVariantInfoDisplayPrice } from '@/utils/b3Product/b3Product';\n\nconst getQuoteDraftShowPriceTBD = (products: CustomFieldItems[]) => {\n  const {\n    global: {\n      blockPendingQuoteNonPurchasableOOS: { isEnableProduct },\n    },\n  } = store.getState();\n\n  if (!isEnableProduct) return false;\n\n  const isHidePrice = products.some((product) => {\n    if (!getVariantInfoDisplayPrice(product.node.basePrice, product)) return true;\n\n    return false;\n  });\n\n  return isHidePrice;\n};\n\nexport default getQuoteDraftShowPriceTBD;\n","import {\n  forwardRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { Box, Card, CardContent, Grid, Typography } from '@mui/material';\n\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { currencyFormat } from '@/utils';\nimport { getBCPrice } from '@/utils/b3Product/b3Product';\n\nimport getQuoteDraftShowPriceTBD from '../shared/utils';\n\ninterface Summary {\n  subtotal: number;\n  shipping: number;\n  tax: number;\n  grandTotal: number;\n}\n\nconst defaultSummary: Summary = {\n  subtotal: 0,\n  shipping: 0,\n  tax: 0,\n  grandTotal: 0,\n};\n\nconst QuoteSummary = forwardRef((_, ref: Ref<unknown>) => {\n  const b3Lang = useB3Lang();\n\n  const [quoteSummary, setQuoteSummary] = useState<Summary>({\n    ...defaultSummary,\n  });\n\n  const [isHideQuoteDraftPrice, setHideQuoteDraftPrice] = useState<boolean>(false);\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const draftQuoteList = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList);\n\n  const priceCalc = (price: number) => parseFloat(String(price));\n\n  const getSummary = useCallback(() => {\n    const isHidePrice = getQuoteDraftShowPriceTBD(draftQuoteList);\n\n    setHideQuoteDraftPrice(isHidePrice);\n\n    const newQuoteSummary = draftQuoteList.reduce(\n      (summary: Summary, product: CustomFieldItems) => {\n        const { basePrice, taxPrice: productTax = 0, quantity } = product.node;\n\n        let { subtotal, grandTotal, tax } = summary;\n\n        const { shipping } = summary;\n\n        const price = getBCPrice(Number(basePrice), Number(productTax));\n\n        subtotal += priceCalc(price * quantity);\n        tax += priceCalc(Number(productTax) * Number(quantity));\n\n        const totalPrice = showInclusiveTaxPrice ? subtotal : subtotal + tax;\n\n        grandTotal = totalPrice + shipping;\n\n        return {\n          grandTotal,\n          shipping,\n          tax,\n          subtotal,\n        };\n      },\n      {\n        ...defaultSummary,\n      },\n    );\n\n    setQuoteSummary(newQuoteSummary);\n  }, [showInclusiveTaxPrice, draftQuoteList]);\n\n  useEffect(() => {\n    getSummary();\n  }, [getSummary]);\n\n  useImperativeHandle(ref, () => ({\n    refreshSummary: () => getSummary(),\n  }));\n\n  const priceFormat = (price: number) => currencyFormat(price);\n\n  const showPrice = (price: string | number): string | number => {\n    if (isHideQuoteDraftPrice) return b3Lang('quoteDraft.quoteSummary.tbd');\n\n    return price;\n  };\n\n  const cardId = useId();\n\n  return (\n    <Card role=\"article\" aria-labelledby={cardId}>\n      <CardContent>\n        <Box>\n          <Typography id={cardId} variant=\"h5\">\n            {b3Lang('quoteDraft.quoteSummary.summary')}\n          </Typography>\n          <Box\n            sx={{\n              marginTop: '20px',\n              color: '#212121',\n            }}\n          >\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '4px 0',\n              }}\n            >\n              <Typography>{b3Lang('quoteDraft.quoteSummary.subTotal')}</Typography>\n              <Typography>{showPrice(priceFormat(quoteSummary.subtotal))}</Typography>\n            </Grid>\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '4px 0',\n              }}\n            >\n              <Typography>{b3Lang('quoteDraft.quoteSummary.shipping')}</Typography>\n              <Typography>{b3Lang('quoteDraft.quoteSummary.tbd')}</Typography>\n            </Grid>\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '4px 0',\n              }}\n            >\n              <Typography>{b3Lang('quoteDraft.quoteSummary.tax')}</Typography>\n              <Typography>{showPrice(priceFormat(quoteSummary.tax))}</Typography>\n            </Grid>\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '24px 0 0',\n              }}\n            >\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                }}\n              >\n                {b3Lang('quoteDraft.quoteSummary.grandTotal')}\n              </Typography>\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                }}\n              >\n                {showPrice(priceFormat(quoteSummary.grandTotal))}\n              </Typography>\n            </Grid>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n});\nexport default QuoteSummary;\n","import { FC, ReactElement, useCallback, useEffect, useState } from 'react';\n\nimport { useMobile } from '@/hooks';\n\nimport { B3Table, isNodeWrapper, PossibleNodeWrapper, TableColumnItem } from './B3Table';\n\ninterface TablePagination {\n  offset: number;\n  first: number;\n}\n\ninterface PaginationTableProps<Row extends object> {\n  tableFixed?: boolean;\n  tableHeaderHide?: boolean;\n  columnItems: TableColumnItem<Row>[];\n  itemSpacing?: number;\n  itemXs?: number;\n  rowsPerPageOptions?: number[];\n  showPagination?: boolean;\n  renderItem?: (row: Row, index?: number, checkBox?: () => ReactElement) => ReactElement;\n  CollapseComponent?: FC<{ row: Row }>;\n  isCustomRender?: boolean;\n  noDataText?: string;\n  tableKey?: string;\n  showCheckbox?: boolean;\n  showSelectAllCheckbox?: boolean;\n  selectedSymbol?: string;\n  isSelectOtherPageCheckbox?: boolean;\n  showBorder?: boolean;\n  getSelectCheckbox?: (arr: Array<string | number>) => void;\n  hover?: boolean;\n  labelRowsPerPage?: string;\n  itemIsMobileSpacing?: number;\n  disableCheckbox?: boolean;\n  applyAllDisableCheckbox?: boolean;\n  onClickRow?: (item: Row, index?: number) => void;\n  showRowsPerPageOptions?: boolean;\n  sortDirection?: 'asc' | 'desc';\n  sortByFn?: (e: { key: string }) => void;\n  orderBy?: string;\n  pageType?: string;\n  items: PossibleNodeWrapper<Row>[];\n}\n\nfunction PaginationTable<Row extends object>({\n  columnItems,\n  isCustomRender = false,\n  tableKey,\n  renderItem,\n  noDataText = '',\n  tableFixed = false,\n  tableHeaderHide = false,\n  rowsPerPageOptions = [10, 20, 30],\n  itemSpacing = 2,\n  itemXs = 4,\n  showCheckbox = false,\n  showSelectAllCheckbox = false,\n  selectedSymbol = 'id',\n  isSelectOtherPageCheckbox = false,\n  showBorder = true,\n  getSelectCheckbox,\n  hover = false,\n  labelRowsPerPage = '',\n  itemIsMobileSpacing = 2,\n  disableCheckbox = false,\n  onClickRow,\n  showPagination = true,\n  showRowsPerPageOptions = true,\n  CollapseComponent,\n  applyAllDisableCheckbox = true,\n  sortDirection = 'asc',\n  sortByFn = () => {},\n  orderBy = '',\n  pageType = '',\n  items,\n}: PaginationTableProps<Row>) {\n  const initPagination = {\n    offset: 0,\n    first: rowsPerPageOptions[0],\n  };\n\n  const [pagination, setPagination] = useState<TablePagination>(initPagination);\n\n  const [isAllSelect, setAllSelect] = useState<boolean>(false);\n\n  const [selectCheckbox, setSelectCheckbox] = useState<Array<string | number>>([]);\n\n  const [isMobile] = useMobile();\n\n  useEffect(() => {\n    if (getSelectCheckbox) getSelectCheckbox(selectCheckbox);\n    // disabling as getSelectCheckbox will trigger rerenders if the user passes a function that is not memoized\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectCheckbox, items]);\n\n  const handlePaginationChange = async (pagination: TablePagination) => {\n    setPagination(pagination);\n  };\n\n  const tablePagination = {\n    ...pagination,\n    count: items.length,\n  };\n\n  const getCurrentAllItemsSelect = useCallback(() => {\n    if (!selectCheckbox.length) return false;\n    return items.every((item) => {\n      const option = isNodeWrapper(item) ? item.node : item;\n\n      // @ts-expect-error typed previously as an any\n      return selectCheckbox.includes(option[selectedSymbol]);\n    });\n  }, [items, selectCheckbox, selectedSymbol]);\n\n  useEffect(() => {\n    if (isSelectOtherPageCheckbox) {\n      const flag = getCurrentAllItemsSelect();\n      setAllSelect(flag);\n    }\n  }, [selectCheckbox, pagination, isSelectOtherPageCheckbox, getCurrentAllItemsSelect]);\n\n  const handleSelectAllItems = () => {\n    const singlePageCheckbox = () => {\n      if (selectCheckbox.length === items.length) {\n        setSelectCheckbox([]);\n      } else {\n        const selects: Array<string | number> = [];\n        items.forEach((item) => {\n          const option = isNodeWrapper(item) ? item.node : item;\n          if (option) {\n            if (pageType === 'shoppingListDetailsTable') {\n              selects.push(\n                // @ts-expect-error typed previously as an any\n                option.quantity > 0 || !option.disableCurrentCheckbox ? option[selectedSymbol] : '',\n              );\n            } else {\n              // @ts-expect-error typed previously as an any\n              selects.push(option[selectedSymbol]);\n            }\n          }\n        });\n        setSelectCheckbox(selects);\n      }\n    };\n\n    const otherPageCheckbox = () => {\n      const flag = getCurrentAllItemsSelect();\n\n      const newSelectCheckbox = [...selectCheckbox];\n      if (flag) {\n        items.forEach((item) => {\n          const option = isNodeWrapper(item) ? item.node : item;\n          // @ts-expect-error typed previously as an any\n          const index = newSelectCheckbox.findIndex((item) => item === option[selectedSymbol]);\n          newSelectCheckbox.splice(index, 1);\n        });\n      } else {\n        items.forEach((item) => {\n          const option = isNodeWrapper(item) ? item.node : item;\n          // @ts-expect-error typed previously as an any\n          if (!selectCheckbox.includes(option[selectedSymbol])) {\n            // @ts-expect-error typed previously as an any\n            newSelectCheckbox.push(option[selectedSymbol]);\n          }\n        });\n      }\n\n      setSelectCheckbox(newSelectCheckbox);\n    };\n\n    if (isSelectOtherPageCheckbox) {\n      otherPageCheckbox();\n    } else {\n      singlePageCheckbox();\n    }\n  };\n\n  const handleSelectOneItem = (id: string | number) => {\n    const selects = [...selectCheckbox];\n    const index = selects.indexOf(id);\n    if (index !== -1) {\n      selects.splice(index, 1);\n    } else {\n      selects.push(id);\n    }\n    setSelectCheckbox(selects);\n  };\n\n  return (\n    <B3Table\n      hover={hover}\n      columnItems={columnItems || []}\n      listItems={items.slice(pagination.offset, pagination.offset + pagination.first)}\n      pagination={tablePagination}\n      rowsPerPageOptions={rowsPerPageOptions}\n      onPaginationChange={handlePaginationChange}\n      isCustomRender={isCustomRender}\n      isInfiniteScroll={isMobile}\n      renderItem={renderItem}\n      tableFixed={tableFixed}\n      tableHeaderHide={tableHeaderHide}\n      itemSpacing={itemSpacing}\n      itemXs={itemXs}\n      noDataText={noDataText}\n      tableKey={tableKey}\n      itemIsMobileSpacing={itemIsMobileSpacing}\n      showCheckbox={showCheckbox}\n      showSelectAllCheckbox={showSelectAllCheckbox}\n      disableCheckbox={disableCheckbox}\n      selectedSymbol={selectedSymbol}\n      isSelectOtherPageCheckbox={isSelectOtherPageCheckbox}\n      isAllSelect={isAllSelect}\n      selectCheckbox={selectCheckbox}\n      handleSelectAllItems={handleSelectAllItems}\n      handleSelectOneItem={handleSelectOneItem}\n      showBorder={showBorder}\n      labelRowsPerPage={labelRowsPerPage}\n      onClickRow={onClickRow}\n      showPagination={showPagination}\n      showRowsPerPageOptions={showRowsPerPageOptions}\n      CollapseComponent={CollapseComponent}\n      applyAllDisableCheckbox={applyAllDisableCheckbox}\n      sortDirection={sortDirection}\n      sortByFn={sortByFn}\n      orderBy={orderBy}\n    />\n  );\n}\n\nexport default PaginationTable;\n","import { Delete, Edit } from '@mui/icons-material';\nimport { Box, CardContent, styled, TextField, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { currencyFormat } from '@/utils';\nimport { getBCPrice, getDisplayPrice } from '@/utils/b3Product/b3Product';\n\nimport { getProductOptionsFields } from '../../../utils/b3Product/shared/config';\n\ninterface QuoteTableCardProps {\n  item: any;\n  onEdit: (item: any, itemId: string) => void;\n  onDelete: (id: string) => void;\n  handleUpdateProductQty: (id: number | string, value: number | string) => void;\n  idEdit: boolean;\n  len: number;\n  itemIndex?: number;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuoteTableCard(props: QuoteTableCardProps) {\n  const {\n    item: quoteTableItem,\n    onEdit,\n    onDelete,\n    handleUpdateProductQty,\n    idEdit,\n    len,\n    itemIndex,\n  } = props;\n\n  const {\n    basePrice,\n    quantity,\n    id,\n    primaryImage,\n    productName,\n    variantSku,\n    productsSearch,\n    taxPrice = 0,\n  } = quoteTableItem;\n\n  const b3Lang = useB3Lang();\n\n  const price = getBCPrice(Number(basePrice), Number(taxPrice));\n\n  const total = price * Number(quantity);\n\n  const product: any = {\n    ...quoteTableItem.productsSearch,\n    selectOptions: quoteTableItem.optionList,\n  };\n\n  const productFields = getProductOptionsFields(product, {});\n\n  const optionList = JSON.parse(quoteTableItem.optionList);\n  const optionsValue: CustomFieldItems[] = productFields.filter((item) => item.valueText);\n\n  const { productUrl } = productsSearch;\n\n  const singlePrice = getDisplayPrice({\n    price: currencyFormat(price),\n    productInfo: quoteTableItem,\n    showText: b3Lang('quoteDraft.quoteSummary.tbd'),\n  });\n\n  const totalPrice = getDisplayPrice({\n    price: currencyFormat(total),\n    productInfo: quoteTableItem,\n    showText: b3Lang('quoteDraft.quoteSummary.tbd'),\n  });\n\n  return (\n    <Box\n      key={quoteTableItem.id}\n      width=\"100%\"\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n        borderBottom: itemIndex === len - 1 ? '1px solid #D9DCE9' : '',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>\n          <StyledImage\n            src={primaryImage || PRODUCT_DEFAULT_IMAGE}\n            alt=\"Product-img\"\n            loading=\"lazy\"\n          />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography\n            variant=\"body1\"\n            color=\"#212121\"\n            onClick={() => {\n              const {\n                location: { origin },\n              } = window;\n\n              if (productUrl) {\n                window.location.href = `${origin}${productUrl}`;\n              }\n            }}\n            sx={{\n              cursor: 'pointer',\n            }}\n          >\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {variantSku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {optionList.length > 0 && optionsValue.length > 0 && (\n              <Box>\n                {optionsValue.map((option: any) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.valueLabel}\n                  >\n                    {`${option.valueLabel}: ${option.valueText}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>{`Price: ${singlePrice}`}</Typography>\n\n          <TextField\n            size=\"small\"\n            type=\"number\"\n            variant=\"filled\"\n            label=\"qty\"\n            disabled={!idEdit}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            value={quantity}\n            sx={{\n              margin: '1rem 0',\n              width: '60%',\n              maxWidth: '100px',\n              '& label': {\n                fontSize: '14px',\n              },\n              '& input': {\n                fontSize: '14px',\n              },\n            }}\n            onChange={(e) => {\n              handleUpdateProductQty(quoteTableItem, e.target.value);\n            }}\n          />\n          <Typography sx={{ fontSize: '14px' }}>{`Total: ${totalPrice}`}</Typography>\n          <Box\n            sx={{\n              marginTop: '1rem',\n              textAlign: 'end',\n            }}\n            id=\"shoppingList-actionList-mobile\"\n          >\n            {optionList.length > 0 && idEdit && (\n              <Edit\n                sx={{\n                  marginRight: '0.5rem',\n                  cursor: 'pointer',\n                  color: 'rgba(0, 0, 0, 0.54)',\n                }}\n                onClick={() => {\n                  onEdit(\n                    {\n                      ...productsSearch,\n                      quantity,\n                      selectOptions: quoteTableItem.optionList,\n                    },\n                    id,\n                  );\n                }}\n              />\n            )}\n            {idEdit && (\n              <Delete\n                sx={{\n                  cursor: 'pointer',\n                  color: 'rgba(0, 0, 0, 0.54)',\n                }}\n                onClick={() => {\n                  onDelete(id);\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuoteTableCard;\n","import { useState } from 'react';\nimport { Delete, Edit, Warning as WarningIcon } from '@mui/icons-material';\nimport { Box, styled, TextField, Typography } from '@mui/material';\nimport ceil from 'lodash-es/ceil';\n\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport PaginationTable from '@/components/table/PaginationTable';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useFeatureFlags } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport {\n  deleteProductFromDraftQuoteList,\n  setDraftProduct,\n  useAppDispatch,\n  useAppSelector,\n} from '@/store';\nimport { Product } from '@/types';\nimport { QuoteItem } from '@/types/quotes';\nimport { currencyFormat, snackbar } from '@/utils';\nimport {\n  calculateProductListPrice,\n  getBCPrice,\n  getDisplayPrice,\n  getVariantInfoOOSAndPurchase,\n  setModifierQtyPrice,\n} from '@/utils/b3Product/b3Product';\nimport { getProductOptionsFields } from '@/utils/b3Product/shared/config';\n\nimport ChooseOptionsDialog from '../../ShoppingListDetails/components/ChooseOptionsDialog';\n\nimport QuoteTableCard from './QuoteTableCard';\n\ninterface ShoppingDetailTableProps {\n  total: number;\n  items: any[];\n  idEdit?: boolean;\n  updateSummary: () => void;\n}\n\nconst StyledQuoteTableContainer = styled('div')(() => ({\n  backgroundColor: '#FFFFFF',\n  padding: '0',\n  width: '100%',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        verticalAlign: 'inherit',\n      },\n    },\n    '& tr: hover': {\n      '& #shoppingList-actionList': {\n        opacity: 1,\n      },\n    },\n  },\n}));\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nconst StyledTextField = styled(TextField)(() => ({\n  '& input': {\n    paddingTop: '12px',\n    paddingRight: '6px',\n  },\n}));\nconst QUOTE_PRODUCT_QTY_MAX = 1000000;\n\nfunction QuoteTable(props: ShoppingDetailTableProps) {\n  const { total, items, idEdit = true, updateSummary } = props;\n  const b3Lang = useB3Lang();\n  const dispatch = useAppDispatch();\n  const featureFlags = useFeatureFlags();\n\n  const [isRequestLoading, setIsRequestLoading] = useState(false);\n  const [chooseOptionsOpen, setSelectedOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<any>(null);\n  const [optionsProductId, setOptionsProductId] = useState<string>('');\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const handleUpdateProductQty = async (row: any, value: number | string) => {\n    const product = await setModifierQtyPrice(row, Number(value));\n\n    dispatch(\n      setDraftProduct({\n        id: product.id,\n        product: {\n          node: product,\n        },\n      }),\n    );\n    updateSummary();\n  };\n\n  const handleCheckProductQty = async (row: any, value: number | string) => {\n    let newQty = ceil(Number(value));\n    if (newQty === Number(value) && newQty >= 1 && newQty <= QUOTE_PRODUCT_QTY_MAX) return;\n\n    if (Number(value) < 1) {\n      newQty = 1;\n    }\n\n    if (Number(value) > QUOTE_PRODUCT_QTY_MAX) {\n      newQty = QUOTE_PRODUCT_QTY_MAX;\n    }\n\n    handleUpdateProductQty(row, newQty);\n  };\n\n  const handleDeleteClick = (id: string) => {\n    dispatch(deleteProductFromDraftQuoteList(id));\n    updateSummary();\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setSelectedOptionsOpen(false);\n  };\n\n  const handleOpenProductEdit = (product: Product, itemId: string) => {\n    setOptionsProduct(product);\n    setOptionsProductId(itemId);\n    setSelectedOptionsOpen(true);\n  };\n\n  const getNewQuoteProduct = (products: Product[]): QuoteItem[] =>\n    products.map((product) => {\n      const {\n        variantId,\n        newSelectOptionList,\n        id,\n        productId,\n        name: productName,\n        quantity,\n        variants = [],\n        basePrice,\n        taxPrice = 0,\n        calculatedNoTaxPrice = 0,\n        calculatedTaxPrice = 0,\n      } = product;\n\n      let [variantInfo] = variants;\n      if (variants.length > 1) {\n        variantInfo = variants.find((item) => item.variant_id === variantId) ?? variantInfo;\n      }\n\n      const { image_url: primaryImage = '', sku: variantSku } = variantInfo;\n\n      let selectOptions;\n      try {\n        selectOptions = JSON.stringify(newSelectOptionList);\n      } catch (error) {\n        selectOptions = '[]';\n      }\n\n      const taxExclusive = variantInfo!.bc_calculated_price?.tax_exclusive || 0;\n      const basePriceExclusiveTax = basePrice || taxExclusive;\n\n      return {\n        node: {\n          basePrice: basePriceExclusiveTax,\n          taxPrice,\n          optionList: selectOptions,\n          id: id.toString(),\n          primaryImage,\n          productId,\n          productName,\n          productsSearch: {\n            ...product,\n            selectOptions,\n          },\n          quantity: Number(quantity),\n          variantSku,\n          calculatedTaxPrice,\n          calculatedNoTaxPrice,\n          calculatedValue: {},\n        },\n      };\n    });\n\n  const handleChooseOptionsDialogConfirm = async (products: Product[]) => {\n    await calculateProductListPrice(products);\n    const newProducts = getNewQuoteProduct(products);\n\n    newProducts.forEach((product) => {\n      const { basePrice } = product.node;\n      const newProduct = product;\n      newProduct.node.id = optionsProductId;\n\n      newProduct.node.basePrice = basePrice;\n    });\n\n    setSelectedOptionsOpen(false);\n\n    dispatch(setDraftProduct({ id: optionsProductId, product: newProducts[0] }));\n    updateSummary();\n\n    snackbar.success(b3Lang('quoteDraft.quoteTable.productUpdated'));\n  };\n\n  const columnItems: TableColumnItem<QuoteItem['node']>[] = [\n    {\n      key: 'Product',\n      title: b3Lang('quoteDraft.quoteTable.product'),\n      render: (row: CustomFieldItems) => {\n        const product: any = {\n          ...row.productsSearch,\n          selectOptions: row.optionList,\n        };\n        const productFields = getProductOptionsFields(product, {});\n\n        const optionList = JSON.parse(row.optionList);\n        const optionsValue: CustomFieldItems[] = productFields.filter((item) => item.valueText);\n\n        let warningMessage: string | null = null;\n        let warningDetails: string | null = null;\n\n        if (!featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend']) {\n          const currentProduct = getVariantInfoOOSAndPurchase(row);\n          const showWarning = !isEnableProduct && currentProduct?.name;\n\n          if (showWarning) {\n            if (currentProduct?.type === 'oos') {\n              const inventoryTracking =\n                product.inventoryTracking || row.inventoryTracking || 'none';\n\n              let inventoryLevel = product.inventoryLevel || row.inventoryLevel || 0;\n              if (inventoryTracking === 'variant') {\n                const currentVariant = product.variants.find(\n                  (variant: CustomFieldItems) => variant.sku === row.variantSku,\n                );\n\n                inventoryLevel = currentVariant?.inventory_level;\n              }\n\n              warningMessage = b3Lang('quoteDraft.quoteTable.outOfStock.tip');\n              warningDetails = b3Lang('quoteDraft.quoteTable.oosNumber.tip', {\n                qty: inventoryLevel,\n              });\n            } else {\n              warningMessage = b3Lang('quoteDraft.quoteTable.unavailable.tip');\n            }\n          }\n        }\n\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={row.primaryImage || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography\n                variant=\"body1\"\n                color=\"#212121\"\n                onClick={() => {\n                  const {\n                    location: { origin },\n                  } = window;\n\n                  if (product?.productUrl) {\n                    window.location.href = `${origin}${product?.productUrl}`;\n                  }\n                }}\n                sx={{\n                  cursor: 'pointer',\n                }}\n              >\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.variantSku}\n              </Typography>\n              {optionList.length > 0 && optionsValue.length > 0 && (\n                <Box>\n                  {optionsValue.map((option: any) => (\n                    <Typography\n                      sx={{\n                        fontSize: '0.75rem',\n                        lineHeight: '1.5',\n                        color: '#455A64',\n                      }}\n                      key={option.valueLabel}\n                    >\n                      {`${option.valueLabel}: ${option.valueText}`}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n\n              {warningMessage && (\n                <Box sx={{ color: 'red' }}>\n                  <Box\n                    sx={{\n                      mt: '1rem',\n                      display: 'flex',\n                      alignItems: 'center',\n                      '& svg': { mr: '0.5rem' },\n                    }}\n                  >\n                    <WarningIcon color=\"error\" fontSize=\"small\" />\n                    {warningMessage}\n                  </Box>\n                  {warningDetails && <Box>{warningDetails}</Box>}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n    },\n    {\n      key: 'Price',\n      title: b3Lang('quoteDraft.quoteTable.price'),\n      render: (row: CustomFieldItems) => {\n        const { basePrice, taxPrice } = row;\n\n        const inTaxPrice = getBCPrice(Number(basePrice), Number(taxPrice));\n        return (\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {getDisplayPrice({\n              price: currencyFormat(inTaxPrice),\n              productInfo: row,\n              showText: b3Lang('quoteDraft.quoteSummary.tbd'),\n            })}\n          </Typography>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'Qty',\n      title: b3Lang('quoteDraft.quoteTable.qty'),\n      render: (row) => (\n        <StyledTextField\n          size=\"small\"\n          type=\"number\"\n          variant=\"filled\"\n          disabled={!idEdit}\n          value={row.quantity}\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n          }}\n          onChange={(e) => {\n            handleUpdateProductQty(row, Number(e.target.value));\n          }}\n          onBlur={(e) => {\n            handleCheckProductQty(row, Number(e.target.value));\n          }}\n          sx={{\n            width: '75%',\n          }}\n        />\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'Total',\n      title: b3Lang('quoteDraft.quoteTable.total'),\n      render: (row) => {\n        const { basePrice, quantity, taxPrice } = row;\n\n        const inTaxPrice = getBCPrice(Number(basePrice), Number(taxPrice));\n        const total = inTaxPrice * Number(quantity);\n        const optionList = JSON.parse(row.optionList);\n\n        return (\n          <Box>\n            <Typography\n              sx={{\n                padding: '12px 0',\n              }}\n            >\n              {getDisplayPrice({\n                price: currencyFormat(total),\n                productInfo: row,\n                showText: b3Lang('quoteDraft.quoteSummary.tbd'),\n              })}\n            </Typography>\n            <Box\n              sx={{\n                marginTop: '1rem',\n                opacity: 0,\n                textAlign: 'end',\n              }}\n              id=\"shoppingList-actionList\"\n            >\n              {optionList.length > 0 && idEdit && (\n                <Edit\n                  sx={{\n                    marginRight: '0.5rem',\n                    cursor: 'pointer',\n                    color: 'rgba(0, 0, 0, 0.54)',\n                  }}\n                  onClick={() => {\n                    const { productsSearch, id, optionList, quantity } = row;\n\n                    handleOpenProductEdit(\n                      {\n                        ...productsSearch,\n                        quantity,\n                        selectOptions: optionList,\n                      },\n                      id,\n                    );\n                  }}\n                />\n              )}\n              {idEdit && (\n                <Delete\n                  sx={{\n                    cursor: 'pointer',\n                    color: 'rgba(0, 0, 0, 0.54)',\n                  }}\n                  onClick={() => {\n                    const { id } = row;\n                    handleDeleteClick(id);\n                  }}\n                />\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ];\n\n  return (\n    <StyledQuoteTableContainer>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          margin: '0.5rem 0 1rem',\n        }}\n      >\n        <Typography\n          sx={{\n            fontSize: '24px',\n          }}\n        >\n          {b3Lang('quoteDraft.quoteTable.totalProducts', { total: total || 0 })}\n        </Typography>\n      </Box>\n\n      <PaginationTable\n        columnItems={columnItems}\n        rowsPerPageOptions={[12, 24, 36]}\n        items={items}\n        isCustomRender={false}\n        hover\n        labelRowsPerPage={b3Lang('quoteDraft.quoteTable.perPage')}\n        showBorder={false}\n        itemIsMobileSpacing={0}\n        noDataText={b3Lang('quoteDraft.quoteTable.noProducts')}\n        renderItem={(row, index?) => (\n          <QuoteTableCard\n            len={total || 0}\n            item={row}\n            itemIndex={index}\n            onEdit={handleOpenProductEdit}\n            onDelete={handleDeleteClick}\n            handleUpdateProductQty={handleUpdateProductQty}\n            idEdit={idEdit}\n          />\n        )}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isRequestLoading}\n        setIsLoading={setIsRequestLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={\n          handleChooseOptionsDialogConfirm as unknown as (products: CustomFieldItems[]) => void\n        }\n        isEdit\n      />\n    </StyledQuoteTableContainer>\n  );\n}\n\nexport default QuoteTable;\n","import { LangFormatFunction } from '@/lib/lang';\n\nconst getAccountFormFields = (isMobile: boolean, b3Lang: LangFormatFunction) => {\n  const accountFormFields = [\n    {\n      name: 'label',\n      label: b3Lang('quoteDraft.config.addressLabel'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'firstName',\n      label: b3Lang('quoteDraft.config.firstName'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'lastName',\n      label: b3Lang('quoteDraft.config.lastName'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'companyName',\n      label: b3Lang('quoteDraft.config.company'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'country',\n      label: b3Lang('quoteDraft.config.country'),\n      required: false,\n      default: '',\n      fieldType: 'dropdown',\n      options: [],\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n      replaceOptions: {\n        label: 'countryName',\n        value: 'countryCode',\n      },\n    },\n    {\n      name: 'address',\n      label: b3Lang('quoteDraft.config.addressLine1'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'apartment',\n      label: b3Lang('quoteDraft.config.addressLine2'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'city',\n      label: b3Lang('quoteDraft.config.city'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      options: [],\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'state',\n      label: b3Lang('quoteDraft.config.state'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      options: [],\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n      replaceOptions: {\n        label: 'stateName',\n        value: 'stateName',\n      },\n    },\n    {\n      name: 'zipCode',\n      label: b3Lang('quoteDraft.config.zipCode'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      options: [],\n      xs: isMobile ? 12 : 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'phoneNumber',\n      label: b3Lang('quoteDraft.config.phoneNumber'),\n      required: false,\n      default: '',\n      fieldType: 'text',\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  return accountFormFields;\n};\n\nexport default getAccountFormFields;\n","import { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowBackIosNew } from '@mui/icons-material';\nimport { Box, Checkbox, FormControlLabel, Stack, Typography } from '@mui/material';\nimport { cloneDeep, concat, uniq } from 'lodash-es';\nimport { v4 as uuid } from 'uuid';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { permissionLevels } from '@/constants';\nimport {\n  dispatchEvent,\n  useFeatureFlags,\n  useMobile,\n  useSetCountry,\n  useValidatePermissionWithComparisonType,\n} from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { GlobalContext } from '@/shared/global';\nimport { createQuote, getB2BCustomerAddresses, getBCCustomerAddresses } from '@/shared/service/b2b';\nimport { deleteCart } from '@/shared/service/bc/graphql/cart';\nimport {\n  activeCurrencyInfoSelector,\n  isB2BUserSelector,\n  resetDraftQuoteInfo,\n  resetDraftQuoteList,\n  setDraftQuoteInfo,\n  setDraftQuoteRecipients,\n  setQuoteUserId,\n  useAppDispatch,\n  useAppSelector,\n} from '@/store';\nimport { AddressItemType, BCAddressItemType } from '@/types/address';\nimport {\n  BillingAddress,\n  ContactInfoKeys,\n  QuoteExtraFields,\n  QuoteFormattedItemsProps,\n  QuoteInfo as QuoteInfoType,\n  ShippingAddress,\n} from '@/types/quotes';\nimport { B3LStorage, channelId, snackbar, storeHash } from '@/utils';\nimport { verifyCreatePermission } from '@/utils/b3CheckPermissions';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\nimport b2bLogger from '@/utils/b3Logger';\nimport { addQuoteDraftProducts, getVariantInfoOOSAndPurchase } from '@/utils/b3Product/b3Product';\nimport { deleteCartData } from '@/utils/cartUtils';\nimport validateObject from '@/utils/quoteUtils';\nimport { validateProducts } from '@/utils/validateProducts';\n\nimport { getProductOptionsFields } from '../../utils/b3Product/shared/config';\nimport { convertBCToB2BAddress } from '../AddressList/shared/config';\nimport { type PageProps } from '../PageProps';\nimport AddToQuote from '../quote/components/AddToQuote';\nimport ContactInfo from '../quote/components/ContactInfo';\nimport QuoteAddress from '../quote/components/QuoteAddress';\nimport QuoteAttachment from '../quote/components/QuoteAttachment';\nimport QuoteInfo from '../quote/components/QuoteInfo';\nimport QuoteNote from '../quote/components/QuoteNote';\nimport QuoteStatus from '../quote/components/QuoteStatus';\nimport QuoteSubmissionResponse from '../quote/components/QuoteSubmissionResponse';\nimport QuoteSummary from '../quote/components/QuoteSummary';\nimport QuoteTable from '../quote/components/QuoteTable';\nimport getAccountFormFields from '../quote/config';\nimport Container from '../quote/style';\nimport getB2BQuoteExtraFields from '../quote/utils/getQuoteExtraFields';\n\ntype BCAddress = {\n  node: BCAddressItemType;\n};\n\ntype B2BAddress = {\n  node: AddressItemType;\n};\n\ninterface Country {\n  countryCode: string;\n  countryName: string;\n  id?: string;\n}\n\ninterface InfoRefProps extends HTMLInputElement {\n  getContactInfoValue: () => any;\n  setShippingInfoValue: (address: any) => void;\n}\n\ninterface QuoteSummaryRef extends HTMLInputElement {\n  refreshSummary: () => void;\n}\n\nconst shippingAddress = {\n  address: '',\n  addressId: 0,\n  apartment: '',\n  city: '',\n  country: '',\n  firstName: '',\n  label: '',\n  lastName: '',\n  phoneNumber: '',\n  state: '',\n  zipCode: '',\n  companyName: '',\n};\n\nconst billingAddress = {\n  address: '',\n  addressId: 0,\n  apartment: '',\n  city: '',\n  country: '',\n  firstName: '',\n  label: '',\n  lastName: '',\n  phoneNumber: '',\n  state: '',\n  zipCode: '',\n  companyName: '',\n};\n\nfunction QuoteDraft({ setOpenPage }: PageProps) {\n  const {\n    state: { countriesList, openAPPParams },\n  } = useContext(GlobalContext);\n  const dispatch = useAppDispatch();\n  const featureFlags = useFeatureFlags();\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyB2BId = useAppSelector(({ company }) => company.companyInfo.id);\n  const companyName = useAppSelector(({ company }) => company.companyInfo.companyName);\n  const customer = useAppSelector(({ company }) => company.customer);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const enteredInclusiveTax = useAppSelector(\n    ({ storeConfigs }) => storeConfigs.currencies.enteredInclusiveTax,\n  );\n  const draftQuoteList = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const quoteInfoOrigin = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteInfo);\n  const currency = useAppSelector(activeCurrencyInfoSelector);\n  const quoteSubmissionResponseInfo = useAppSelector(\n    ({ global }) => global.quoteSubmissionResponse,\n  );\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const isMoveStockAndBackorderValidationToBackend =\n    featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend'];\n\n  const quotesActionsPermission = useMemo(() => {\n    if (isB2BUser) {\n      return verifyCreatePermission(\n        b2bPermissionsMap.quotesCreateActionsPermission,\n        Number(selectCompanyHierarchyId),\n      );\n    }\n\n    return true;\n  }, [isB2BUser, selectCompanyHierarchyId]);\n\n  const navigate = useNavigate();\n\n  const b3Lang = useB3Lang();\n\n  const [isMobile] = useMobile();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [isEdit, setEdit] = useState<boolean>(false);\n\n  const [addressList, setAddressList] = useState<B2BAddress[]>([]);\n\n  const [shippingSameAsBilling, setShippingSameAsBilling] = useState<boolean>(false);\n  const [billingChange, setBillingChange] = useState<boolean>(false);\n  const [quoteSubmissionResponseOpen, setQuoteSubmissionResponseOpen] = useState<boolean>(false);\n  const [quoteId, setQuoteId] = useState<string | number>('');\n  const [currentCreatedAt, setCurrentCreatedAt] = useState<string | number>('');\n  const [extraFields, setExtraFields] = useState<QuoteFormattedItemsProps[]>([]);\n\n  const quoteSummaryRef = useRef<QuoteSummaryRef | null>(null);\n\n  const [isAddressCompanyHierarchy] = useValidatePermissionWithComparisonType({\n    level: permissionLevels.COMPANY_SUBSIDIARIES,\n    code: b2bPermissionsMap.getAddressesPermission,\n    containOrEqual: 'equal',\n  });\n\n  useSetCountry();\n\n  const contactInfoRef = useRef<InfoRefProps | null>(null);\n  const billingRef = useRef<InfoRefProps | null>(null);\n  const shippingRef = useRef<InfoRefProps | null>(null);\n\n  useEffect(() => {\n    const init = async () => {\n      setLoading(true);\n      const setCustomInfo = (quoteInfo: any) => {\n        const newInfo = {\n          ...quoteInfo,\n        };\n        newInfo.contactInfo = {\n          name: `${customer.firstName} ${customer.lastName}`,\n          email: customer.emailAddress,\n          companyName: companyName || salesRepCompanyName || '',\n          phoneNumber: customer.phoneNumber,\n        };\n        dispatch(setDraftQuoteInfo(newInfo));\n      };\n\n      const quoteInfo = cloneDeep(quoteInfoOrigin);\n\n      try {\n        if (isB2BUser) {\n          const companyId = companyB2BId || salesRepCompanyId;\n\n          let addressB2BList = [];\n          const fetchAddresses = async (id: number) => {\n            const {\n              addresses: { edges },\n            } = await getB2BCustomerAddresses(id);\n            return edges;\n          };\n\n          if (!selectCompanyHierarchyId) {\n            addressB2BList = await fetchAddresses(Number(companyId));\n          } else if (selectCompanyHierarchyId && isAddressCompanyHierarchy) {\n            addressB2BList = await fetchAddresses(Number(selectCompanyHierarchyId));\n          }\n\n          const shippingDefaultAddress = addressB2BList.find(\n            (item: B2BAddress) => item?.node?.isDefaultShipping === 1,\n          );\n          const billingDefaultAddress = addressB2BList.find(\n            (item: B2BAddress) => item?.node?.isDefaultBilling === 1,\n          );\n\n          if (shippingDefaultAddress && validateObject(quoteInfo, 'shippingAddress')) {\n            const addressItem = {\n              label: shippingDefaultAddress?.node?.label || '',\n              firstName: shippingDefaultAddress?.node?.firstName || '',\n              lastName: shippingDefaultAddress?.node?.lastName || '',\n              companyName: shippingDefaultAddress?.node?.company || '',\n              country: shippingDefaultAddress?.node?.countryCode || '',\n              address: shippingDefaultAddress?.node?.addressLine1 || '',\n              apartment: shippingDefaultAddress?.node?.addressLine2 || '',\n              city: shippingDefaultAddress?.node?.city || '',\n              state: shippingDefaultAddress?.node?.state || '',\n              zipCode: shippingDefaultAddress?.node?.zipCode || '',\n              phoneNumber: shippingDefaultAddress?.node?.phoneNumber || '',\n              addressId: shippingDefaultAddress?.node?.id\n                ? Number(shippingDefaultAddress.node.id)\n                : 0,\n            };\n\n            quoteInfo.shippingAddress = addressItem as ShippingAddress;\n          }\n          if (\n            billingDefaultAddress &&\n            (!quoteInfo?.billingAddress || validateObject(quoteInfo, 'billingAddress'))\n          ) {\n            const addressItem = {\n              label: billingDefaultAddress?.node?.label || '',\n              firstName: billingDefaultAddress?.node?.firstName || '',\n              lastName: billingDefaultAddress?.node?.lastName || '',\n              companyName: billingDefaultAddress?.node?.company || '',\n              country: billingDefaultAddress?.node?.countryCode || '',\n              address: billingDefaultAddress?.node?.addressLine1 || '',\n              apartment: billingDefaultAddress?.node?.addressLine2 || '',\n              city: billingDefaultAddress?.node?.city || '',\n              state: billingDefaultAddress?.node?.state || '',\n              zipCode: billingDefaultAddress?.node?.zipCode || '',\n              phoneNumber: billingDefaultAddress?.node?.phoneNumber || '',\n              addressId: billingDefaultAddress?.node?.id\n                ? Number(billingDefaultAddress.node.id)\n                : 0,\n            };\n\n            quoteInfo.billingAddress = addressItem as BillingAddress;\n          }\n\n          setAddressList(addressB2BList);\n        } else if (role !== 100) {\n          const {\n            customerAddresses: { edges: addressBCList = [] },\n          } = await getBCCustomerAddresses();\n\n          const list = addressBCList.map((address: BCAddress) => ({\n            node: convertBCToB2BAddress(address.node),\n          }));\n          setAddressList(list);\n        }\n\n        const extraFieldsInfo = await getB2BQuoteExtraFields();\n        if (extraFieldsInfo.length) {\n          setExtraFields(extraFieldsInfo);\n          const preExtraFields = quoteInfo.extraFields;\n          const defaultValues = extraFieldsInfo?.map((field) => {\n            const defaultValue =\n              preExtraFields?.find((item: QuoteExtraFields) => item.fieldName === field.name)\n                ?.value || field?.default;\n\n            return {\n              id: Number(field.id),\n              fieldName: field.name,\n              value: defaultValue || '',\n            };\n          });\n          quoteInfo.extraFields = defaultValues;\n        }\n\n        if (\n          quoteInfo &&\n          (!quoteInfo?.contactInfo || validateObject(quoteInfo, 'contactInfo')) &&\n          Number(role) !== 100\n        ) {\n          setCustomInfo(quoteInfo);\n        } else if (quoteInfo) {\n          dispatch(setDraftQuoteInfo(quoteInfo));\n        }\n      } finally {\n        const quoteUserId = customer.b2bId || customer.id || 0;\n        dispatch(setQuoteUserId(Number(quoteUserId)));\n\n        setLoading(false);\n      }\n    };\n\n    init();\n    // disabling as we only need to run this once and values at starting render are good enough\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectCompanyHierarchyId, isAddressCompanyHierarchy]);\n\n  const quoteAndExtraFieldsInfo = useMemo(() => {\n    const contactInfo: CustomFieldItems = quoteInfoOrigin.contactInfo || {};\n\n    return {\n      info: {\n        quoteTitle: contactInfo?.quoteTitle || '',\n        referenceNumber: quoteInfoOrigin?.referenceNumber || '',\n      },\n      extraFields: quoteInfoOrigin.extraFields || [],\n      recipients: quoteInfoOrigin.recipients || [],\n    };\n  }, [quoteInfoOrigin]);\n\n  const getAddress = () => {\n    const addressSaveInfo = {\n      shippingAddress,\n      billingAddress,\n    };\n\n    if (billingRef?.current) {\n      addressSaveInfo.billingAddress = billingRef.current.getContactInfoValue();\n    }\n    if (shippingRef?.current) {\n      addressSaveInfo.shippingAddress = shippingRef.current.getContactInfoValue();\n    }\n\n    return addressSaveInfo;\n  };\n\n  const handleSaveCCEmail = async (ccEmail: string[]) => {\n    dispatch(setDraftQuoteRecipients(ccEmail));\n  };\n\n  const handleCollectingData = async (saveInfo: QuoteInfoType) => {\n    if (contactInfoRef?.current) {\n      const contactInfo = await contactInfoRef.current.getContactInfoValue();\n      if (!contactInfo) return false;\n\n      const currentRecipients = saveInfo?.recipients || [];\n      if (contactInfo.ccEmail.trim().length) {\n        saveInfo.recipients = uniq(concat(currentRecipients, [contactInfo.ccEmail]));\n      }\n\n      saveInfo.contactInfo = {\n        name: contactInfo?.name,\n        email: contactInfo?.email,\n        companyName: contactInfo?.companyName || '',\n        phoneNumber: contactInfo?.phoneNumber,\n        quoteTitle: contactInfo?.quoteTitle,\n      };\n      saveInfo.referenceNumber = contactInfo?.referenceNumber || '';\n\n      const extraFieldsInfo = extraFields.map((field) => ({\n        id: Number(field.id),\n        fieldName: field.name,\n        value: field.name ? contactInfo[field.name] : '',\n      }));\n      saveInfo.extraFields = extraFieldsInfo;\n\n      return true;\n    }\n    return false;\n  };\n\n  const handleSaveInfoClick = async () => {\n    const saveInfo = cloneDeep(quoteInfoOrigin);\n    if (contactInfoRef?.current) {\n      const data = await handleCollectingData(saveInfo);\n      if (!data) return;\n    }\n\n    const { shippingAddress, billingAddress } = getAddress();\n\n    saveInfo.shippingAddress = shippingAddress;\n    saveInfo.billingAddress = billingAddress;\n\n    const isComplete = Object.keys(saveInfo.contactInfo).every((key: string) => {\n      if (key === 'phoneNumber' || key === 'companyName' || key === 'quoteTitle') {\n        return true;\n      }\n      return !!saveInfo.contactInfo[key as ContactInfoKeys];\n    });\n\n    if (isComplete) {\n      dispatch(setDraftQuoteInfo(saveInfo));\n      setEdit(false);\n    }\n  };\n\n  const handleEditInfoClick = () => {\n    setEdit(true);\n  };\n\n  const accountFormFields = getAccountFormFields(isMobile, b3Lang);\n\n  const updateSummary = () => {\n    quoteSummaryRef.current?.refreshSummary();\n  };\n\n  const addToQuote = async (products: CustomFieldItems[]) => {\n    if (isMoveStockAndBackorderValidationToBackend) {\n      const validatedProducts = await validateProducts(products, b3Lang);\n\n      addQuoteDraftProducts(validatedProducts);\n\n      return validatedProducts.length > 0;\n    }\n\n    addQuoteDraftProducts(products);\n\n    return true;\n  };\n\n  const getFileList = (files: CustomFieldItems[]) => {\n    if (role === 100) {\n      return [];\n    }\n\n    return files.map((file) => ({\n      fileUrl: file.fileUrl,\n      fileName: file.fileName,\n      fileType: file.fileType,\n      fileSize: file.fileSize,\n    }));\n  };\n\n  const handleReset = () => {\n    dispatch(resetDraftQuoteInfo());\n    dispatch(resetDraftQuoteList());\n    B3LStorage.delete('cartToQuoteId');\n  };\n\n  const handleAfterSubmit = (\n    inpQuoteId?: string | number,\n    inpCurrentCreatedAt?: string | number,\n  ) => {\n    const currentQuoteId = inpQuoteId || quoteId;\n    const createdAt = inpCurrentCreatedAt || currentCreatedAt;\n\n    if (currentQuoteId) {\n      handleReset();\n      navigate(`/quoteDetail/${currentQuoteId}?date=${createdAt}`, {\n        state: {\n          to: 'draft',\n        },\n      });\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const info = cloneDeep(quoteInfoOrigin);\n      if (isEdit && contactInfoRef?.current) {\n        const data = await handleCollectingData(info);\n        if (!data) return;\n      }\n\n      const contactInfo = info?.contactInfo || {};\n\n      const quoteTitle = contactInfo?.quoteTitle || '';\n\n      if ('quoteTitle' in contactInfo) delete contactInfo.quoteTitle;\n\n      const isComplete = Object.keys(contactInfo).every((key: string) => {\n        if (key === 'phoneNumber' || key === 'companyName') {\n          return true;\n        }\n\n        return contactInfo && !!contactInfo[key as ContactInfoKeys];\n      });\n\n      if (validateObject(quoteInfoOrigin, 'contactInfo') || !isComplete) {\n        snackbar.error(b3Lang('quoteDraft.addQuoteInfo'));\n        return;\n      }\n\n      if (!draftQuoteList || draftQuoteList.length === 0) {\n        snackbar.error(b3Lang('quoteDraft.submit'));\n        return;\n      }\n\n      if (!isEnableProduct && !isMoveStockAndBackorderValidationToBackend) {\n        const itHasInvalidProduct = draftQuoteList.some((item) => {\n          return getVariantInfoOOSAndPurchase(item)?.name;\n        });\n\n        if (itHasInvalidProduct) {\n          snackbar.error(b3Lang('quoteDraft.submit.errorTip'));\n          return;\n        }\n      }\n\n      const note = info?.note || '';\n      const newNote = note.trim().replace(/[\\r\\n]/g, '\\\\n');\n\n      const perfectAddress = (address: ShippingAddress | BillingAddress) => {\n        const newAddress = cloneDeep(address);\n\n        const countryItem = countriesList?.find(\n          (item: Country) => item.countryCode === newAddress.country,\n        );\n\n        if (countryItem) {\n          newAddress.country = countryItem.countryName;\n        }\n\n        newAddress.address = address?.address || '';\n        newAddress.apartment = address?.apartment || '';\n\n        return newAddress;\n      };\n\n      const { shippingAddress: editShippingAddress, billingAddress: editBillingAddress } =\n        billingRef?.current ? getAddress() : info;\n\n      const shippingAddress = editShippingAddress ? perfectAddress(editShippingAddress) : {};\n\n      const billingAddress = editBillingAddress ? perfectAddress(editBillingAddress) : {};\n\n      let allPrice = 0;\n      let allTaxPrice = 0;\n\n      const calculationTime = (value: string | number) => {\n        if (typeof value === 'string' && value.includes('-')) {\n          return `${new Date(value).getTime() / 1000}`;\n        }\n        return value;\n      };\n\n      const productList = draftQuoteList.map((item) => {\n        const { node } = item;\n        const product = {\n          ...node.productsSearch,\n          selectOptions: node?.optionList || '',\n        };\n\n        const productFields = getProductOptionsFields(product, {});\n        const optionsList =\n          productFields\n            .map((item) => ({\n              optionId: item.optionId,\n              optionValue:\n                item.fieldType === 'date' ? calculationTime(item.optionValue) : item.optionValue,\n              optionLabel: `${item.valueText}`,\n              optionName: item.valueLabel,\n              type: item?.fieldOriginType || item.fieldType,\n            }))\n            .filter((list: CustomFieldItems) => !!list.optionName) || [];\n\n        const variants = node?.productsSearch?.variants;\n        let variantsItem;\n        if (Array.isArray(variants)) {\n          variantsItem = variants.find((item) => item.sku === node.variantSku);\n        }\n\n        allPrice += Number(node?.basePrice || 0) * Number(node?.quantity || 0);\n\n        allTaxPrice += Number(node?.taxPrice || 0) * Number(node?.quantity || 0);\n\n        const items = {\n          productId: node?.productsSearch?.id,\n          sku: node.variantSku,\n          basePrice: Number(node?.basePrice || 0).toFixed(currency.decimal_places),\n          discount: '0.00',\n          offeredPrice: Number(node?.basePrice || 0).toFixed(currency.decimal_places),\n          quantity: node.quantity,\n          variantId: variantsItem?.variant_id,\n          imageUrl: node.primaryImage,\n          productName: node.productName,\n          options: optionsList,\n          itemId: uuid(),\n        };\n\n        return items;\n      });\n\n      const fileList = getFileList(quoteInfoOrigin?.fileInfo || []);\n\n      const data = {\n        message: newNote,\n        legalTerms: '',\n        totalAmount: enteredInclusiveTax\n          ? allPrice.toFixed(currency.decimal_places)\n          : (allPrice + allTaxPrice).toFixed(currency.decimal_places),\n        grandTotal: allPrice.toFixed(currency.decimal_places),\n        subtotal: allPrice.toFixed(currency.decimal_places),\n        companyId: isB2BUser ? selectCompanyHierarchyId || companyB2BId || salesRepCompanyId : '',\n        storeHash,\n        quoteTitle,\n        discount: '0.00',\n        channelId,\n        userEmail: customer.emailAddress,\n        shippingAddress,\n        billingAddress,\n        contactInfo,\n        productList,\n        fileList,\n        taxTotal: allTaxPrice.toFixed(currency.decimal_places),\n        currency: {\n          currencyExchangeRate: currency.currency_exchange_rate,\n          token: currency.token,\n          location: currency.token_location,\n          decimalToken: currency.decimal_token,\n          decimalPlaces: currency.decimal_places,\n          thousandsToken: currency.thousands_token,\n          currencyCode: currency.currency_code,\n        },\n        referenceNumber: `${info.referenceNumber}` || '',\n        extraFields: info.extraFields || [],\n        recipients: info.recipients || [],\n      };\n\n      if (!dispatchEvent('on-quote-create', data)) {\n        throw new Error();\n      }\n\n      const response = await createQuote(data);\n\n      if (isMoveStockAndBackorderValidationToBackend) {\n        if (response?.error?.extensions?.productValidationErrors?.length) {\n          response.error.extensions.productValidationErrors.forEach(\n            (err: { productId: number }) => {\n              snackbar.error(\n                b3Lang('quoteDraft.notification.productCannotBeAddedToQuote', {\n                  productId: err.productId,\n                }),\n              );\n            },\n          );\n\n          return;\n        }\n      }\n\n      const {\n        quoteCreate: {\n          quote: { id, createdAt },\n        },\n      } = response;\n\n      setQuoteId(id);\n      setCurrentCreatedAt(createdAt);\n\n      if (id) {\n        const cartId = B3LStorage.get('cartToQuoteId');\n        const deleteCartObject = deleteCartData(cartId);\n\n        await deleteCart(deleteCartObject);\n      }\n\n      if (quoteSubmissionResponseInfo.value === '0') {\n        handleAfterSubmit(id, createdAt);\n      } else {\n        setQuoteSubmissionResponseOpen(true);\n      }\n    } catch (error: any) {\n      b2bLogger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCloseQuoteSubmissionResponse = () => {\n    setQuoteSubmissionResponseOpen(false);\n\n    handleAfterSubmit();\n  };\n\n  const backText = () => {\n    let text =\n      Number(role) === 100\n        ? b3Lang('quoteDraft.button.back')\n        : b3Lang('quoteDraft.button.backToQuoteLists');\n    if (openAPPParams?.quoteBtn === 'open') {\n      text = b3Lang('quoteDraft.button.back');\n    } else if (openAPPParams?.quoteBtn === 'add') {\n      text = b3Lang('quoteDraft.button.backToProduct');\n    }\n\n    return text;\n  };\n\n  useEffect(() => {\n    if (billingChange && shippingSameAsBilling) {\n      if (billingRef.current) {\n        const billingAddress = billingRef.current.getContactInfoValue();\n\n        if (shippingRef.current) {\n          shippingRef.current.setShippingInfoValue(billingAddress);\n        }\n      }\n    }\n  }, [billingChange, shippingSameAsBilling]);\n\n  return (\n    <B3Spin isSpinning={loading}>\n      <Box\n        sx={{\n          mb: '60px',\n          width: '100%',\n        }}\n      >\n        <Box\n          sx={{\n            marginBottom: '10px',\n            width: 'fit-content',\n            displayPrint: 'none',\n          }}\n        >\n          <Box\n            sx={{\n              color: 'primary.main',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n            onClick={() => {\n              if (openAPPParams?.quoteBtn || Number(role) === 100) {\n                navigate('/');\n                setOpenPage({\n                  isOpen: false,\n                  openUrl: '',\n                });\n              } else {\n                navigate('/quotes');\n              }\n            }}\n          >\n            <ArrowBackIosNew\n              fontSize=\"small\"\n              sx={{\n                fontSize: '12px',\n                marginRight: '0.5rem',\n              }}\n            />\n            <p\n              style={{\n                margin: '0',\n              }}\n            >\n              {backText()}\n            </p>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              mb: '24px',\n              flexDirection: isMobile ? 'column' : 'row',\n              alignItems: isMobile ? 'flex-start' : 'center',\n            }}\n          >\n            <Typography\n              component=\"h3\"\n              sx={{\n                fontSize: '34px',\n                mr: '1rem',\n                mb: isMobile ? '1rem' : '0',\n                color: getContrastColor(backgroundColor),\n              }}\n            >\n              {b3Lang('quoteDraft.title.Quote')}\n            </Typography>\n            <QuoteStatus code=\"0\" />\n          </Box>\n          {quotesActionsPermission && (\n            <Box>\n              {isMobile ? (\n                <Box\n                  sx={{\n                    position: 'fixed',\n                    left: 0,\n                    bottom: 0,\n                    background: '#FFF',\n                    width: '100%',\n                    display: 'flex',\n                    p: '8px 0',\n                    zIndex: 100,\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CustomButton\n                    variant=\"contained\"\n                    size=\"small\"\n                    disabled={loading}\n                    sx={{\n                      height: '38px',\n                      width: '90%',\n                    }}\n                    onClick={handleSubmit}\n                  >\n                    {b3Lang('quoteDraft.button.submit')}\n                  </CustomButton>\n                </Box>\n              ) : (\n                <CustomButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  disabled={loading}\n                  sx={{\n                    padding: '8px 22px',\n                    alignSelf: 'center',\n                    marginBottom: '24px',\n                  }}\n                  onClick={handleSubmit}\n                >\n                  {b3Lang('quoteDraft.button.submit')}\n                </CustomButton>\n              )}\n            </Box>\n          )}\n        </Box>\n\n        <Box>\n          {!isEdit && (\n            <QuoteInfo\n              quoteAndExtraFieldsInfo={quoteAndExtraFieldsInfo}\n              status=\"Draft\"\n              contactInfo={quoteInfoOrigin?.contactInfo}\n              shippingAddress={quoteInfoOrigin?.shippingAddress}\n              billingAddress={quoteInfoOrigin?.billingAddress || {}}\n              handleEditInfoClick={handleEditInfoClick}\n            />\n          )}\n          {isEdit && (\n            <Container flexDirection=\"column\">\n              <ContactInfo\n                emailAddress={customer.emailAddress}\n                info={quoteInfoOrigin?.contactInfo}\n                referenceNumber={quoteInfoOrigin?.referenceNumber || ''}\n                quoteExtraFields={extraFields}\n                extraFieldsDefault={quoteInfoOrigin.extraFields || []}\n                recipients={quoteInfoOrigin?.recipients || []}\n                handleSaveCCEmail={handleSaveCCEmail}\n                ref={contactInfoRef}\n              />\n              <Box\n                sx={{\n                  display: 'flex',\n                  mt: isMobile ? 0 : '3rem',\n                  flexDirection: isMobile ? 'column' : 'row',\n                }}\n              >\n                <QuoteAddress\n                  title={b3Lang('quoteDraft.section.billing')}\n                  info={quoteInfoOrigin?.billingAddress}\n                  addressList={addressList}\n                  pr={isMobile ? 0 : '8px'}\n                  ref={billingRef}\n                  role={role}\n                  accountFormFields={accountFormFields}\n                  shippingSameAsBilling={shippingSameAsBilling}\n                  type=\"billing\"\n                  setBillingChange={setBillingChange}\n                />\n                <QuoteAddress\n                  title={b3Lang('quoteDraft.section.shipping')}\n                  info={quoteInfoOrigin?.shippingAddress}\n                  addressList={addressList}\n                  pl={isMobile ? 0 : '8px'}\n                  ref={shippingRef}\n                  role={role}\n                  accountFormFields={accountFormFields}\n                  shippingSameAsBilling={shippingSameAsBilling}\n                  type=\"shipping\"\n                  setBillingChange={setBillingChange}\n                />\n              </Box>\n              <FormControlLabel\n                label={b3Lang('quoteDraft.checkbox.sameAddressShippingAndBilling')}\n                control={\n                  <Checkbox\n                    checked={shippingSameAsBilling}\n                    onChange={(e) => {\n                      setShippingSameAsBilling(e.target.checked);\n                      if (billingRef.current) {\n                        const billingAddress = billingRef.current.getContactInfoValue();\n\n                        if (shippingRef.current && e.target.checked) {\n                          shippingRef.current.setShippingInfoValue(billingAddress);\n                        }\n                      }\n                    }}\n                  />\n                }\n                sx={{\n                  mt: 2,\n                }}\n              />\n              <CustomButton\n                sx={{\n                  mt: '20px',\n                  mb: '15px',\n                }}\n                onClick={handleSaveInfoClick}\n                variant=\"outlined\"\n              >\n                {b3Lang('quoteDraft.button.saveInfo')}\n              </CustomButton>\n            </Container>\n          )}\n        </Box>\n        <Box\n          sx={{\n            mt: '20px',\n            display: 'flex',\n            flexDirection: isMobile ? 'column' : 'row',\n            alignItems: 'flex-start',\n          }}\n        >\n          <Container\n            flexDirection=\"column\"\n            xs={{\n              flexBasis: isMobile ? '100%' : '680px',\n              flexGrow: 2,\n              marginRight: '20px',\n              marginBottom: '20px',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n            }}\n          >\n            <QuoteTable\n              updateSummary={updateSummary}\n              total={draftQuoteList.length}\n              items={draftQuoteList}\n            />\n          </Container>\n\n          <Container\n            flexDirection=\"column\"\n            xs={{\n              flexBasis: isMobile ? '100%' : '340px',\n              marginBottom: '20px',\n              backgroundColor: 'transparent',\n              padding: 0,\n              flexGrow: 1,\n            }}\n          >\n            <Stack\n              spacing={2}\n              sx={{\n                width: '100%',\n              }}\n            >\n              <QuoteSummary ref={quoteSummaryRef} />\n              <AddToQuote updateList={updateSummary} addToQuote={addToQuote} />\n\n              <QuoteNote quoteStatus=\"Draft\" />\n\n              {role !== 100 && <QuoteAttachment status={0} />}\n            </Stack>\n          </Container>\n        </Box>\n      </Box>\n      <QuoteSubmissionResponse\n        isOpen={quoteSubmissionResponseOpen}\n        onClose={handleCloseQuoteSubmissionResponse}\n        quoteSubmissionResponseInfo={quoteSubmissionResponseInfo}\n      />\n    </B3Spin>\n  );\n}\n\nexport default QuoteDraft;\n"],"names":["randomUUID","native","v4","options","buf","offset","rnds","_c","_b","_a","rng","unsafeStringify","useSetCountry","countriesList","dispatch","useContext","GlobalContext","useEffect","countries","getB2BCountries","useGetCountry","setAddress","setValue","getValues","control","addresses","countryCode","useWatch","countriesFieldIndex","formFields","addressField","addressFieldIndex","stateList","country","stateFieldIndex","stateVal","state","validateObject","quoteInfo","key","x","AddToQuote","props","updateList","addToQuote","companyId","useAppSelector","company","customerGroupId","companyStatus","isOpenBulkLoadCSV","setIsOpenBulkLoadCSV","useState","isLoading","setIsLoading","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","b3Lang","useB3Lang","getNewQuoteProduct","products","product","variantId","newSelectOptionList","productId","productName","quantity","variants","basePrice","taxPrice","calculatedValue","variantInfo","item","primaryImage","variantSku","selectOptions","error","taxExclusive","taxInclusive","basePriceExclusiveTax","tax","uuid","addToList","newProducts","noSkuProducts","sku","snackbar","quickAddToList","variantProducts","productIds","productsSearch","searchProducts","productList","conversionProductsList","variantProduct","calculateProductListPrice","getOptionsList","optionId","id","handleCSVAddToList","productsData","validProduct","newProductInfo","option","qty","optionsList","currentProductSearch","variantItem","quoteListitem","PRODUCT_DEFAULT_IMAGE","validProductQty","e","b2bLogger","handleOpenUploadDiag","Card","jsx","CardContent","jsxs","B3CollapseContainer","SearchProduct","Divider","QuickAdd","Box","CustomButton","UploadFileIcon","B3Upload","emailValidate","validatorRules","getContactInfo","isMobile","isGuest","getQuoteInfo","quoteExtraFields","referenceNumber","recipients","handleSaveClick","currentExtraFields","field","ContactInfo","info","emailAddress","extraFieldsDefault","handleSaveCCEmail","ref","setError","errors","handleSubmit","useForm","CustomerRole","isValidUserType","isValidUserTypeSelector","useMobile","validateEmailValue","emailValue","trim","validateQuoteExtraFieldsInfo","values","extraFields","res","validateQuoteExtraFields","messageArr","ccEmails","getContactInfoValue","isValid","data","useImperativeHandle","contactInfo","formData","B3CustomForm","ContactInfo$1","forwardRef","TagBox","styled","marginBottom","Flex","theme","AddressItemCard","addressInfo","onSetAddress","useTheme","Typography","B3Tag","ChooseAddress","isOpen","closeModal","handleChangeAddress","addressList","type","recordList","useRef","isB2BUser","isB2BUserSelector","list","setList","allList","newList","keys","handleSearchProduct","q","flag","handleCancelClicked","B3Dialog","B3FilterSearch","Grid","addressItem","QuoteAddress","title","pr","pl","role","accountFormFields","shippingSameAsBilling","setBillingChange","setOpen","quoteAddress","setQuoteAddress","cloneDeep","setShippingInfoValue","address","handleAddressChoose","handleCloseAddressChoose","fieldsetId","useId","QuoteAddress$1","QuoteSubmissionResponse","onClose","quoteSubmissionResponseInfo","getQuoteDraftShowPriceTBD","isEnableProduct","store","getVariantInfoDisplayPrice","defaultSummary","QuoteSummary","_","quoteSummary","setQuoteSummary","isHideQuoteDraftPrice","setHideQuoteDraftPrice","showInclusiveTaxPrice","global","draftQuoteList","priceCalc","price","getSummary","useCallback","isHidePrice","newQuoteSummary","summary","productTax","subtotal","grandTotal","shipping","getBCPrice","priceFormat","currencyFormat","showPrice","cardId","PaginationTable","columnItems","isCustomRender","tableKey","renderItem","noDataText","tableFixed","tableHeaderHide","rowsPerPageOptions","itemSpacing","itemXs","showCheckbox","showSelectAllCheckbox","selectedSymbol","isSelectOtherPageCheckbox","showBorder","getSelectCheckbox","hover","labelRowsPerPage","itemIsMobileSpacing","disableCheckbox","onClickRow","showPagination","showRowsPerPageOptions","CollapseComponent","applyAllDisableCheckbox","sortDirection","sortByFn","orderBy","pageType","items","initPagination","pagination","setPagination","isAllSelect","setAllSelect","selectCheckbox","setSelectCheckbox","handlePaginationChange","tablePagination","getCurrentAllItemsSelect","isNodeWrapper","handleSelectAllItems","newSelectCheckbox","index","selects","handleSelectOneItem","B3Table","StyledImage","QuoteTableCard","quoteTableItem","onEdit","onDelete","handleUpdateProductQty","idEdit","len","itemIndex","total","productFields","getProductOptionsFields","optionList","optionsValue","productUrl","singlePrice","getDisplayPrice","totalPrice","origin","TextField","Edit","Delete","StyledQuoteTableContainer","StyledTextField","QUOTE_PRODUCT_QTY_MAX","QuoteTable","updateSummary","useAppDispatch","featureFlags","useFeatureFlags","isRequestLoading","setIsRequestLoading","chooseOptionsOpen","setSelectedOptionsOpen","optionsProduct","setOptionsProduct","optionsProductId","setOptionsProductId","row","value","setModifierQtyPrice","setDraftProduct","handleCheckProductQty","newQty","ceil","handleDeleteClick","deleteProductFromDraftQuoteList","handleChooseOptionsDialogCancel","handleOpenProductEdit","itemId","calculatedNoTaxPrice","calculatedTaxPrice","handleChooseOptionsDialogConfirm","newProduct","warningMessage","warningDetails","currentProduct","getVariantInfoOOSAndPurchase","inventoryTracking","inventoryLevel","currentVariant","variant","WarningIcon","inTaxPrice","ChooseOptionsDialog","getAccountFormFields","shippingAddress","billingAddress","QuoteDraft","setOpenPage","openAPPParams","companyB2BId","companyName","customer","enteredInclusiveTax","storeConfigs","salesRepCompanyId","b2bFeatures","salesRepCompanyName","quoteInfoOrigin","currency","activeCurrencyInfoSelector","selectCompanyHierarchyId","backgroundColor","CustomStyleContext","isMoveStockAndBackorderValidationToBackend","quotesActionsPermission","useMemo","verifyCreatePermission","b2bPermissionsMap","navigate","useNavigate","loading","setLoading","isEdit","setEdit","setAddressList","setShippingSameAsBilling","billingChange","quoteSubmissionResponseOpen","setQuoteSubmissionResponseOpen","quoteId","setQuoteId","currentCreatedAt","setCurrentCreatedAt","setExtraFields","quoteSummaryRef","isAddressCompanyHierarchy","useValidatePermissionWithComparisonType","permissionLevels","contactInfoRef","billingRef","shippingRef","setCustomInfo","newInfo","setDraftQuoteInfo","addressB2BList","fetchAddresses","edges","getB2BCustomerAddresses","shippingDefaultAddress","billingDefaultAddress","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","addressBCList","getBCCustomerAddresses","convertBCToB2BAddress","extraFieldsInfo","getB2BQuoteExtraFields","preExtraFields","defaultValues","defaultValue","quoteUserId","setQuoteUserId","quoteAndExtraFieldsInfo","getAddress","addressSaveInfo","ccEmail","setDraftQuoteRecipients","handleCollectingData","saveInfo","currentRecipients","uniq","concat","handleSaveInfoClick","handleEditInfoClick","validatedProducts","validateProducts","addQuoteDraftProducts","getFileList","files","file","handleReset","resetDraftQuoteInfo","resetDraftQuoteList","B3LStorage","handleAfterSubmit","inpQuoteId","inpCurrentCreatedAt","currentQuoteId","createdAt","quoteTitle","isComplete","newNote","perfectAddress","newAddress","countryItem","editShippingAddress","editBillingAddress","allPrice","allTaxPrice","calculationTime","node","variantsItem","fileList","storeHash","channelId","dispatchEvent","response","createQuote","err","cartId","deleteCartObject","deleteCartData","deleteCart","handleCloseQuoteSubmissionResponse","backText","text","B3Spin","ArrowBackIosNew","getContrastColor","QuoteStatus","QuoteInfo","Container","FormControlLabel","Checkbox","Stack","QuoteNote","QuoteAttachment"],"mappings":"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","x_google_ignoreList":[0,1]}