{"version":3,"file":"index-legacy-DE0MnM0p.js","sources":["../../src/pages/ShoppingLists/index.tsx","../../src/pages/ShoppingLists/config.ts","../../src/pages/ShoppingLists/createB2BShoppingList.ts","../../src/pages/ShoppingLists/createBcShoppingList.ts","../../src/pages/ShoppingLists/duplicateB2BShoppingList.ts","../../src/pages/ShoppingLists/duplicateB2CShoppingList.ts","../../src/pages/ShoppingLists/updateB2BShoppingListDetails.ts","../../src/pages/ShoppingLists/updateB2CShoppingListDetails.ts","../../src/pages/ShoppingLists/AddEditShoppingLists.tsx","../../src/pages/ShoppingLists/deleteB2BShoppingList.ts","../../src/pages/ShoppingLists/deleteB2CShoppingList.ts","../../src/pages/ShoppingLists/ShoppingListsCard.tsx"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react';\nimport { Box } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { useCardListColumn, useMobile, useTableRef } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  getB2BShoppingList,\n  getBcShoppingList,\n  getShoppingListsCreatedByUser,\n} from '@/shared/service/b2b';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId, snackbar } from '@/utils';\n\nimport AddEditShoppingLists from './AddEditShoppingLists';\nimport { ShoppingListSearch, ShoppingListsItemsProps, useGetFilterMoreList } from './config';\nimport { deleteB2BShoppingList } from './deleteB2BShoppingList';\nimport { deleteB2CShoppingList } from './deleteB2CShoppingList';\nimport ShoppingListsCard from './ShoppingListsCard';\n\ninterface RefCurrentProps extends HTMLInputElement {\n  handleOpenAddEditShoppingListsClick: (type: string, data?: ShoppingListsItemsProps) => void;\n}\n\nfunction useData() {\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyB2BId = useAppSelector(({ company }) => company.companyInfo.id);\n  const { shoppingListCreateActionsPermission, submitShoppingListPermission } =\n    useAppSelector(rolePermissionSelector);\n  const companyId = companyB2BId || salesRepCompanyId;\n\n  const deleteShoppingList = isB2BUser ? deleteB2BShoppingList : deleteB2CShoppingList;\n\n  const getUserShoppingLists = isB2BUser\n    ? () => getShoppingListsCreatedByUser(Number(companyId), 1)\n    : () => Promise.resolve({});\n\n  return {\n    isB2BUser,\n    shoppingListCreateActionsPermission,\n    submitShoppingListPermission,\n    deleteShoppingList,\n    getUserShoppingLists,\n  };\n}\n\nfunction ShoppingLists() {\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<null | ShoppingListsItemsProps>(null);\n  const [filterMoreInfo, setFilterMoreInfo] = useState<Array<any>>([]);\n  const getFilterMoreList = useGetFilterMoreList();\n\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [paginationTableRef] = useTableRef();\n\n  const {\n    isB2BUser,\n    shoppingListCreateActionsPermission,\n    submitShoppingListPermission,\n    deleteShoppingList,\n    getUserShoppingLists,\n  } = useData();\n\n  const {\n    state: { openAPPParams },\n    dispatch,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const initFilter = async () => {\n      setFilterMoreInfo(\n        getFilterMoreList(submitShoppingListPermission, await getUserShoppingLists()),\n      );\n    };\n\n    initFilter();\n\n    if (openAPPParams.shoppingListBtn) {\n      dispatch({\n        type: 'common',\n        payload: {\n          openAPPParams: {\n            quoteBtn: '',\n            shoppingListBtn: '',\n          },\n        },\n      });\n    }\n    // disabling as we only need to run this once and values at starting render are good enough\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isExtraLarge = useCardListColumn();\n\n  const customItem = {\n    isEnabled: isB2BUser ? shoppingListCreateActionsPermission : true,\n    customLabel: b3Lang('shoppingLists.createNew'),\n    customButtonStyle: {\n      fontSize: '15px',\n      fontWeight: '500',\n      width: '140px',\n      padding: '0',\n    },\n  };\n  const statusPermissions = !submitShoppingListPermission\n    ? [ShoppingListStatus.Approved, ShoppingListStatus.ReadyForApproval]\n    : '';\n\n  const initSearch = {\n    search: '',\n    createdBy: '',\n    status: statusPermissions,\n    isDefault: true,\n  };\n\n  const [filterSearch, setFilterSearch] = useState<ShoppingListSearch>(initSearch);\n\n  const addEditShoppingListsRef = useRef<RefCurrentProps | null>(null);\n\n  const initSearchList = () => {\n    paginationTableRef.current?.refresh();\n  };\n\n  const handleChange = (key: string, value: string) => {\n    if (key === 'search') {\n      const search = {\n        ...initSearch,\n        search: value,\n      };\n\n      setFilterSearch(search);\n    }\n  };\n\n  const handleFilterChange = (data: ShoppingListSearch) => {\n    const { status } = data;\n\n    const getNewStatus = status === '' || status === 99 ? statusPermissions : status;\n    const search = {\n      ...initSearch,\n      createdBy: data.createdBy,\n      status: getNewStatus,\n      isDefault: status === '',\n    };\n\n    setFilterSearch(search);\n  };\n\n  const fetchList: GetRequestList<ShoppingListSearch, ShoppingListsItemsProps> = async (params) => {\n    const { edges, totalCount } = isB2BUser\n      ? await getB2BShoppingList(params)\n      : await getBcShoppingList({\n          offset: params.offset,\n          first: params.first,\n          search: params.search,\n          channelId,\n        });\n\n    return {\n      edges,\n      totalCount,\n    };\n  };\n\n  const handleAddShoppingListsClick = () => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('add');\n  };\n\n  const handleEdit = (shoppingList: ShoppingListsItemsProps) => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('edit', shoppingList);\n  };\n\n  const handleCopy = (shoppingList: ShoppingListsItemsProps) => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('dup', shoppingList);\n  };\n\n  const handleDelete = (row: ShoppingListsItemsProps) => {\n    setDeleteItem(row);\n    setDeleteOpen(true);\n  };\n\n  const handleCancelClick = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleDeleteUserClick = async () => {\n    if (!deleteItem) return;\n    try {\n      setIsRequestLoading(true);\n      handleCancelClick();\n\n      await deleteShoppingList(deleteItem?.id || 0);\n\n      snackbar.success(b3Lang('shoppingLists.deleteSuccess'));\n    } finally {\n      setIsRequestLoading(false);\n      initSearchList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          showB3FilterMoreIcon={isB2BUser}\n          filterMoreInfo={filterMoreInfo}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n          customButtonConfig={customItem}\n          handleFilterCustomButtonClick={handleAddShoppingListsClick}\n        />\n        <B3PaginationTable\n          columnItems={[]}\n          ref={paginationTableRef}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={fetchList}\n          searchParams={filterSearch}\n          isCustomRender\n          itemXs={isExtraLarge ? 3 : 4}\n          requestLoading={setIsRequestLoading}\n          renderItem={(row) => (\n            <ShoppingListsCard\n              key={row.id || ''}\n              item={row}\n              isPermissions={isB2BUser ? shoppingListCreateActionsPermission : true}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n              onCopy={handleCopy}\n              isB2BUser={isB2BUser}\n            />\n          )}\n        />\n        <AddEditShoppingLists\n          renderList={initSearchList}\n          ref={addEditShoppingListsRef}\n          isB2BUser={isB2BUser}\n        />\n        <B3Dialog\n          isOpen={deleteOpen}\n          title={b3Lang('shoppingLists.deleteShoppingList')}\n          leftSizeBtn={b3Lang('shoppingLists.cancel')}\n          rightSizeBtn={b3Lang('shoppingLists.delete')}\n          handleLeftClick={handleCancelClick}\n          handRightClick={handleDeleteUserClick}\n          row={deleteItem}\n          rightStyleBtn={{\n            color: '#D32F2F',\n          }}\n          isShowBordered={false}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              width: isMobile ? '100%' : '450px',\n              height: '100%',\n            }}\n          >\n            {b3Lang('shoppingLists.confirmDelete')}\n          </Box>\n        </B3Dialog>\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default ShoppingLists;\n","import { LangFormatFunction, useB3Lang } from '@/lib/lang';\nimport { CompanyInfoTypes } from '@/types/invoice';\nimport { ShoppingListStatus } from '@/types/shoppingList';\n\nexport interface ShoppingListSearch {\n  search?: string;\n  createdBy?: string;\n  status?: string | number | number[];\n  offset?: number;\n  first?: number;\n}\n\ninterface ShoppingListStatusProps {\n  label: string;\n  value: number | string;\n  idLang: string;\n}\n\ninterface ShoppingListsItemsCustomerInfoProps {\n  firstName: string;\n  lastName: string;\n  userId: number;\n  email: string;\n  role: string;\n}\n\nexport interface ShoppingListsItemsProps {\n  id?: number;\n  name: string;\n  description: string;\n  status: number;\n  customerInfo: ShoppingListsItemsCustomerInfoProps;\n  products: {\n    totalCount: number;\n  };\n  updatedAt: string | number;\n  sampleShoppingListId?: number | string;\n  channelId: number;\n  approvedFlag: boolean;\n  isOwner: boolean;\n  companyInfo: CompanyInfoTypes | null;\n  companyId?: number;\n}\n\nexport interface GetFilterMoreListProps {\n  options?: Array<ShoppingListStatusProps>;\n  rows?: string | number;\n  name: string;\n  label: string;\n  required: boolean;\n  default: string;\n  fieldType: string;\n  xs: number;\n  variant: string;\n  size: string;\n  maxLength?: number;\n  idLang?: string;\n}\n\nconst useGetFilterShoppingListStatus = () => {\n  const b3Lang = useB3Lang();\n\n  return (submitShoppingListPermission: boolean) => {\n    const draftStatus = {\n      value: ShoppingListStatus.Draft,\n      label: b3Lang('global.shoppingLists.status.draft'),\n    };\n    const rejectedStatus = {\n      value: ShoppingListStatus.Rejected,\n      label: b3Lang('global.shoppingLists.status.rejected'),\n    };\n\n    // TODO: fix 99 which is used for selecting all\n    return [\n      { value: 99, label: b3Lang('global.shoppingLists.status.all') },\n      { value: ShoppingListStatus.Approved, label: b3Lang('global.shoppingLists.status.approved') },\n      ...(submitShoppingListPermission ? [draftStatus] : []),\n      {\n        value: ShoppingListStatus.ReadyForApproval,\n        label: b3Lang('global.shoppingLists.status.readyForApproval'),\n      },\n      ...(submitShoppingListPermission ? [rejectedStatus] : []),\n    ];\n  };\n};\n\ninterface CreatedByUsers {\n  createdByUser?: {\n    results: Array<{ firstName: string; lastName: string; email: string }>;\n  };\n}\n\nexport const useGetFilterMoreList = () => {\n  const b3Lang = useB3Lang();\n  const getFilterShoppingListStatus = useGetFilterShoppingListStatus();\n\n  return (submitShoppingListPermission: boolean, createdByUsers: CreatedByUsers) => {\n    const newCreatedByUsers =\n      createdByUsers?.createdByUser?.results.map((item) => ({\n        createdBy: `${item.firstName} ${item.lastName} (${item.email})`,\n      })) || [];\n\n    return [\n      {\n        name: 'createdBy',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: newCreatedByUsers,\n        replaceOptions: {\n          label: 'createdBy',\n          value: 'createdBy',\n        },\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.createdBy'),\n      },\n      {\n        name: 'status',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: getFilterShoppingListStatus(submitShoppingListPermission),\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.status'),\n      },\n    ];\n  };\n};\n\nexport const getCreatedShoppingListFiles = (\n  b3Lang: LangFormatFunction,\n): GetFilterMoreListProps[] => [\n  {\n    name: 'name',\n    label: b3Lang('shoppingLists.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('shoppingLists.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst createShoppingList = `\n  mutation CreateShoppingList ($shoppingListData: ShoppingListsInputType!){\n    shoppingListsCreate (\n      shoppingListData: $shoppingListData\n    ) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ntype CreateShoppingListResponse = {\n  data: {\n    shoppingListsCreate: {\n      shoppingList: {\n        id: string;\n      };\n    };\n  };\n};\n\ninterface CreateShoppingListVariables {\n  name: string;\n  description: string;\n  status: number;\n}\n\nexport const createB2BShoppingList = (data: CreateShoppingListVariables) =>\n  B3Request.graphqlB2B<CreateShoppingListResponse>({\n    query: createShoppingList,\n    variables: { shoppingListData: data },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst createCustomerShoppingList = `\n  mutation CreateCustomerShoppingList($shoppingListData: CustomerShoppingListsInputType!) {\n    customerShoppingListsCreate(shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface CreateCustomerShoppingListResponse {\n  data: {\n    customerShoppingListsCreate: {\n      shoppingList: {\n        id: string;\n      };\n    };\n  };\n}\n\ninterface ShoppingListParams {\n  name: string;\n  description: string;\n  channelId: number;\n}\n\nexport const createBcShoppingList = (data: ShoppingListParams) =>\n  B3Request.graphqlB2B<CreateCustomerShoppingListResponse>({\n    query: createCustomerShoppingList,\n    variables: {\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        channelId: data?.channelId ? Number(data.channelId) : 1,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst duplicateShoppingList = `\n  mutation DuplicateB2BShoppingList($sampleShoppingListId: Int!, $shoppingListData: ShoppingListsDuplicateInputType!){\n    shoppingListsDuplicate(sampleShoppingListId: $sampleShoppingListId, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface DuplicateB2BShoppingListResponse {\n  shoppingListsDuplicate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  sampleShoppingListId: string | number;\n  name: string;\n  description: string;\n}\n\nexport const duplicateB2BShoppingList = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<DuplicateB2BShoppingListResponse>({\n    query: duplicateShoppingList,\n    variables: {\n      sampleShoppingListId: Number(data.sampleShoppingListId),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst duplicateCustomerShoppingList = `\n  mutation DuplicateB2CShoppingList($sampleShoppingListId: Int!, $shoppingListData: ShoppingListsDuplicateInputType!){\n    customerShoppingListsDuplicate(sampleShoppingListId: $sampleShoppingListId, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface DuplicateB2CShoppingListResponse {\n  customerShoppingListsDuplicate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  sampleShoppingListId: string | number;\n  name: string;\n  description: string;\n}\n\nexport const duplicateB2CShoppingList = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<DuplicateB2CShoppingListResponse>({\n    query: duplicateCustomerShoppingList,\n    variables: {\n      sampleShoppingListId: Number(data.sampleShoppingListId),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst updateShoppingList = `\n  mutation UpdateB2BShoppingList ($id: Int!, $shoppingListData: ShoppingListsInputType!) {\n    shoppingListsUpdate(id: $id, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id\n      }\n    }\n  }\n`;\n\ninterface B2BShoppingListUpdateResponse {\n  shoppingListsUpdate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  id: string | number;\n  name: string;\n  description: string;\n  status: number;\n}\n\nexport const updateB2BShoppingListDetails = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<B2BShoppingListUpdateResponse>({\n    query: updateShoppingList,\n    variables: {\n      id: Number(data.id),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        // passes back original status, not editable in the UI\n        status: data.status,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst updateCustomerShoppingList = `mutation UpdateB2CShoppingList($id: Int!, $shoppingListData: CustomerShoppingListsInputType!){\n  customerShoppingListsUpdate(id: $id, shoppingListData: $shoppingListData) {\n    shoppingList {\n      id\n    }\n  }\n}`;\n\ninterface B2CShoppingListUpdateResponse {\n  customerShoppingListsUpdate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  id: string | number;\n  name: string;\n  description: string;\n  channelId: number;\n}\n\nexport const updateB2CShoppingListDetails = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<B2CShoppingListUpdateResponse>({\n    query: updateCustomerShoppingList,\n    variables: {\n      id: Number(data.id),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        channelId: data?.channelId ? Number(data.channelId) : 1,\n      },\n    },\n  });\n","import { forwardRef, Ref, useEffect, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { useB3Lang } from '@/lib/lang';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId, snackbar } from '@/utils';\n\nimport {\n  getCreatedShoppingListFiles,\n  GetFilterMoreListProps,\n  ShoppingListsItemsProps,\n} from './config';\nimport { createB2BShoppingList } from './createB2BShoppingList';\nimport { createBcShoppingList } from './createBcShoppingList';\nimport { duplicateB2BShoppingList } from './duplicateB2BShoppingList';\nimport { duplicateB2CShoppingList } from './duplicateB2CShoppingList';\nimport { updateB2BShoppingListDetails } from './updateB2BShoppingListDetails';\nimport { updateB2CShoppingListDetails } from './updateB2CShoppingListDetails';\n\ninterface AddEditUserProps {\n  renderList: () => void;\n  isB2BUser: boolean;\n}\n\nfunction AddEditShoppingLists(\n  { renderList, isB2BUser }: AddEditUserProps,\n  ref: Ref<unknown> | undefined,\n) {\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n  const [open, setOpen] = useState<boolean>(false);\n  const [type, setType] = useState<string>('');\n\n  const [editData, setEditData] = useState<ShoppingListsItemsProps | null>(null);\n\n  const [addUpdateLoading, setAddUpdateLoading] = useState<boolean>(false);\n\n  const [usersFiles, setUsersFiles] = useState<Array<GetFilterMoreListProps>>([]);\n  const b3Lang = useB3Lang();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    clearErrors,\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  useEffect(() => {\n    if (open && type !== 'add' && editData) {\n      usersFiles.forEach((item: GetFilterMoreListProps) => {\n        setValue(item.name, (editData as CustomFieldItems)[item.name]);\n      });\n    }\n  }, [editData, open, setValue, type, usersFiles]);\n\n  const handleCancelClick = () => {\n    usersFiles.forEach((item: GetFilterMoreListProps) => {\n      setValue(item.name, '');\n    });\n    clearErrors();\n    setOpen(false);\n  };\n\n  const handleAddUserClick = () => {\n    handleSubmit(async (data) => {\n      setAddUpdateLoading(true);\n      try {\n        const params: Partial<ShoppingListsItemsProps> = {\n          ...data,\n        };\n\n        // @ts-expect-error this all needs refactoring to give types a chance of matching\n        let fn: (params: typeof params) => Promise<unknown> = isB2BUser\n          ? createB2BShoppingList\n          : createBcShoppingList;\n        let successTip = b3Lang('shoppingLists.addSuccess');\n        if (type === 'edit') {\n          if (isB2BUser) {\n            fn = updateB2BShoppingListDetails;\n            params.status = editData?.status;\n          } else {\n            fn = updateB2CShoppingListDetails;\n            params.channelId = channelId;\n          }\n\n          params.id = editData?.id || 0;\n          successTip = b3Lang('shoppingLists.updateSuccess');\n        } else if (type === 'dup') {\n          fn = isB2BUser ? duplicateB2BShoppingList : duplicateB2CShoppingList;\n          params.sampleShoppingListId = editData?.id || 0;\n          successTip = b3Lang('shoppingLists.duplicateSuccess');\n        } else if (type === 'add') {\n          if (isB2BUser) {\n            const { submitShoppingListPermission } = b2bPermissions;\n            if (selectCompanyHierarchyId) {\n              params.companyId = Number(selectCompanyHierarchyId);\n            }\n            params.status = submitShoppingListPermission\n              ? ShoppingListStatus.Draft\n              : ShoppingListStatus.Approved;\n          } else {\n            params.channelId = channelId;\n          }\n        }\n\n        await fn(params);\n        handleCancelClick();\n        snackbar.success(successTip);\n        renderList();\n      } finally {\n        setAddUpdateLoading(false);\n      }\n    })();\n  };\n\n  const handleOpenAddEditShoppingListsClick = (type: string, data: ShoppingListsItemsProps) => {\n    const usersFiles = getCreatedShoppingListFiles(b3Lang);\n    setUsersFiles(usersFiles);\n    if (data) setEditData(data);\n    setType(type);\n    setOpen(true);\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleOpenAddEditShoppingListsClick,\n  }));\n\n  const getTitle = () => {\n    if (type === 'edit') {\n      return b3Lang('shoppingLists.edit');\n    }\n    if (type === 'add') {\n      return b3Lang('shoppingLists.createNewShoppingList');\n    }\n    return b3Lang('shoppingLists.duplicateShoppingList');\n  };\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      title={getTitle()}\n      leftSizeBtn={b3Lang('shoppingLists.cancel')}\n      rightSizeBtn={b3Lang('shoppingLists.save')}\n      handleLeftClick={handleCancelClick}\n      handRightClick={handleAddUserClick}\n      loading={addUpdateLoading}\n    >\n      <B3CustomForm\n        formFields={usersFiles}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n    </B3Dialog>\n  );\n}\n\nconst B3AddEditShoppingLists = forwardRef(AddEditShoppingLists);\n\nexport default B3AddEditShoppingLists;\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst deleteShoppingList = `\n  mutation DeleteShoppingList($id: Int!) {\n    shoppingListsDelete(id: $id) {\n      message\n    }\n  }\n`;\n\ninterface DeleteShoppingListResponse {\n  data: {\n    shoppingListsDelete: {\n      message: string;\n    };\n  };\n}\n\nexport const deleteB2BShoppingList = (id: number | string) =>\n  B3Request.graphqlB2B<DeleteShoppingListResponse>({\n    query: deleteShoppingList,\n    variables: { id: Number(id) },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst deleteCustomerShoppingList = `\n  mutation DeleteCustomerShoppingList ($id: Int!) {\n    customerShoppingListsDelete (id: $id) {\n      message\n    }\n  }\n`;\n\ninterface DeleteShoppingListResponse {\n  data: {\n    customerShoppingListsDelete: {\n      message: string;\n    };\n  };\n}\n\nexport const deleteB2CShoppingList = (id: number | string) =>\n  B3Request.graphqlB2B<DeleteShoppingListResponse>({\n    query: deleteCustomerShoppingList,\n    variables: { id: Number(id) },\n  });\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport {\n  ContentCopy as ContentCopyIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n} from '@mui/icons-material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { useB3Lang } from '@/lib/lang';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { displayFormat, verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { ShoppingListsItemsProps } from './config';\nimport { ShoppingListStatusTag } from './ShoppingListStatusTag';\n\ninterface OrderItemCardProps {\n  item: ShoppingListsItemsProps;\n  onEdit: (data: ShoppingListsItemsProps) => void;\n  onDelete: (data: ShoppingListsItemsProps) => void;\n  onCopy: (data: ShoppingListsItemsProps) => void;\n  isPermissions: boolean;\n  isB2BUser: boolean;\n}\n\nconst Flex = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nconst FontBold = styled(Typography)(() => ({\n  fontWeight: '500',\n  paddingRight: '5px',\n}));\n\nconst FlexItem = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'start',\n}));\n\nfunction ShoppingListsCard(props: OrderItemCardProps) {\n  const { item: shoppingList, onEdit, onDelete, onCopy, isPermissions, isB2BUser } = props;\n  const b3Lang = useB3Lang();\n\n  const [isCanEditShoppingList, setIsCanEditShoppingList] = useState<boolean>(true);\n\n  const { submitShoppingListPermission, approveShoppingListPermission } =\n    useAppSelector(rolePermissionSelector);\n\n  const getEditPermissions = (status: number) => {\n    if (submitShoppingListPermission) {\n      if (status === ShoppingListStatus.Draft || status === ShoppingListStatus.Approved)\n        return false;\n      return true;\n    }\n\n    if (status === ShoppingListStatus.ReadyForApproval) return true;\n\n    return false;\n  };\n\n  const shoppingListCanBeDeleted = (status: number) => {\n    if (!submitShoppingListPermission) {\n      return true;\n    }\n\n    // Status code 20 was previously misused as Rejected in the frontend, which is actually Deleted\n    // We need to add Deleted here so that the shopping lists that were previously rejected remain the same behavior\n    const isInDeletableStatus =\n      status === ShoppingListStatus.Deleted ||\n      status === ShoppingListStatus.Draft ||\n      status === ShoppingListStatus.Rejected;\n\n    return isInDeletableStatus;\n  };\n\n  const navigate = useNavigate();\n\n  const goToDetail = (shoppingList: ShoppingListsItemsProps) =>\n    navigate(`/shoppingList/${shoppingList.id}`, {\n      state: {\n        from: 'shoppingList',\n      },\n    });\n\n  useEffect(() => {\n    if (isB2BUser) {\n      const { companyInfo, customerInfo } = shoppingList;\n\n      const { shoppingListCreateActionsPermission } = b2bPermissionsMap;\n      const shoppingListActionsPermission = verifyLevelPermission({\n        code: shoppingListCreateActionsPermission,\n        companyId: Number(companyInfo?.companyId || 0),\n        userId: Number(customerInfo.userId),\n      });\n\n      setIsCanEditShoppingList(shoppingListActionsPermission);\n    }\n  }, [shoppingList, isB2BUser]);\n\n  return (\n    <Card\n      key={shoppingList.id}\n      sx={{\n        '& .b2b-card-content': {\n          paddingBottom: '16px',\n        },\n      }}\n    >\n      <CardContent\n        className=\"b2b-card-content\"\n        sx={{\n          color: '#313440',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{\n            color: 'rgba(0, 0, 0, 0.87)',\n            width: '100%',\n            wordBreak: 'break-all',\n          }}\n        >\n          {shoppingList.name}\n        </Typography>\n        <Box\n          sx={{\n            pt: '8px',\n            pb: '20px',\n          }}\n        >\n          {isB2BUser &&\n            (submitShoppingListPermission ||\n              (approveShoppingListPermission && shoppingList.approvedFlag)) && (\n              <Box\n                sx={{\n                  pb: '25px',\n                }}\n              >\n                <ShoppingListStatusTag status={shoppingList.status} />\n              </Box>\n            )}\n          <Box\n            sx={{\n              width: '100%',\n              wordBreak: 'break-all',\n            }}\n          >\n            {shoppingList.description}\n          </Box>\n\n          {isB2BUser && (\n            <FlexItem>\n              <FontBold>{b3Lang('shoppingLists.card.createdBy')}</FontBold>\n              {shoppingList.customerInfo.firstName} {shoppingList.customerInfo.lastName}\n            </FlexItem>\n          )}\n          <FlexItem>\n            <FontBold>{b3Lang('shoppingLists.card.products')}</FontBold>\n            {shoppingList.products.totalCount}\n          </FlexItem>\n          <FlexItem>\n            <FontBold>{b3Lang('shoppingLists.card.lastActivity')}</FontBold>\n            {`${displayFormat(shoppingList.updatedAt)}`}\n          </FlexItem>\n        </Box>\n        <Flex>\n          <CustomButton\n            sx={{\n              m: '0 0 0 -8px',\n              minWidth: 0,\n            }}\n            variant=\"text\"\n            onClick={() => goToDetail(shoppingList)}\n          >\n            {b3Lang('shoppingLists.card.view')}\n          </CustomButton>\n          <Box\n            sx={{\n              display: isPermissions ? 'block' : 'none',\n            }}\n          >\n            {!getEditPermissions(shoppingList.status) && isCanEditShoppingList && (\n              <IconButton\n                aria-label=\"edit\"\n                size=\"medium\"\n                sx={{\n                  marginRight: '8px',\n                }}\n                onClick={() => {\n                  onEdit(shoppingList);\n                }}\n              >\n                <EditIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n\n            <IconButton\n              aria-label=\"duplicate\"\n              size=\"medium\"\n              sx={{\n                marginRight: '8px',\n              }}\n              onClick={() => {\n                onCopy(shoppingList);\n              }}\n            >\n              <ContentCopyIcon fontSize=\"inherit\" />\n            </IconButton>\n            {shoppingListCanBeDeleted(shoppingList.status) && isCanEditShoppingList && (\n              <IconButton\n                aria-label=\"delete\"\n                size=\"medium\"\n                onClick={() => {\n                  onDelete(shoppingList);\n                }}\n              >\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n          </Box>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ShoppingListsCard;\n"],"names":["isRequestLoading","setIsRequestLoading","useState","deleteOpen","setDeleteOpen","deleteItem","setDeleteItem","filterMoreInfo","setFilterMoreInfo","getFilterMoreList","useGetFilterMoreList","isMobile","useMobile","b3Lang","useB3Lang","paginationTableRef","useTableRef","isB2BUser","shoppingListCreateActionsPermission","submitShoppingListPermission","deleteShoppingList","getUserShoppingLists","salesRepCompanyId","useAppSelector","b2bFeatures","masqueradeCompany","id","isB2BUserSelector","companyB2BId","company","companyInfo","rolePermissionSelector","companyId","deleteB2BShoppingList","deleteB2CShoppingList","getShoppingListsCreatedByUser","Number","Promise","resolve","useData","state","openAPPParams","dispatch","useContext","GlobalContext","useEffect","async","initFilter","shoppingListBtn","type","payload","quoteBtn","isExtraLarge","useCardListColumn","customItem","isEnabled","customLabel","customButtonStyle","fontSize","fontWeight","width","padding","statusPermissions","ShoppingListStatus","Approved","ReadyForApproval","initSearch","search","createdBy","status","isDefault","filterSearch","setFilterSearch","addEditShoppingListsRef","useRef","initSearchList","current","refresh","handleEdit","shoppingList","handleOpenAddEditShoppingListsClick","handleCopy","handleDelete","row","handleCancelClick","jsx","B3Spin","isSpinning","children","jsxs","Box","sx","display","flexDirection","flex","B3Filter","showB3FilterMoreIcon","handleChange","key","value","handleFilterChange","data","getNewStatus","customButtonConfig","handleFilterCustomButtonClick","handleAddShoppingListsClick","B3PaginationTable","columnItems","ref","rowsPerPageOptions","getRequestList","edges","totalCount","getB2BShoppingList","params","getBcShoppingList","offset","first","channelId","searchParams","isCustomRender","itemXs","requestLoading","renderItem","ShoppingListsCard","item","isPermissions","onEdit","onDelete","onCopy","AddEditShoppingLists","renderList","B3Dialog","isOpen","title","leftSizeBtn","rightSizeBtn","handleLeftClick","handRightClick","snackbar","success","rightStyleBtn","color","isShowBordered","height","getFilterShoppingListStatus","useGetFilterShoppingListStatus","draftStatus","Draft","label","rejectedStatus","Rejected","createdByUsers","name","required","default","fieldType","options","createdByUser","results","map","firstName","lastName","email","replaceOptions","xs","variant","size","createB2BShoppingList","B3Request","graphqlB2B","query","variables","shoppingListData","createBcShoppingList","description","duplicateB2BShoppingList","sampleShoppingListId","duplicateB2CShoppingList","updateB2BShoppingListDetails","updateB2CShoppingListDetails","B3AddEditShoppingLists","forwardRef","b2bPermissions","selectCompanyHierarchyId","companyHierarchyInfo","open","setOpen","setType","editData","setEditData","addUpdateLoading","setAddUpdateLoading","usersFiles","setUsersFiles","control","handleSubmit","getValues","formState","errors","clearErrors","setValue","useForm","mode","forEach","maxLength","rows","getCreatedShoppingListFiles","useImperativeHandle","handleAddUserClick","fn","successTip","loading","B3CustomForm","formFields","Flex","styled","alignItems","justifyContent","FontBold","Typography","paddingRight","FlexItem","props","isCanEditShoppingList","setIsCanEditShoppingList","approveShoppingListPermission","navigate","useNavigate","customerInfo","b2bPermissionsMap","shoppingListActionsPermission","verifyLevelPermission","code","userId","Card","paddingBottom","CardContent","className","wordBreak","pt","pb","approvedFlag","ShoppingListStatusTag","products","displayFormat","updatedAt","CustomButton","m","minWidth","onClick","from","IconButton","marginRight","EditIcon","ContentCopyIcon","Deleted","shoppingListCanBeDeleted","DeleteIcon"],"mappings":"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"}