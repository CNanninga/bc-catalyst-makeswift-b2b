{"version":3,"file":"B3Tip-yyWqVyd1.js","sources":["../../src/components/TipBody.tsx","../../src/components/B3Tip.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Box, Button } from '@mui/material';\n\ninterface TipBodyProps {\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  message: ReactNode;\n  description?: string;\n}\n\nexport default function TipBody(props: TipBodyProps) {\n  const { action, message, description } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          mr: '15px',\n        }}\n      >\n        {message}\n        {description && (\n          <p\n            style={{\n              margin: 0,\n            }}\n          >\n            {description}\n          </p>\n        )}\n      </Box>\n      {action && (\n        <Button\n          onClick={action.onClick}\n          variant=\"text\"\n          sx={{\n            color: '#ffffff',\n            padding: 0,\n          }}\n        >\n          {action.label}\n        </Button>\n      )}\n    </Box>\n  );\n}\n","import { Alert, Box, Snackbar } from '@mui/material';\n\nimport useMobile from '@/hooks/useMobile';\nimport { MsgsProps, TipMessagesProps } from '@/shared/dynamicallyVariable/context/config';\n\nimport TipBody from './TipBody';\n\ninterface B3TipProps extends TipMessagesProps {\n  handleItemClose: (id: number | string) => void;\n  handleAllClose: (id: string | number, reason: string) => void;\n}\n\nfunction MessageAlert({\n  msg,\n  onClose,\n}: {\n  msg: MsgsProps;\n  onClose: (id: string | number) => void;\n}) {\n  return (\n    <Alert\n      sx={{\n        alignItems: 'center',\n        '& button[title=\"Close\"]': {\n          display: 'block',\n        },\n        mb: '5px',\n\n        '& .MuiAlert-message': {\n          overflow: 'unset',\n          whiteSpace: 'nowrap',\n        },\n      }}\n      variant=\"filled\"\n      key={msg.id}\n      severity={msg.type}\n      onClose={() => onClose(msg.id)}\n    >\n      <TipBody action={msg.action} message={msg.msg} description={msg.description} />\n    </Alert>\n  );\n}\n\nexport default function B3Tip({\n  handleItemClose,\n  vertical = 'bottom',\n  horizontal = 'right',\n  msgs = [],\n  handleAllClose,\n}: B3TipProps) {\n  const [isMobile] = useMobile();\n  if (!msgs || !msgs.length) return null;\n  return (\n    <Box>\n      {msgs.length > 0\n        ? msgs.map((msg: MsgsProps, index: number) => (\n            <Snackbar\n              key={msg.id}\n              open={!!msg?.id}\n              autoHideDuration={msg?.time || 5000}\n              onClose={(_, reason: string) => handleAllClose(msg.id, reason)}\n              disableWindowBlurListener\n              anchorOrigin={{\n                vertical,\n                horizontal,\n              }}\n              sx={{\n                top: `${24 + index * 10 + index * (isMobile ? 80 : 90)}px !important`,\n                width: '320px',\n                height: 'auto',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <MessageAlert msg={msg} onClose={handleItemClose} />\n              </Box>\n            </Snackbar>\n          ))\n        : null}\n    </Box>\n  );\n}\n"],"names":["TipBody","props","action","message","description","jsxs","Box","jsx","Button","MessageAlert","msg","onClose","Alert","B3Tip","handleItemClose","vertical","horizontal","msgs","handleAllClose","isMobile","useMobile","index","Snackbar","_","reason"],"mappings":"iHAYA,SAAwBA,EAAQC,EAAqB,CACnD,KAAM,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,CAAA,EAAgBH,EAEzC,OACEI,EAAAA,KAACC,EAAA,CACC,GAAI,CACF,QAAS,OACT,WAAY,QAAA,EAGd,SAAA,CAAAD,EAAAA,KAACC,EAAA,CACC,GAAI,CACF,GAAI,MAAA,EAGL,SAAA,CAAAH,EACAC,GACCG,EAAAA,IAAC,IAAA,CACC,MAAO,CACL,OAAQ,CAAA,EAGT,SAAAH,CAAA,CAAA,CACH,CAAA,CAAA,EAGHF,GACCK,EAAAA,IAACC,EAAA,CACC,QAASN,EAAO,QAChB,QAAQ,OACR,GAAI,CACF,MAAO,UACP,QAAS,CAAA,EAGV,SAAAA,EAAO,KAAA,CAAA,CACV,CAAA,CAAA,CAIR,CCxCA,SAASO,EAAa,CACpB,IAAAC,EACA,QAAAC,CACF,EAGG,CACD,OACEJ,EAAAA,IAACK,EAAA,CACC,GAAI,CACF,WAAY,SACZ,0BAA2B,CACzB,QAAS,OAAA,EAEX,GAAI,MAEJ,sBAAuB,CACrB,SAAU,QACV,WAAY,QAAA,CACd,EAEF,QAAQ,SAER,SAAUF,EAAI,KACd,QAAS,IAAMC,EAAQD,EAAI,EAAE,EAE7B,SAAAH,EAAAA,IAACP,EAAA,CAAQ,OAAQU,EAAI,OAAQ,QAASA,EAAI,IAAK,YAAaA,EAAI,WAAA,CAAa,CAAA,EAJxEA,EAAI,EAAA,CAOf,CAEA,SAAwBG,EAAM,CAC5B,gBAAAC,EACA,SAAAC,EAAW,SACX,WAAAC,EAAa,QACb,KAAAC,EAAO,CAAA,EACP,eAAAC,CACF,EAAe,CACb,KAAM,CAACC,CAAQ,EAAIC,EAAA,EACnB,MAAI,CAACH,GAAQ,CAACA,EAAK,OAAe,KAEhCV,MAACD,GACE,SAAAW,EAAK,OAAS,EACXA,EAAK,IAAI,CAACP,EAAgBW,IACxBd,EAAAA,IAACe,EAAA,CAEC,KAAM,CAAC,EAACZ,GAAA,MAAAA,EAAK,IACb,kBAAkBA,GAAA,YAAAA,EAAK,OAAQ,IAC/B,QAAS,CAACa,EAAGC,IAAmBN,EAAeR,EAAI,GAAIc,CAAM,EAC7D,0BAAyB,GACzB,aAAc,CACZ,SAAAT,EACA,WAAAC,CAAA,EAEF,GAAI,CACF,IAAK,GAAG,UAAKK,EAAQ,GAAKA,GAASF,EAAW,GAAK,IAAG,iBACtD,MAAO,QACP,OAAQ,MAAA,EAGV,SAAAZ,EAAAA,IAACD,EAAA,CACC,GAAI,CACF,QAAS,MAAA,EAGX,SAAAC,EAAAA,IAACE,EAAA,CAAa,IAAAC,EAAU,QAASI,CAAA,CAAiB,CAAA,CAAA,CACpD,EArBKJ,EAAI,EAAA,CAuBZ,EACD,IAAA,CACN,CAEJ"}