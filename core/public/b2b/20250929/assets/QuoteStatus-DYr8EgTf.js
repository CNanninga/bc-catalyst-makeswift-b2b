import{B as t,ae as r,aD as n,aI as i,I as l,j as p,al as m}from"./react-setup-Ctz-bmMs.js";import"./load-functions-utyuqH_X.js";import"./intl-D34a3Rgg.js";import{j as g}from"./mui-DjJKBaL-.js";import"./base-CC7kTJh2.js";const c=(e,o)=>"\n  query GetQuotesList {\n    ".concat(o==="b2b"?"quotes":"customerQuotes","(\n      first: ").concat(e.first,"\n      offset: ").concat(e.offset,'\n      search: "').concat(e.q||"",'"\n      orderBy: "').concat((e==null?void 0:e.orderBy)||"",'"\n      createdBy: "').concat((e==null?void 0:e.createdBy)||"",'"\n      email: "').concat((e==null?void 0:e.email)||"",'"\n      salesRep: "').concat((e==null?void 0:e.salesRep)||"",'"\n      ').concat(e!=null&&e.status?'status: "'.concat(e.status,'"'):"","\n      ").concat(e!=null&&e.dateCreatedBeginAt?'dateCreatedBeginAt: "'.concat(e.dateCreatedBeginAt,'"'):"","\n      ").concat(e!=null&&e.dateCreatedEndAt?'dateCreatedEndAt: "'.concat(e.dateCreatedEndAt,'"'):"","\n      ").concat(o==="bc"?"channelId: ".concat((e==null?void 0:e.channelId)||1):"","\n    ) {\n      totalCount,\n      edges {\n        node {\n          id,\n          createdAt,\n          updatedAt,\n          quoteNumber,\n          quoteTitle,\n          referenceNumber,\n          createdBy,\n          expiredAt,\n          expiredAt,\n          discount,\n          grandTotal,\n          currency,\n          status,\n          salesRep,\n          salesRepEmail,\n          orderId,\n          subtotal,\n          totalAmount,\n          taxTotal,\n        }\n      }\n    }\n  }\n"),q=()=>"{\n  customerAddresses (\n    first: 50\n    offset: 0\n  ){\n    totalCount,\n    edges {\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        firstName,\n        lastName,\n        company,\n        bcAddressId,\n        address1,\n        address2,\n        city,\n        stateOrProvince,\n        postalCode,\n        country,\n        countryCode,\n        phone,\n        addressType,\n      },\n    },\n  }\n}",h=e=>"query Addresses {\n  addresses (\n    first: 50\n    offset: 0\n    companyId: ".concat(e,"\n  ){\n    totalCount,\n    edges{\n      node{\n        id,\n        createdAt,\n        updatedAt,\n        firstName,\n        lastName,\n        isShipping,\n        isBilling,\n        addressLine1,\n        addressLine2,\n        address,\n        city,\n        state,\n        stateCode,\n        country,\n        countryCode,\n        zipCode,\n        phoneNumber,\n        isActive,\n        label,\n        company,\n        uuid,\n        isDefaultShipping,\n        isDefaultBilling,\n      },\n    },\n  }\n}"),y=e=>'mutation CreateQuote{\n  quoteCreate(quoteData: {\n    message: "'.concat(e.message,'",\n    legalTerms: "').concat(e.legalTerms,'",\n    totalAmount: "').concat(e.totalAmount,'",\n    grandTotal: "').concat(e.grandTotal,'",\n    subtotal: "').concat(e.subtotal||"",'",\n    taxTotal: "').concat(e.taxTotal||"",'"\n    ').concat(e!=null&&e.companyId?"companyId: ".concat(e.companyId):"",'\n    storeHash: "').concat(e.storeHash,'",\n    discount: "').concat(e.discount,'",\n    channelId: ').concat(e.channelId,',\n    userEmail: "').concat((e==null?void 0:e.userEmail)||"",'",\n    currency: ').concat(r(e.currency),"\n    shippingAddress: ").concat(r(e.shippingAddress),"\n    billingAddress: ").concat(r(e.billingAddress),"\n    contactInfo: ").concat(r(e.contactInfo),"\n    productList: ").concat(n(e.productList||[]),",\n    fileList: ").concat(n(e.fileList||[]),',\n    quoteTitle: "').concat(e.quoteTitle,'"\n    ').concat(e!=null&&e.extraFields?"extraFields: ".concat(n((e==null?void 0:e.extraFields)||[])):"","\n    ").concat(e!=null&&e.referenceNumber?'referenceNumber: "'.concat(e==null?void 0:e.referenceNumber,'"'):"","\n    ").concat(e!=null&&e.recipients?"recipients: ".concat(n((e==null?void 0:e.recipients)||[])):"","\n  }) {\n    quote{\n      id,\n      createdAt,\n    }\n  }\n}"),f=e=>"mutation{\n  quoteUpdate(\n    id: ".concat(e.id,",\n    quoteData: ").concat(r(e.quoteData),"\n  ) {\n    quote{\n      trackingHistory,\n    }\n  }\n}"),d=e=>"\n  query GetQuoteInfoB2B {\n    quote(\n      id: ".concat(e.id,',\n      storeHash: "').concat(i,'",\n      date:  "').concat((e==null?void 0:e.date)||"",'",\n    ) {\n      id,\n      createdAt,\n      updatedAt,\n      quoteNumber,\n      quoteTitle,\n      referenceNumber,\n      userEmail,\n      bcCustomerId,\n      createdBy,\n      expiredAt,\n      companyId {\n        id,\n        companyName,\n        bcGroupName,\n        description,\n        catalogId,\n        companyStatus,\n        addressLine1,\n        addressLine2,\n        city,\n        state,\n        zipCode,\n        country,\n        extraFields {\n          fieldName,\n          fieldValue,\n        },\n      },\n      salesRepStatus,\n      customerStatus,\n      subtotal,\n      discount,\n      grandTotal,\n      cartId,\n      cartUrl,\n      checkoutUrl,\n      bcOrderId,\n      currency,\n      contactInfo,\n      trackingHistory,\n      extraFields {\n        fieldName,\n        fieldValue,\n      },\n      notes,\n      legalTerms,\n      shippingTotal,\n      taxTotal,\n      totalAmount,\n      shippingMethod,\n      billingAddress,\n      oldSalesRepStatus,\n      oldCustomerStatus,\n      recipients,\n      discountType,\n      discountValue,\n      status,\n      company,\n      salesRep,\n      salesRepEmail,\n      orderId,\n      shippingAddress,\n      productsList {\n        productId,\n        sku,\n        basePrice,\n        discount,\n        offeredPrice,\n        quantity,\n        variantId,\n        imageUrl,\n        orderQuantityMaximum,\n        orderQuantityMinimum,\n        productName,\n        purchaseHandled,\n        options,\n        notes,\n        costPrice,\n        inventoryTracking,\n        inventoryLevel,\n      },\n      storefrontAttachFiles {\n        id,\n        fileName,\n        fileType,\n        fileUrl,\n        createdBy,\n      },\n      backendAttachFiles {\n        id,\n        fileName,\n        fileType,\n        fileUrl,\n        createdBy,\n      },\n      storeInfo {\n        storeName,\n        storeAddress,\n        storeCountry,\n        storeLogo,\n        storeUrl,\n      },\n      companyInfo {\n        companyId,\n        companyName,\n        companyAddress,\n        companyCountry,\n        companyState,\n        companyCity,\n        companyZipCode,\n        phoneNumber,\n      },\n      salesRepInfo {\n        salesRepName,\n        salesRepEmail,\n        salesRepPhoneNumber,\n      },\n      quoteLogo,\n      quoteUrl,\n      channelId,\n      channelName,\n      allowCheckout,\n      displayDiscount,\n    }\n  }\n'),$=e=>"mutation{\n  quoteFrontendPdf(\n    quoteId: ".concat(e.quoteId,',\n    storeHash: "').concat(i,'",\n    createdAt: ').concat(e.createdAt,',\n    lang: "').concat(e.lang,'",\n    isPreview: ').concat(e.isPreview,"\n  ) {\n    url,\n    content,\n  }\n}"),B=e=>"mutation{\n  quoteCheckout(\n    id: ".concat(e.id,',\n    storeHash: "').concat(i,'",\n  ) {\n    quoteCheckout {\n      checkoutUrl,\n      cartId,\n      cartUrl,\n    }\n  }\n}'),C=e=>"mutation{\n  quoteAttachFileCreate(\n    quoteId: ".concat(e.quoteId,",\n    fileList: ").concat(n(e.fileList||[]),"\n  ) {\n    attachFiles {\n      id,\n      createdBy,\n      fileUrl,\n    }\n  }\n}"),A=e=>"mutation{\n  quoteAttachFileDelete(\n    quoteId: ".concat(e.quoteId,",\n    fileId: ").concat(e.fileId,"\n  ) {\n    message\n  }\n}"),I="\nquery getStorefrontProductSettings($storeHash: String!, $channelId: Int) {\n  storefrontProductSettings(storeHash: $storeHash, channelId: $channelId) {\n    hidePriceFromGuests\n  }\n}\n",b="query getQuoteExtraFields($storeHash: String, $channelId: Int) {\n  quoteExtraFieldsConfig(storeHash: $storeHash, channelId: $channelId) {\n    fieldName,\n    fieldType,\n    isRequired,\n    defaultValue,\n    maximumLength,\n    numberOfRows,\n    maximumValue,\n    listOfValue,\n    visibleToEnduser,\n    labelName,\n    id,\n    isUnique,\n    valueConfigs,\n    fieldCategory,\n  }\n}",D=()=>t.graphqlB2B({query:q()}),E=e=>t.graphqlB2B({query:h(e)}),R=e=>t.graphqlB2B({query:c(e,"b2b")}).then(o=>o.quotes),v=e=>t.graphqlB2B({query:c(e,"bc")}).then(o=>o.customerQuotes),H=e=>t.graphqlB2B({query:y(e)}),P=e=>t.graphqlB2B({query:f(e)}),k=e=>t.graphqlB2B({query:d(e)}),U=e=>t.graphqlB2B({query:d(e)}),j=e=>t.graphqlB2B({query:$(e)}),G=e=>t.graphqlB2B({query:B(e)}),O=e=>t.graphqlB2B({query:C(e)}),V=e=>t.graphqlB2B({query:A(e)}),w=()=>t.graphqlB2B({query:I,variables:{storeHash:i,channelId:l}}),M=()=>t.graphqlB2B({query:b,variables:{storeHash:i,channelId:l}}),x={0:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.draft",color:"#D8D6D1"},1:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.open",color:"#F1C224"},4:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.ordered",color:"#C4DD6C"},5:{textColor:"#fff",idLang:"global.quoteStatusCode.expired",color:"#BD3E1E"}},N=(e,o)=>{const u=x[e];if(!u)return;const{idLang:s,...a}=u;return{...a,name:o(s)}};function z(e){const o=p(),{code:u}=e,s=N(u,o);return s!=null&&s.name?g.jsx(m,{color:s.color,textColor:s.textColor,children:s.name}):null}export{z as Q,U as a,k as b,E as c,D as d,j as e,H as f,w as g,O as h,V as i,M as j,R as k,v as l,G as q,P as u};
//# sourceMappingURL=QuoteStatus-DYr8EgTf.js.map
