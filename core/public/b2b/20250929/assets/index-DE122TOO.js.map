{"version":3,"file":"index-DE122TOO.js","sources":["../../src/utils/isKeyOf.ts","../../src/pages/UserManagement/table/B3NoData.tsx","../../src/pages/UserManagement/table/B3Table.tsx","../../src/pages/UserManagement/table/B3PaginationTable.tsx","../../src/pages/UserManagement/addUser.ts","../../src/pages/UserManagement/checkUserEmail.ts","../../src/pages/UserManagement/config.ts","../../src/pages/UserManagement/getUser.ts","../../src/pages/UserManagement/getUsersExtraFieldsInfo.ts","../../src/pages/UserManagement/getUserExtraFields.ts","../../src/pages/UserManagement/updateUser.ts","../../src/pages/UserManagement/AddEditUser.tsx","../../src/pages/UserManagement/deleteUser.ts","../../src/pages/UserManagement/getUsers.ts","../../src/pages/UserManagement/UserItemCard.tsx","../../src/pages/UserManagement/index.tsx"],"sourcesContent":["export const isKeyOf = <T extends object>(obj: T, key: string | number | symbol): key is keyof T =>\n  key in obj;\n","import styled from '@emotion/styled';\nimport { DataUsageRounded } from '@mui/icons-material';\n\nimport { useB3Lang } from '@/lib/lang';\n\ninterface B3NoDataProps {\n  isLoading: boolean;\n}\n\nconst NoDataContainer = styled('div')(() => ({\n  height: '100%',\n  minHeight: '400px',\n  backgroundColor: '#fff',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: '#aaa',\n  fontSize: '18px',\n}));\n\nconst NoDataText = styled('span')(() => ({\n  marginLeft: '10px',\n}));\n\nexport default function B3NoData({ isLoading }: B3NoDataProps) {\n  const b3Lang = useB3Lang();\n  return (\n    <NoDataContainer>\n      {!isLoading && <DataUsageRounded fontSize=\"large\" />}\n      <NoDataText>{isLoading ? '' : b3Lang('global.table.noData')}</NoDataText>\n    </NoDataContainer>\n  );\n}\n","import { ChangeEvent, MouseEvent, ReactElement, useContext } from 'react';\nimport { Grid, TablePagination } from '@mui/material';\n\nimport { b3HexToRgb, getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\n\nimport B3NoData from './B3NoData';\n\ninterface NodeWrapper<T extends object> {\n  node: T;\n}\n\nexport type PossibleNodeWrapper<T extends object> = T | NodeWrapper<T>;\n\nexport const isNodeWrapper = <T extends object>(\n  item: PossibleNodeWrapper<T>,\n): item is NodeWrapper<T> => 'node' in item;\n\nexport type WithRowControls<T> = T & {\n  id?: string | number;\n  isCollapse?: boolean;\n  disableCurrentCheckbox?: boolean;\n};\n\ninterface Pagination {\n  offset: number;\n  first: number;\n  count: number;\n}\n\ninterface TableProps<Row> {\n  listItems: PossibleNodeWrapper<WithRowControls<Row>>[];\n  itemXs: number;\n  onPaginationChange: (pagination: Pagination) => void;\n  pagination: Pagination;\n  rowsPerPageOptions: number[];\n  renderItem: (row: Row) => ReactElement;\n  isInfiniteScroll: boolean;\n  isLoading: boolean;\n  showRowsPerPageOptions: boolean;\n}\n\nexport function B3Table<Row>({\n  listItems,\n  pagination,\n  onPaginationChange,\n  rowsPerPageOptions,\n  renderItem,\n  isInfiniteScroll,\n  isLoading,\n  itemXs,\n  showRowsPerPageOptions,\n}: TableProps<Row>) {\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const { offset, count, first } = pagination;\n\n  const handlePaginationChange = (pagination: Pagination) => {\n    if (!isLoading) {\n      onPaginationChange(pagination);\n    }\n  };\n\n  const handleChangePage = (_: MouseEvent<HTMLButtonElement> | null, page: number) => {\n    handlePaginationChange({\n      ...pagination,\n      offset: page * first,\n    });\n  };\n\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    handlePaginationChange({\n      ...pagination,\n      offset: 0,\n      first: parseInt(event.target.value, 10) || first,\n    });\n  };\n\n  return listItems.length > 0 ? (\n    <>\n      {isInfiniteScroll && (\n        <>\n          <Grid container spacing={2}>\n            {listItems.map((row, index) => {\n              const node = isNodeWrapper(row) ? row.node : row;\n\n              return (\n                // @ts-expect-error typed previously as an any\n                <Grid item xs={12} key={`${node.id + index}`}>\n                  {node && renderItem(node)}\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          <TablePagination\n            labelDisplayedRows={({ from, to, count }) =>\n              b3Lang('global.pagination.pageXOfY', { from, to, count })\n            }\n            rowsPerPageOptions={showRowsPerPageOptions ? rowsPerPageOptions : []}\n            labelRowsPerPage={b3Lang('global.pagination.perPage')}\n            component=\"div\"\n            sx={{\n              color: isMobile ? b3HexToRgb(customColor, 0.87) : 'rgba(0, 0, 0, 0.87)',\n              marginTop: '1.5rem',\n              '::-webkit-scrollbar': {\n                display: 'none',\n              },\n              '& svg': {\n                color: isMobile ? b3HexToRgb(customColor, 0.87) : 'rgba(0, 0, 0, 0.87)',\n              },\n            }}\n            count={count}\n            rowsPerPage={first}\n            page={first === 0 ? 0 : offset / first}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </>\n      )}\n      {!isInfiniteScroll && (\n        <>\n          <Grid container spacing={2}>\n            {listItems.map((row, index) => {\n              const node = isNodeWrapper(row) ? row.node : row;\n\n              return (\n                // @ts-expect-error typed previously as an any\n                <Grid item xs={itemXs} key={`${node.id + index}`}>\n                  {node && renderItem && renderItem(node)}\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          <TablePagination\n            labelDisplayedRows={({ from, to, count }) =>\n              b3Lang('global.pagination.pageXOfY', { from, to, count })\n            }\n            rowsPerPageOptions={showRowsPerPageOptions ? rowsPerPageOptions : []}\n            labelRowsPerPage={b3Lang('global.pagination.cardsPerPage')}\n            component=\"div\"\n            sx={{\n              color: customColor,\n              marginTop: '1.5rem',\n              '::-webkit-scrollbar': {\n                display: 'none',\n              },\n              '& svg': {\n                color: customColor,\n              },\n            }}\n            count={count}\n            rowsPerPage={first}\n            page={first === 0 ? 0 : offset / first}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </>\n      )}\n    </>\n  ) : (\n    <B3NoData isLoading={isLoading} />\n  );\n}\n","import {\n  ReactElement,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport isEmpty from 'lodash-es/isEmpty';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { useMobile } from '@/hooks';\nimport { useAppSelector } from '@/store';\nimport { forwardRefWithGenerics, memoWithGenerics } from '@/utils';\n\nimport { B3Table, isNodeWrapper, PossibleNodeWrapper, WithRowControls } from './B3Table';\n\ninterface TablePagination {\n  offset: number;\n  first: number;\n}\n\ninterface GetRequestListResult<T extends object> {\n  edges: PossibleNodeWrapper<T>[];\n  totalCount: number;\n}\n\ntype GetRequestListSync<Params, Item extends object> = (\n  params: Params,\n) => GetRequestListResult<Item>;\ntype GetRequestListAsync<Params, Item extends object> = (\n  params: Params,\n) => Promise<GetRequestListResult<Item>>;\n\nexport type GetRequestList<Params, Item extends object> =\n  | GetRequestListSync<Params, Item>\n  | GetRequestListAsync<Params, Item>;\n\ninterface B3PaginationTableProps<GetRequestListParams, Row extends object> {\n  itemXs: number;\n  renderItem: (row: Row, index?: number, checkBox?: () => ReactElement) => ReactElement;\n  getRequestList: GetRequestList<GetRequestListParams, WithRowControls<Row>>;\n  searchParams: GetRequestListParams & { createdBy?: string };\n  requestLoading?: (bool: boolean) => void;\n  showRowsPerPageOptions?: boolean;\n}\n\nfunction PaginationTable<GetRequestListParams, Row extends object>(\n  {\n    renderItem,\n    itemXs,\n    getRequestList,\n    searchParams,\n    requestLoading,\n    showRowsPerPageOptions = true,\n  }: B3PaginationTableProps<GetRequestListParams, Row>,\n  ref?: Ref<unknown>,\n) {\n  const rowsPerPageOptions = [12, 24, 36];\n  const initPagination = {\n    offset: 0,\n    first: rowsPerPageOptions[0],\n  };\n\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n  const selectCompanyHierarchyIdCache = useRef(selectCompanyHierarchyId);\n\n  const cache = useRef<GetRequestListParams | null>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const [pagination, setPagination] = useState<TablePagination>(initPagination);\n\n  const [count, setAllCount] = useState<number>(0);\n\n  const [cacheAllList, setCacheAllList] = useState<PossibleNodeWrapper<WithRowControls<Row>>[]>([]);\n\n  const [list, setList] = useState<PossibleNodeWrapper<WithRowControls<Row>>[]>([]);\n\n  const [isMobile] = useMobile();\n\n  const cacheList = useCallback(\n    (edges: PossibleNodeWrapper<WithRowControls<Row>>[]) => {\n      if (!cacheAllList.length) setCacheAllList(edges);\n\n      const copyCacheAllList = [...cacheAllList];\n\n      edges.forEach((item) => {\n        const option = isNodeWrapper(item) ? item.node : item;\n        const isExist = cacheAllList.some((cache) => {\n          const cacheOption = isNodeWrapper(cache) ? cache.node : cache;\n          return cacheOption.id === option.id;\n        });\n\n        if (!isExist) {\n          copyCacheAllList.push(item);\n        }\n      });\n\n      setCacheAllList(copyCacheAllList);\n    },\n    [cacheAllList],\n  );\n\n  const fetchList = useCallback(\n    async (b3Pagination?: TablePagination, isRefresh?: boolean) => {\n      try {\n        if (cache?.current && isEqual(cache.current, searchParams) && !isRefresh && !b3Pagination) {\n          return;\n        }\n        cache.current = searchParams;\n\n        setLoading(true);\n        if (requestLoading) requestLoading(true);\n        const { createdBy = '' } = searchParams;\n\n        const getEmailReg = /\\((.+)\\)/g;\n        const getCreatedByReg = /^[^(]+/;\n        const emailRegArr = getEmailReg.exec(createdBy);\n        const createdByUserRegArr = getCreatedByReg.exec(createdBy);\n        const createdByUser = createdByUserRegArr?.length ? createdByUserRegArr[0].trim() : '';\n        const newSearchParams = {\n          ...searchParams,\n          createdBy: createdByUser,\n          email: emailRegArr?.length ? emailRegArr[1] : '',\n        };\n        const params = {\n          ...newSearchParams,\n          first: b3Pagination?.first || pagination.first,\n          offset: b3Pagination?.offset || 0,\n        };\n        const requestList = await getRequestList(params);\n        const { edges, totalCount } = requestList;\n\n        setList(edges);\n\n        cacheList(edges);\n\n        if (!b3Pagination) {\n          setPagination({\n            first: pagination.first,\n            offset: 0,\n          });\n        }\n\n        setAllCount(totalCount);\n        setLoading(false);\n        if (requestLoading) requestLoading(false);\n      } catch (e) {\n        setLoading(false);\n        if (requestLoading) requestLoading(false);\n      }\n    },\n    [cacheList, getRequestList, pagination.first, requestLoading, searchParams],\n  );\n\n  const refresh = useCallback(() => {\n    fetchList(pagination, true);\n  }, [fetchList, pagination]);\n\n  useEffect(() => {\n    const isChangeCompany =\n      Number(selectCompanyHierarchyIdCache.current) !== Number(selectCompanyHierarchyId);\n    if (!isEmpty(searchParams)) {\n      if (isChangeCompany) {\n        fetchList(pagination, true);\n        selectCompanyHierarchyIdCache.current = selectCompanyHierarchyId;\n      } else {\n        fetchList();\n      }\n    }\n    // ignore pageType because is not a reactive value\n  }, [fetchList, searchParams, selectCompanyHierarchyId, pagination]);\n\n  const handlePaginationChange = async (pagination: TablePagination) => {\n    await fetchList(pagination);\n    setPagination(pagination);\n  };\n\n  const tablePagination = {\n    ...pagination,\n    count,\n  };\n\n  const getList = useCallback(() => list, [list]);\n\n  const getCacheList = useCallback(() => cacheAllList, [cacheAllList]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      setList,\n      setCacheAllList,\n      getList,\n      getCacheList,\n      refresh,\n    }),\n    [getList, getCacheList, refresh],\n  );\n\n  return (\n    <B3Table\n      listItems={list}\n      pagination={tablePagination}\n      rowsPerPageOptions={rowsPerPageOptions}\n      onPaginationChange={handlePaginationChange}\n      isInfiniteScroll={isMobile}\n      isLoading={loading}\n      renderItem={renderItem}\n      itemXs={itemXs}\n      showRowsPerPageOptions={showRowsPerPageOptions}\n    />\n  );\n}\n\nconst B3PaginationTable = memoWithGenerics(forwardRefWithGenerics(PaginationTable));\n\nexport { B3PaginationTable };\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst toNumberSafely = (value?: number | string): number | undefined =>\n  value !== undefined && value !== '' ? Number(value) : undefined;\n\nconst addUserQl = `\n  mutation CreateUser ($userData: UserInputType!) {\n    userCreate ( userData: $userData ){\n      user {\n        id\n      }\n    }\n  }\n`;\n\ninterface AddUserResponse {\n  data: { userCreate: { user: { id: number } } };\n}\n\ninterface AddUserVariables {\n  companyId: number | string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n  companyRoleId?: number | string;\n  addChannel?: boolean;\n  companyRoleName?: string;\n  extraFields?: { fieldName: string; fieldValue: string }[];\n}\n\nexport const addUser = (data: AddUserVariables) => {\n  const userData = {\n    companyId: toNumberSafely(data.companyId),\n    companyRoleId: toNumberSafely(data.companyRoleId),\n    // not simply spreading data as the form is also including extraFields duplicated inline\n    email: data.email,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    phone: data.phone,\n    addChannel: data.addChannel,\n    companyRoleName: data.companyRoleName,\n    extraFields: data.extraFields,\n  };\n\n  return B3Request.graphqlB2B<AddUserResponse>({ query: addUserQl, variables: { userData } });\n};\n","import B3Request from '@/shared/service/request/b3Fetch';\nimport { UserTypes } from '@/types';\nimport { storeHash } from '@/utils';\n\nconst toNumberSafely = (value?: number | string): number | undefined =>\n  value !== undefined && value !== '' ? Number(value) : undefined;\n\nconst checkUserB2BEmail = `\n  query UserEmailCheck ($email: String!, $companyId: Int, $storeHash: String!, $channelId: Int) {\n    userEmailCheck ( email: $email, companyId: $companyId, storeHash: $storeHash, channelId: $channelId ){\n      userType,\n      userInfo {\n        companyName\n      }\n    }\n  }\n`;\n\ninterface UserEmailCheckResponse {\n  data: {\n    userEmailCheck: {\n      userType: UserTypes;\n      userInfo: {\n        companyName: string | null;\n      };\n    };\n  };\n}\n\ninterface CheckUserEmailVariables {\n  email: string;\n  companyId?: number | string;\n  channelId?: number | string;\n}\n\nexport const checkUserEmail = (variables: CheckUserEmailVariables) =>\n  B3Request.graphqlB2B<UserEmailCheckResponse>({\n    query: checkUserB2BEmail,\n    variables: {\n      email: variables.email,\n      companyId: toNumberSafely(variables.companyId),\n      channelId: toNumberSafely(variables.channelId),\n      storeHash,\n    },\n  }).then((res) => ({\n    ...res.userEmailCheck,\n    isValid: res.userEmailCheck.userType === UserTypes.DOES_NOT_EXIST,\n  }));\n","import { LangFormatFunction } from '@/lib/lang';\n\ninterface ExtraFieldsProps {\n  fieldName: string;\n  fieldValue: string | number;\n}\n\ninterface FilterProps {\n  first: number;\n  offset: number;\n  search: string;\n  role: number | string;\n  companyId: number | string;\n  addChannel: boolean;\n  [key: string]: string | null | number | boolean | ExtraFieldsProps[];\n}\n\ninterface UsersFilesProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\ninterface UserRoleProps {\n  label: string;\n  value: number;\n  idLang: string;\n  name: string;\n}\n\nconst getUserRole = () => {\n  const userRole: Array<UserRoleProps> = [\n    {\n      label: 'Admin',\n      name: 'Admin',\n      value: 0,\n      idLang: 'userManagement.userRole.admin',\n    },\n    {\n      label: 'Senior buyer',\n      name: 'Senior Buyer',\n      value: 1,\n      idLang: 'userManagement.userRole.seniorBuyer',\n    },\n    {\n      label: 'Junior buyer',\n      name: 'Junior Buyer',\n      value: 2,\n      idLang: 'userManagement.userRole.juniorBuyer',\n    },\n  ];\n\n  return userRole;\n};\n\nconst getFilterMoreList = (b3Lang: LangFormatFunction) => {\n  return [\n    {\n      name: 'companyRoleId',\n      label: b3Lang('userManagement.config.userRole'),\n      required: false,\n      default: '',\n      defaultName: '',\n      fieldType: 'roleAutocomplete',\n      xs: 12,\n      disabled: false,\n      variant: 'filled',\n      size: 'small',\n    },\n  ] satisfies [unknown];\n};\n\nconst getUsersFiles = (type: string, b3Lang: LangFormatFunction, disabledUserRole = false) => {\n  const roleArr = getFilterMoreList(b3Lang);\n  roleArr[0].required = true;\n  roleArr[0].disabled = disabledUserRole;\n\n  const usersFiles = [\n    ...roleArr,\n    {\n      name: 'email',\n      label: b3Lang('userManagement.config.email'),\n      required: true,\n      fieldType: 'text',\n      xs: 12,\n      disabled: type === 'edit',\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'firstName',\n      label: b3Lang('userManagement.config.firstName'),\n      required: true,\n      default: '',\n      fieldType: 'text',\n      xs: 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'lastName',\n      label: b3Lang('userManagement.config.lastName'),\n      required: true,\n      fieldType: 'text',\n      xs: 6,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'phone',\n      label: b3Lang('userManagement.config.phoneNumber'),\n      required: false,\n      fieldType: 'text',\n      xs: 12,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  return usersFiles;\n};\n\ntype EmailError = {\n  [k: number]: string;\n};\n\nconst emailError: EmailError = {\n  3: 'global.emailValidate.multipleCustomer',\n  4: 'global.emailValidate.companyUsed',\n  5: 'global.emailValidate.alreadyExits',\n  6: 'global.emailValidate.usedSuperAdmin',\n};\n\nexport { emailError, getFilterMoreList, getUserRole, getUsersFiles };\n\nexport type { FilterProps, UsersFilesProps, ExtraFieldsProps };\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst getUserQl = `\n  query GetUser($userId: Int!, $companyId: Int!) {\n    user ( userId: $userId companyId: $companyId ) { \n        firstName,\n        lastName,\n        email,\n        phone,\n        companyRoleId,\n        companyRoleName,\n        extraFields {\n          fieldName\n          fieldValue\n        }\n      }\n    }\n`;\n\nexport interface UserResponse {\n  data: {\n    user: {\n      firstName: string;\n      lastName: string;\n      email: string;\n      phone: string;\n      companyRoleId: number;\n      companyRoleName?: string;\n      extraFields: { fieldName: string; fieldValue: string }[];\n    };\n  };\n}\n\ninterface GetUserVariables {\n  userId: string;\n  companyId: string;\n}\n\nexport const getUser = ({ userId, companyId }: GetUserVariables) =>\n  B3Request.graphqlB2B<UserResponse>({\n    query: getUserQl,\n    variables: { userId: Number(userId), companyId: Number(companyId) },\n  }).then(({ user }) => user);\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst getUserExtraFields = `\n  query GetUserExtraFields {\n    userExtraFields {\n      fieldName\n      fieldType\n      isRequired\n      defaultValue\n      maximumLength\n      numberOfRows\n      maximumValue\n      listOfValue\n      visibleToEnduser\n      labelName\n    }\n  }\n`;\n\nexport interface UserExtraFieldsInfoResponse {\n  data: {\n    userExtraFields: Array<{\n      fieldName: string;\n      fieldType: 0 | 1 | 2 | 3;\n      isRequired: boolean;\n      defaultValue: string | null;\n      maximumLength: string | null;\n      numberOfRows: number | null;\n      maximumValue: string | null;\n      listOfValue: string[] | null;\n      visibleToEnduser: boolean;\n      labelName: string;\n    }>;\n  };\n}\n\nexport const getUsersExtraFieldsInfo = () =>\n  B3Request.graphqlB2B<UserExtraFieldsInfoResponse>({ query: getUserExtraFields });\n","import b2bLogger from '@/utils/b3Logger';\n\nimport { getUsersExtraFieldsInfo, UserExtraFieldsInfoResponse } from './getUsersExtraFieldsInfo';\n\ninterface FieldsOptionProps {\n  label: string;\n  value: string | number;\n}\n\ninterface FormattedItemsProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\nconst FIELD_TYPE = {\n  0: 'text',\n  1: 'multiline',\n  2: 'number',\n  3: 'dropdown',\n} as const;\n\ntype UserExtraFields = UserExtraFieldsInfoResponse['data']['userExtraFields'];\n\nconst handleConversionExtraItemFormat = (userExtraFields: UserExtraFields) => {\n  const formattedUserExtraFields: FormattedItemsProps[] = userExtraFields.map((item) => {\n    const { listOfValue } = item;\n    const type = FIELD_TYPE[item.fieldType];\n\n    const currentItems: FormattedItemsProps = {\n      isExtraFields: true,\n      name: item.fieldName,\n      label: item.labelName,\n      required: item.isRequired,\n      default: item.defaultValue || '',\n      fieldType: type,\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    };\n\n    switch (type) {\n      case 'dropdown':\n        if (listOfValue) {\n          const options: FieldsOptionProps[] = listOfValue?.map((option: string) => ({\n            label: option,\n            value: option,\n          }));\n\n          if (options.length > 0) {\n            currentItems.options = options;\n          }\n        }\n\n        break;\n      case 'number':\n        currentItems.max = item.maximumValue || '';\n        break;\n      case 'multiline':\n        currentItems.rows = item.numberOfRows || '';\n        break;\n      default:\n        currentItems.maxLength = item.maximumLength || '';\n        break;\n    }\n\n    return currentItems;\n  });\n\n  return formattedUserExtraFields;\n};\n\nconst getB2BUserExtraFields = async () => {\n  let userExtraFieldsList: FormattedItemsProps[] = [];\n  try {\n    const { userExtraFields } = await getUsersExtraFieldsInfo();\n    const visibleFields = userExtraFields.filter((item) => item.visibleToEnduser);\n\n    const formattedUserExtraFields = handleConversionExtraItemFormat(visibleFields);\n\n    userExtraFieldsList = formattedUserExtraFields;\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  return userExtraFieldsList;\n};\n\nexport default getB2BUserExtraFields;\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst toNumberSafely = (value?: number | string): number | undefined =>\n  value !== undefined && value !== '' ? Number(value) : undefined;\n\nconst updateUserQl = `\n  mutation UpdateUser ($userData: UserUpdateInputType!) {\n    userUpdate ( userData: $userData ) {\n      user {\n        id\n      }\n    }\n  }\n`;\n\ninterface UpdateUserResponse {\n  data: { userUpdate: { user: { id: number } } };\n}\n\ninterface UpdateUserVariables {\n  userId: number | string;\n  companyId: number | string;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  companyRoleId?: number | string;\n  addChannel?: boolean;\n  companyRoleName?: string;\n  extraFields?: { fieldName: string; fieldValue: string }[];\n}\n\nexport const updateUser = (data: UpdateUserVariables) => {\n  const userData = {\n    userId: toNumberSafely(data.userId),\n    companyId: toNumberSafely(data.companyId),\n    companyRoleId: toNumberSafely(data.companyRoleId),\n    // not simply spreading data as the form is also including extraFields duplicated inline\n    email: data.email,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    phone: data.phone,\n    addChannel: data.addChannel,\n    companyRoleName: data.companyRoleName,\n    extraFields: data.extraFields,\n  };\n\n  return B3Request.graphqlB2B<UpdateUserResponse>({ query: updateUserQl, variables: { userData } });\n};\n","import { forwardRef, Ref, useEffect, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport concat from 'lodash-es/concat';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { UserTypes } from '@/types';\nimport { channelId, isKeyOf, snackbar } from '@/utils';\n\nimport { addUser } from './addUser';\nimport { checkUserEmail } from './checkUserEmail';\nimport {\n  emailError,\n  ExtraFieldsProps,\n  FilterProps,\n  getUsersFiles,\n  UsersFilesProps,\n} from './config';\nimport { getUser } from './getUser';\nimport getB2BUserExtraFields from './getUserExtraFields';\nimport { updateUser } from './updateUser';\n\nexport type HandleOpenAddEditUserClick = (\n  options: { type: 'add' } | { type: 'edit'; userId: string },\n) => Promise<void>;\n\ninterface AddEditUserProps {\n  companyId: string;\n  renderList: () => void;\n}\n\ninterface SelectedDataProps {\n  [key: string]: string | number;\n}\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  companyRoleId: number;\n  companyRoleName?: string;\n  extraFields: { fieldName: string; fieldValue: string }[];\n}\n\nfunction AddEditUser({ companyId, renderList }: AddEditUserProps, ref: Ref<unknown> | undefined) {\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [type, setType] = useState<string>('');\n\n  const [editData, setEditData] = useState<User>();\n\n  const [addUpdateLoading, setAddUpdateLoading] = useState<boolean>(false);\n\n  const [usersFiles, setUsersFiles] = useState<Array<UsersFilesProps>>([]);\n  const [userExtrafields, setUserExtrafields] = useState<UsersFilesProps[] | []>([]);\n\n  const b3Lang = useB3Lang();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    clearErrors,\n    setValue,\n    setError,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleGetUsersFiles = async () => {\n    const userExtrafields = await getB2BUserExtraFields();\n    setUserExtrafields(userExtrafields);\n  };\n\n  useEffect(() => {\n    if (userExtrafields.length === 0) {\n      handleGetUsersFiles();\n    }\n  }, [userExtrafields.length]);\n\n  const handleGetExtrafieldsInfo = (selectedData: SelectedDataProps) => {\n    const keyValue = Object.keys(selectedData);\n\n    const extrafields: ExtraFieldsProps[] = [];\n    userExtrafields.forEach((item: UsersFilesProps) => {\n      if (keyValue.includes(item.name)) {\n        const extraField = {\n          fieldName: item.name || '',\n          fieldValue: selectedData[item.name] || '',\n        };\n\n        extrafields.push(extraField);\n      }\n    });\n\n    return extrafields;\n  };\n\n  useEffect(() => {\n    if (open) {\n      const newUsersFiles = usersFiles.map((item: UsersFilesProps) => {\n        const newItem = item;\n\n        if (type === 'edit' && editData) {\n          setValue(item.name, isKeyOf(editData, item.name) ? editData[item.name] : undefined);\n        }\n\n        return newItem;\n      });\n\n      setUsersFiles(newUsersFiles);\n    }\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editData, open, type]);\n\n  const handleCancelClick = () => {\n    usersFiles.forEach((item: UsersFilesProps) => {\n      setValue(item.name, '');\n      if (item.isExtraFields) {\n        setValue(item.name, item.default || '');\n      }\n    });\n    clearErrors();\n    setOpen(false);\n  };\n\n  const validateEmailValue = async (emailValue: string) => {\n    const {\n      userType,\n      userInfo: { companyName },\n    } = await checkUserEmail({\n      email: emailValue,\n      companyId,\n      channelId,\n    });\n\n    const isValid = [\n      UserTypes.DOES_NOT_EXIST,\n      UserTypes.B2C,\n      UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL,\n    ].includes(userType);\n\n    if (!isValid) {\n      setError('email', {\n        type: 'custom',\n        message: b3Lang(emailError[userType], {\n          companyName: companyName ? `(${companyName})` : '',\n          email: emailValue,\n        }),\n      });\n    }\n\n    return {\n      isValid,\n      userType,\n    };\n  };\n\n  const handleAddUserClick = () => {\n    handleSubmit(async (data) => {\n      setAddUpdateLoading(true);\n      const extraFieldsInfo = handleGetExtrafieldsInfo(data);\n      let message = b3Lang('userManagement.addUserSuccessfully');\n\n      try {\n        const params: Partial<FilterProps> = {\n          companyId,\n          companyRoleId: Number(data.companyRoleId),\n          ...data,\n          extraFields: extraFieldsInfo,\n        };\n\n        if (type !== 'edit') {\n          const { isValid, userType } = await validateEmailValue(data.email);\n\n          if (!isValid) {\n            setAddUpdateLoading(false);\n            return;\n          }\n\n          if (userType === UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL) {\n            params.addChannel = true;\n            message = b3Lang('userManagement.userDetected', {\n              email: data.email,\n            });\n          }\n\n          // @ts-expect-error params is currently too un-type-safe, needs fixing\n          await addUser(params);\n        }\n\n        if (type === 'edit') {\n          params.userId = editData?.id || '';\n          message = b3Lang('userManagement.updateUserSuccessfully');\n          delete params.email;\n\n          // @ts-expect-error params is currently too un-type-safe, needs fixing\n          await updateUser(params);\n        }\n\n        handleCancelClick();\n\n        snackbar.success(message);\n\n        renderList();\n      } finally {\n        setAddUpdateLoading(false);\n      }\n    })();\n  };\n\n  const handleOpenAddEditUserClick: HandleOpenAddEditUserClick = async (options) => {\n    const { type } = options;\n    const usersFiles = getUsersFiles(\n      type,\n      b3Lang,\n      type === 'edit' ? b2bId === Number(options.userId) : false,\n    );\n\n    if (type === 'edit') {\n      const { userId } = options;\n      const data = await getUser({ userId, companyId });\n      const extrafieldsInfo: ExtraFieldsProps[] = data.extraFields || [];\n      let newData = data;\n      if (extrafieldsInfo && extrafieldsInfo.length > 0) {\n        const extrafieldsData: CustomFieldItems = {};\n\n        extrafieldsInfo.forEach((item) => {\n          extrafieldsData[item.fieldName] = item.fieldValue;\n        });\n\n        newData = {\n          ...data,\n          ...extrafieldsData,\n        };\n      }\n\n      setEditData({ id: userId, ...newData });\n\n      const companyRoleItem: UsersFilesProps | null =\n        usersFiles.find((item) => item.name === 'companyRoleId') || null;\n      if (companyRoleItem) {\n        companyRoleItem.defaultName = data?.companyRoleName || '';\n        companyRoleItem.default = data?.companyRoleId || '';\n      }\n    }\n    const allUsersFiles = concat(usersFiles, userExtrafields);\n    setUsersFiles(allUsersFiles);\n\n    setType(type);\n    setOpen(true);\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleOpenAddEditUserClick,\n  }));\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      title={\n        type === 'edit' ? b3Lang('userManagement.editUser') : b3Lang('userManagement.addNewUser')\n      }\n      leftSizeBtn={b3Lang('userManagement.cancel')}\n      rightSizeBtn={b3Lang('userManagement.saveUser')}\n      handleLeftClick={handleCancelClick}\n      handRightClick={handleAddUserClick}\n      loading={addUpdateLoading}\n      isShowBordered\n    >\n      <B3CustomForm\n        formFields={usersFiles}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n    </B3Dialog>\n  );\n}\n\nconst B3AddEditUser = forwardRef(AddEditUser);\n\nexport default B3AddEditUser;\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst toNumberSafely = (value?: number | string): number | undefined =>\n  value !== undefined && value !== '' ? Number(value) : undefined;\n\nconst deleteUserQl = `\n  mutation DeleteUser ($companyId: Int!, $userId: Int!) { \n    userDelete ( companyId: $companyId, userId: $userId ) {\n      message\n    }\n  }\n`;\n\ninterface DeleteUserResponse {\n  data: { userDelete: { message: string } };\n}\n\ninterface DeleteUserVariables {\n  companyId: number | string;\n  userId: number | string;\n}\n\nexport const deleteUser = (variables: DeleteUserVariables) =>\n  B3Request.graphqlB2B<DeleteUserResponse>({\n    query: deleteUserQl,\n    variables: {\n      companyId: toNumberSafely(variables.companyId),\n      userId: toNumberSafely(variables.userId),\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst getUsersQl = `\n  query GetUsers($first: Int!, $offset: Int!, $q: String, $companyId: Int!, $companyRoleId: Decimal) {\n    users (\n      first: $first\n      search: $q\n      offset: $offset\n      companyId: $companyId\n      companyRoleId: $companyRoleId\n    ){\n      totalCount,\n      edges{\n        node{\n          id,\n          firstName,\n          lastName,\n          email,\n          companyRoleName,\n          companyInfo {\n            companyId,\n          },\n        }\n      }\n    }\n  }\n`;\n\nexport interface UsersResponse {\n  data: {\n    users: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          id: string;\n          firstName: string;\n          lastName: string;\n          email: string;\n          companyRoleName: string;\n          companyInfo: {\n            companyId: string;\n          };\n        };\n      }>;\n    };\n  };\n}\n\nexport interface GetUsersVariables {\n  first: number;\n  offset: number;\n  q?: string;\n  companyId: number | string;\n  companyRoleId?: number | string;\n}\n\nexport const getUsers = (data: GetUsersVariables) =>\n  B3Request.graphqlB2B<UsersResponse>({\n    query: getUsersQl,\n    variables: {\n      ...data,\n      q: data.q || '',\n      companyId: Number(data.companyId),\n      companyRoleId:\n        data.companyRoleId !== undefined && data.companyRoleId !== ''\n          ? Number(data.companyRoleId)\n          : undefined,\n    },\n  });\n","import styled from '@emotion/styled';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { B3Tag } from '@/components';\nimport { verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { getUserRole } from './config';\n\ninterface RoleListProps {\n  label: string;\n  value: string | number;\n  color: string;\n  textColor: string;\n  idLang: string;\n  name: string;\n}\n\ninterface User {\n  id: string;\n  companyRoleName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  companyInfo: {\n    companyId: string;\n  };\n}\n\nexport type Edit = (userId: string) => void;\nexport type Delete = (userId: string) => void;\n\ninterface OrderItemCardProps {\n  item: User;\n  onEdit: Edit;\n  onDelete: Delete;\n}\n\nconst Flex = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nexport function UserItemCard(props: OrderItemCardProps) {\n  const { item: userInfo, onEdit, onDelete } = props;\n  const { companyInfo, id, companyRoleName, firstName, lastName, email } = userInfo;\n\n  const { userUpdateActionsPermission, userDeleteActionsPermission } = b2bPermissionsMap;\n\n  const updateActionsPermission = verifyLevelPermission({\n    code: userUpdateActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n  const deleteActionsPermission = verifyLevelPermission({\n    code: userDeleteActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n\n  const getNewRoleList = () => {\n    const userRole = getUserRole();\n    const newRoleList: Array<RoleListProps> = userRole.map((item) => {\n      if (Number(item.value) === 2) {\n        if (companyRoleName !== 'Junior Buyer') {\n          return {\n            color: '#ce93d8',\n            textColor: 'black',\n            ...item,\n            label: companyRoleName,\n            name: companyRoleName,\n          };\n        }\n        return {\n          color: '#D9DCE9',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      if (Number(item.value) === 1) {\n        return {\n          color: 'rgba(237, 108, 2, 0.3)',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      return {\n        color: '#C4DD6C',\n        textColor: 'black',\n        ...item,\n      };\n    });\n\n    return newRoleList;\n  };\n\n  const statusRender = (name: string) => {\n    const newRoleList = getNewRoleList();\n    const roleItem = newRoleList.find((item: RoleListProps) => item.name === name);\n\n    if (!roleItem) return null;\n    return (\n      <B3Tag color={roleItem.color} textColor={roleItem.textColor}>\n        {roleItem.label}\n      </B3Tag>\n    );\n  };\n\n  return (\n    <Card key={id}>\n      <CardContent\n        sx={{\n          color: '#313440',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{\n            color: 'rgba(0, 0, 0, 0.87)',\n          }}\n        >\n          {firstName} {lastName}\n        </Typography>\n\n        <Typography\n          sx={{\n            p: '15px 0',\n          }}\n          variant=\"body1\"\n        >\n          {email}\n        </Typography>\n        <Flex>\n          {statusRender(companyRoleName)}\n          <Box>\n            {updateActionsPermission && (\n              <IconButton\n                aria-label=\"edit\"\n                size=\"small\"\n                sx={{\n                  marginRight: '8px',\n                }}\n                onClick={() => onEdit(userInfo.id)}\n              >\n                <EditIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n            {deleteActionsPermission && (\n              <IconButton aria-label=\"delete\" size=\"small\" onClick={() => onDelete(userInfo.id)}>\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n          </Box>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { Box } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useCardListColumn, useMobile, useTableRef } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { CustomerRole } from '@/types';\nimport { snackbar } from '@/utils';\nimport { verifyCreatePermission } from '@/utils/b3CheckPermissions';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { B3PaginationTable, GetRequestList } from './table/B3PaginationTable';\nimport B3AddEditUser, { HandleOpenAddEditUserClick } from './AddEditUser';\nimport { getFilterMoreList } from './config';\nimport { deleteUser } from './deleteUser';\nimport { getUsers, GetUsersVariables } from './getUsers';\nimport { Delete, Edit, UserItemCard } from './UserItemCard';\n\ninterface RefCurrentProps extends HTMLInputElement {\n  handleOpenAddEditUserClick: HandleOpenAddEditUserClick;\n}\n\ninterface RoleProps {\n  role: string;\n  companyRoleId: string | number;\n}\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  companyRoleName: string;\n  companyInfo: { companyId: string };\n}\n\nfunction UserManagement() {\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const [userId, setUserId] = useState<string>();\n  const b3Lang = useB3Lang();\n\n  const [isMobile] = useMobile();\n\n  const isExtraLarge = useCardListColumn();\n\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyInfo = useAppSelector(({ company }) => company.companyInfo);\n\n  const companyId = Number(role) === CustomerRole.SUPER_ADMIN ? salesRepCompanyId : companyInfo?.id;\n\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isEnableBtnPermissions = b2bPermissions.userCreateActionsPermission;\n\n  const customItem = useMemo(() => {\n    const { userCreateActionsPermission } = b2bPermissionsMap;\n\n    const isCreatePermission = verifyCreatePermission(\n      userCreateActionsPermission,\n      Number(selectCompanyHierarchyId),\n    );\n    return {\n      isEnabled: isEnableBtnPermissions && isCreatePermission,\n      customLabel: b3Lang('userManagement.addUser'),\n    };\n\n    // ignore b3Lang due it's function that doesn't not depend on any reactive value\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableBtnPermissions, selectCompanyHierarchyId]);\n\n  const addEditUserRef = useRef<RefCurrentProps | null>(null);\n  const [paginationTableRef] = useTableRef();\n\n  const initSearch = {\n    first: 12,\n    offset: 0,\n    search: '',\n    companyRoleId: '',\n    companyId,\n    q: '',\n  };\n  const filterMoreInfo = getFilterMoreList(b3Lang);\n\n  const [filterSearch, setFilterSearch] = useState<GetUsersVariables>(initSearch);\n\n  const [translatedFilterInfo, setTranslatedFilterInfo] =\n    useState<CustomFieldItems[]>(filterMoreInfo);\n  const [valueName, setValueName] = useState<string>('');\n\n  const fetchList: GetRequestList<GetUsersVariables, User> = async (params) => {\n    const data = await getUsers(params);\n\n    const {\n      users: { edges, totalCount },\n    } = data;\n\n    return {\n      edges,\n      totalCount,\n    };\n  };\n\n  const initSearchList = () => {\n    paginationTableRef.current?.refresh();\n  };\n\n  const handleGetTranslatedFilterInfo = () => {\n    const translatedFilterInfo = filterMoreInfo.map((element: CustomFieldItems) => {\n      const translatedItem = element;\n      const translatedOptions = element.options?.map((option: CustomFieldItems) => {\n        const elementOption = option;\n        elementOption.label = b3Lang(option.idLang);\n        return option;\n      });\n\n      translatedItem.options = translatedOptions;\n      translatedItem.setValueName = setValueName;\n      translatedItem.default = filterSearch.companyRoleId;\n      translatedItem.defaultName = filterSearch.companyRoleId ? valueName : '';\n\n      return element;\n    });\n\n    setTranslatedFilterInfo(translatedFilterInfo);\n\n    return translatedFilterInfo;\n  };\n\n  const handleChange = (_: string, value: string) => {\n    const search = {\n      ...filterSearch,\n      q: value,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleFilterChange = (value: RoleProps) => {\n    const search = {\n      ...filterSearch,\n      companyRoleId: value.companyRoleId,\n      offset: 0,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleAddUserClick = () => {\n    addEditUserRef.current?.handleOpenAddEditUserClick({ type: 'add' });\n  };\n\n  const handleEdit: Edit = (userId) => {\n    addEditUserRef.current?.handleOpenAddEditUserClick({ type: 'edit', userId });\n  };\n\n  const handleDelete: Delete = (id) => {\n    setUserId(id);\n    setDeleteOpen(true);\n  };\n\n  const handleCancelClick = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleDeleteUserClick = async (userId?: string) => {\n    if (!userId) {\n      return;\n    }\n\n    try {\n      setIsRequestLoading(true);\n      handleCancelClick();\n      await deleteUser({\n        userId,\n        companyId: selectCompanyHierarchyId || companyId,\n      });\n      snackbar.success(b3Lang('userManagement.deleteUserSuccessfully'));\n    } finally {\n      setIsRequestLoading(false);\n      initSearchList();\n    }\n  };\n\n  useEffect(() => {\n    handleGetTranslatedFilterInfo();\n\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterSearch, filterSearch.companyRoleId]);\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          filterMoreInfo={translatedFilterInfo}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n          customButtonConfig={customItem}\n          handleFilterCustomButtonClick={handleAddUserClick}\n        />\n        <B3PaginationTable\n          ref={paginationTableRef}\n          getRequestList={fetchList}\n          searchParams={filterSearch || {}}\n          itemXs={isExtraLarge ? 3 : 4}\n          requestLoading={setIsRequestLoading}\n          renderItem={(row) => (\n            <UserItemCard key={row.id} item={row} onEdit={handleEdit} onDelete={handleDelete} />\n          )}\n        />\n        <B3AddEditUser\n          companyId={`${selectCompanyHierarchyId || companyId}`}\n          renderList={initSearchList}\n          ref={addEditUserRef}\n        />\n        <B3Dialog\n          isOpen={deleteOpen}\n          title={b3Lang('userManagement.deleteUser')}\n          leftSizeBtn={b3Lang('userManagement.cancel')}\n          rightSizeBtn={b3Lang('userManagement.delete')}\n          handleLeftClick={handleCancelClick}\n          handRightClick={handleDeleteUserClick}\n          row={userId}\n          rightStyleBtn={{\n            color: '#D32F2F',\n          }}\n          isShowBordered={false}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              width: isMobile ? '100%' : '450px',\n              height: '100%',\n            }}\n          >\n            {b3Lang('userManagement.confirmDelete')}\n          </Box>\n        </B3Dialog>\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default UserManagement;\n"],"names":["isKeyOf","obj","key","NoDataContainer","styled","NoDataText","B3NoData","isLoading","b3Lang","useB3Lang","jsx","DataUsageRounded","isNodeWrapper","item","B3Table","listItems","pagination","onPaginationChange","rowsPerPageOptions","renderItem","isInfiniteScroll","itemXs","showRowsPerPageOptions","backgroundColor","useContext","CustomStyleContext","customColor","getContrastColor","isMobile","useMobile","offset","count","first","handlePaginationChange","handleChangePage","_","page","handleChangeRowsPerPage","event","jsxs","Fragment","Grid","row","index","node","TablePagination","from","to","b3HexToRgb","PaginationTable","getRequestList","searchParams","requestLoading","ref","initPagination","selectCompanyHierarchyId","useAppSelector","company","selectCompanyHierarchyIdCache","useRef","cache","loading","setLoading","useState","setPagination","setAllCount","cacheAllList","setCacheAllList","list","setList","cacheList","useCallback","edges","copyCacheAllList","option","fetchList","b3Pagination","isRefresh","isEqual","createdBy","getEmailReg","getCreatedByReg","emailRegArr","createdByUserRegArr","createdByUser","params","requestList","totalCount","e","refresh","useEffect","isChangeCompany","isEmpty","tablePagination","getList","getCacheList","useImperativeHandle","B3PaginationTable","memoWithGenerics","forwardRefWithGenerics","toNumberSafely","value","addUserQl","addUser","data","userData","B3Request","checkUserB2BEmail","checkUserEmail","variables","storeHash","res","UserTypes","getUserRole","getFilterMoreList","getUsersFiles","type","disabledUserRole","roleArr","emailError","getUserQl","getUser","userId","companyId","user","getUserExtraFields","getUsersExtraFieldsInfo","FIELD_TYPE","handleConversionExtraItemFormat","userExtraFields","listOfValue","currentItems","options","getB2BUserExtraFields","userExtraFieldsList","visibleFields","err","b2bLogger","updateUserQl","updateUser","AddEditUser","renderList","b2bId","open","setOpen","setType","editData","setEditData","addUpdateLoading","setAddUpdateLoading","usersFiles","setUsersFiles","userExtrafields","setUserExtrafields","control","handleSubmit","getValues","errors","clearErrors","setValue","setError","useForm","handleGetUsersFiles","handleGetExtrafieldsInfo","selectedData","keyValue","extrafields","extraField","newUsersFiles","newItem","handleCancelClick","validateEmailValue","emailValue","userType","companyName","channelId","isValid","handleAddUserClick","extraFieldsInfo","message","snackbar","handleOpenAddEditUserClick","extrafieldsInfo","newData","extrafieldsData","companyRoleItem","allUsersFiles","concat","B3Dialog","B3CustomForm","B3AddEditUser","forwardRef","deleteUserQl","deleteUser","getUsersQl","getUsers","Flex","UserItemCard","props","userInfo","onEdit","onDelete","companyInfo","id","companyRoleName","firstName","lastName","email","userUpdateActionsPermission","userDeleteActionsPermission","b2bPermissionsMap","updateActionsPermission","verifyLevelPermission","deleteActionsPermission","getNewRoleList","statusRender","name","roleItem","B3Tag","Card","CardContent","Typography","Box","IconButton","EditIcon","DeleteIcon","UserManagement","isRequestLoading","setIsRequestLoading","deleteOpen","setDeleteOpen","setUserId","isExtraLarge","useCardListColumn","salesRepCompanyId","b2bFeatures","role","CustomerRole","b2bPermissions","rolePermissionSelector","isEnableBtnPermissions","customItem","useMemo","userCreateActionsPermission","isCreatePermission","verifyCreatePermission","addEditUserRef","paginationTableRef","useTableRef","initSearch","filterMoreInfo","filterSearch","setFilterSearch","translatedFilterInfo","setTranslatedFilterInfo","valueName","setValueName","initSearchList","_a","handleGetTranslatedFilterInfo","element","translatedItem","translatedOptions","elementOption","handleChange","search","handleFilterChange","handleEdit","handleDelete","handleDeleteUserClick","B3Spin","B3Filter"],"mappings":"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"}