{"version":3,"file":"index-Sv7UTWbj.js","sources":["../../src/utils/b3Price.ts","../../src/shared/service/b2b/graphql/quickOrder.ts","../../src/pages/QuickOrder/components/QuickOrderCard.tsx","../../src/pages/QuickOrder/components/QuickOrderB2BTable.tsx","../../src/pages/QuickOrder/utils.ts","../../src/pages/QuickOrder/components/QuickOrderFooter.tsx","../../src/pages/QuickOrder/components/QuickAdd.tsx","../../src/pages/QuickOrder/components/ChooseOptionsDialog.tsx","../../src/pages/QuickOrder/components/ProductListDialog.tsx","../../src/pages/QuickOrder/components/SearchProduct.tsx","../../src/pages/QuickOrder/components/QuickOrderPad.tsx","../../src/pages/QuickOrder/index.tsx"],"sourcesContent":["import isEmpty from 'lodash-es/isEmpty';\n\nimport { store } from '@/store';\nimport { Variant } from '@/types/products';\n\nconst getProductPriceIncTaxOrExTaxBySetting = (\n  variants: Variant[],\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const {\n    global: { showInclusiveTaxPrice },\n  } = store.getState();\n  const currentVariantInfo: Variant | undefined = variants.find(\n    (item: Variant) => Number(item.variant_id) === variantId || variantSku === item.sku,\n  );\n\n  if (currentVariantInfo && !isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n      tax_exclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = showInclusiveTaxPrice\n      ? Number(bcCalculatedPrice.tax_inclusive)\n      : Number(bcCalculatedPrice.tax_exclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nconst getProductPriceIncTax = (\n  variants: CustomFieldItems,\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const currentVariantInfo =\n    variants.find(\n      (item: CustomFieldItems) => Number(item.variant_id) === variantId || variantSku === item.sku,\n    ) || {};\n\n  if (!isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = Number(bcCalculatedPrice.tax_inclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nexport { getProductPriceIncTax, getProductPriceIncTaxOrExTaxBySetting };\n","import B3Request from '../../request/b3Fetch';\n\ninterface OptionSelection {\n  option_id: number;\n  value_id: number;\n}\n\ninterface OptionList {\n  id: number;\n  option_id: number;\n  order_product_id: number;\n  product_option_id: number;\n  display_name: string;\n  display_name_customer: string;\n  display_name_merchant: string;\n  display_value: string;\n  display_value_customer: string;\n  display_value_merchant: string;\n  value: string;\n  type: string;\n  name: string;\n  display_style: string;\n}\n\nexport interface OrderedProductNode {\n  node: {\n    id: string;\n    createdAt: number;\n    updatedAt: number;\n    productName: string;\n    productBrandName: string;\n    variantSku: string;\n    productId: string;\n    variantId: string;\n    optionList: OptionList[];\n    orderedTimes: string;\n    firstOrderedAt: number;\n    lastOrderedAt: number;\n    lastOrderedItems: string;\n    sku: string;\n    lastOrdered: string;\n    imageUrl: string;\n    baseSku: string;\n    basePrice: string;\n    discount: string;\n    tax: string;\n    enteredInclusive: boolean;\n    productUrl: string;\n    optionSelections: OptionSelection[];\n  };\n}\n\nexport interface RecentlyOrderedProductsResponse {\n  data: {\n    orderedProducts: {\n      totalCount: number;\n      edges: OrderedProductNode[];\n    };\n  };\n}\n\nconst orderedProducts = (data: CustomFieldItems) => `\nquery RecentlyOrderedProducts {\n  orderedProducts (\n    q: \"${data.q || ''}\"\n    first: ${data.first}\n    offset: ${data.offset}\n    beginDateAt: \"${data.beginDateAt}\"\n    endDateAt: \"${data.endDateAt}\"\n    orderBy: \"${data?.orderBy || ''}\"\n  ){\n    totalCount,\n    pageInfo{\n      hasNextPage,\n      hasPreviousPage,\n    },\n    edges{\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        productName,\n        productBrandName,\n        variantSku,\n        productId,\n        variantId,\n        optionList,\n        orderedTimes,\n        firstOrderedAt,\n        lastOrderedAt,\n        lastOrderedItems,\n        sku,\n        lastOrdered,\n        imageUrl,\n        baseSku,\n        basePrice,\n        discount,\n        tax,\n        enteredInclusive,\n        productUrl,\n        optionSelections,\n      }\n    }\n  }\n}`;\n\nexport const getOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n","import { ReactElement } from 'react';\nimport { Box, CardContent, styled, TextField, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { currencyFormat, displayFormat } from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\n\ninterface QuickOrderCardProps {\n  item: any;\n  checkBox?: () => ReactElement;\n  handleUpdateProductQty: (id: number, val: string) => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuickOrderCard(props: QuickOrderCardProps) {\n  const { item: shoppingDetail, checkBox, handleUpdateProductQty } = props;\n  const b3Lang = useB3Lang();\n\n  const {\n    quantity,\n    imageUrl,\n    productName,\n    variantSku,\n    optionList,\n    basePrice,\n    lastOrderedAt,\n    variantId,\n    productsSearch,\n  } = shoppingDetail;\n\n  const price = Number(basePrice) * Number(quantity);\n  const currentVariants = productsSearch.variants || [];\n  const currentImage = b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || imageUrl;\n\n  return (\n    <Box\n      key={shoppingDetail.id}\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>{checkBox && checkBox()}</Box>\n        <Box>\n          <StyledImage\n            src={currentImage || PRODUCT_DEFAULT_IMAGE}\n            alt=\"Product-img\"\n            loading=\"lazy\"\n          />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography variant=\"body1\" color=\"#212121\">\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {variantSku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {optionList.length > 0 && (\n              <Box>\n                {optionList.map((option: CustomFieldItems) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.display_name}\n                  >\n                    {`${option.display_name}: ${option.display_value}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.price', {\n              price: currencyFormat(price),\n            })}\n          </Typography>\n          <Box\n            sx={{\n              '& label': {\n                zIndex: 0,\n              },\n            }}\n          >\n            <TextField\n              size=\"small\"\n              type=\"number\"\n              variant=\"filled\"\n              label=\"Qty\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*',\n              }}\n              value={quantity}\n              sx={{\n                margin: '1rem 0',\n                width: '60%',\n                maxWidth: '100px',\n                '& label': {\n                  fontSize: '14px',\n                },\n                '& input': {\n                  fontSize: '14px',\n                },\n              }}\n              onChange={(e) => {\n                handleUpdateProductQty(shoppingDetail.id, e.target.value);\n              }}\n            />\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.lastOrdered', {\n              lastOrderedAt: displayFormat(lastOrderedAt),\n            })}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuickOrderCard;\n","import { Dispatch, SetStateAction, useRef, useState } from 'react';\nimport { Box, styled, TextField, Typography } from '@mui/material';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile, useSort } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getOrderedProducts, searchProducts } from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, useAppSelector } from '@/store';\nimport { ProductInfoType } from '@/types/gql/graphql';\nimport {\n  currencyFormat,\n  displayFormat,\n  distanceDay,\n  getProductPriceIncTaxOrExTaxBySetting,\n  snackbar,\n} from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\nimport { getDisplayPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport B3FilterMore from '../../../components/filter/B3FilterMore';\nimport B3FilterPicker from '../../../components/filter/B3FilterPicker';\nimport B3FilterSearch from '../../../components/filter/B3FilterSearch';\nimport { CheckedProduct } from '../utils';\n\nimport QuickOrderCard from './QuickOrderCard';\n\ninterface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  taxPrice: number;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: ProductInfoType;\n}\n\ninterface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface SearchProps {\n  q: string;\n  first?: number;\n  offset?: number;\n  beginDateAt?: Date | string | number;\n  endDateAt?: Date | string | number;\n  orderBy: string;\n}\n\ninterface PaginationTableRefProps extends HTMLInputElement {\n  getList: () => void;\n  getCacheList: () => void;\n  setCacheAllList: (items?: ListItemProps[]) => void;\n  setList: (items?: ListItemProps[]) => void;\n  getSelectedValue: () => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nconst StyleQuickOrderTable = styled(Box)(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        paddingTop: '25px',\n      },\n    },\n  },\n}));\n\ninterface QuickOrderTableProps {\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  setCheckedArr: (values: CheckedProduct[]) => void;\n  isRequestLoading: boolean;\n}\n\nconst StyledTextField = styled(TextField)(() => ({\n  '& input': {\n    paddingTop: '12px',\n    paddingRight: '6px',\n  },\n}));\n\nconst defaultSortKey = 'lastOrderedAt';\n\nconst sortKeys = {\n  product: 'productName',\n  lastOrderedAt: 'lastOrderedAt',\n};\n\nfunction QuickOrderTable({\n  setIsRequestLoading,\n  setCheckedArr,\n  isRequestLoading,\n}: QuickOrderTableProps) {\n  const paginationTableRef = useRef<PaginationTableRefProps | null>(null);\n\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n\n  const [search, setSearch] = useState<SearchProps>({\n    q: '',\n    beginDateAt: distanceDay(90),\n    endDateAt: distanceDay(0),\n    orderBy: `-${sortKeys[defaultSortKey]}`,\n  });\n\n  const [handleSetOrderBy, order, orderBy] = useSort(sortKeys, defaultSortKey, search, setSearch);\n\n  const [total, setTotalCount] = useState<number>(0);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n\n  const handleGetProductsById = async (listProducts: ListItemProps[]) => {\n    if (listProducts.length > 0) {\n      const productIds: number[] = [];\n      listProducts.forEach((item) => {\n        const { node } = item;\n        node.quantity = 1;\n        if (!productIds.includes(node.productId)) {\n          productIds.push(node.productId);\n        }\n      });\n\n      try {\n        const { productsSearch } = await searchProducts({\n          productIds,\n          currencyCode,\n          companyId: companyInfoId,\n          customerGroupId,\n        });\n\n        const newProductsSearch = conversionProductsList(productsSearch);\n\n        listProducts.forEach((item) => {\n          const { node } = item;\n\n          const productInfo = newProductsSearch.find((search: CustomFieldItems) => {\n            const { id: productId } = search;\n\n            return Number(node.productId) === Number(productId);\n          });\n\n          node.productsSearch = productInfo || {};\n        });\n\n        return listProducts;\n      } catch (err: any) {\n        snackbar.error(err);\n      }\n    }\n    return [];\n  };\n\n  const getList: GetRequestList<SearchProps, ProductInfoProps> = async (params) => {\n    const {\n      orderedProducts: { edges, totalCount },\n    } = await getOrderedProducts(params);\n\n    const listProducts = await handleGetProductsById(edges);\n\n    setTotalCount(totalCount);\n\n    return {\n      edges: listProducts,\n      totalCount,\n    };\n  };\n\n  const handleSearchProduct = async (q: string) => {\n    setSearch({\n      ...search,\n      q,\n    });\n  };\n\n  const getSelectCheckbox = (selectCheckbox: Array<string | number>) => {\n    if (selectCheckbox.length > 0) {\n      const productList = paginationTableRef.current?.getCacheList() || [];\n      const checkedItems = selectCheckbox.reduce((pre, item: number | string) => {\n        const newItems = productList.find((product: ListItemProps) => {\n          const { node } = product;\n\n          return node.id === item;\n        });\n\n        if (newItems) pre.push(newItems);\n\n        return pre;\n      }, []);\n\n      setCheckedArr([...checkedItems]);\n    } else {\n      setCheckedArr([]);\n    }\n  };\n\n  const handlePickerChange = (key: string, value: Date | string | number) => {\n    const params = {\n      ...search,\n    };\n    if (key === 'start') {\n      params.beginDateAt = value || distanceDay(90);\n    } else {\n      params.endDateAt = value || distanceDay(0);\n    }\n\n    setSearch(params);\n  };\n\n  const handleFilterChange = (data: any) => {\n    const params = {\n      ...search,\n    };\n\n    params.beginDateAt = data.startValue;\n\n    params.endDateAt = data.endValue;\n\n    setSearch(params);\n  };\n\n  const handleUpdateProductQty = (id: number | string, value: number | string) => {\n    if (value !== '' && Number(value) <= 0) return;\n    const listItems = paginationTableRef.current?.getList() || [];\n    const listCacheItems = paginationTableRef.current?.getCacheList() || [];\n\n    const newListItems = listItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    const newListCacheItems = listCacheItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    paginationTableRef.current?.setList([...newListItems]);\n    paginationTableRef.current?.setCacheAllList([...newListCacheItems]);\n  };\n\n  const showPrice = (price: string, row: CustomFieldItems): string | number => {\n    const {\n      productsSearch: { isPriceHidden },\n    } = row;\n    if (isPriceHidden) return '';\n    return getDisplayPrice({\n      price,\n      productInfo: row,\n      showText: isPriceHidden ? '' : price,\n      forcedSkip: true,\n    });\n  };\n\n  const handleSetCheckedQty = (row: CustomFieldItems) => {\n    const cacheProductList: CustomFieldItems = paginationTableRef.current?.getCacheList() || [];\n\n    let qty = row.quantity;\n    if (cacheProductList.length > 0) {\n      const currentProduct = cacheProductList.find(\n        (item: CustomFieldItems) =>\n          item.node.variantId === row.variantId &&\n          item.node.productId === row.productId &&\n          item.node.id === row.id,\n      );\n\n      if (currentProduct && currentProduct.node) {\n        qty = currentProduct.node.quantity || qty;\n      }\n    }\n\n    return qty;\n  };\n\n  const columnItems: TableColumnItem<ProductInfoProps>[] = [\n    {\n      key: 'product',\n      title: b3Lang('purchasedProducts.product'),\n      render: (row: CustomFieldItems) => {\n        const { optionList, productsSearch, variantId } = row;\n        const currentVariants = productsSearch.variants || [];\n\n        const currentImage =\n          b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || row.imageUrl;\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={currentImage || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography variant=\"body1\" color=\"#212121\">\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.variantSku}\n              </Typography>\n              {optionList.length > 0 && (\n                <Box>\n                  {optionList.map((option: any) => (\n                    <Typography\n                      sx={{\n                        fontSize: '0.75rem',\n                        lineHeight: '1.5',\n                        color: '#455A64',\n                      }}\n                      key={option.id}\n                    >\n                      {`${option.display_name}: ${option.display_value}`}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n      isSortable: true,\n    },\n    {\n      key: 'price',\n      title: b3Lang('purchasedProducts.price'),\n      render: (row: CustomFieldItems) => {\n        const {\n          productsSearch: { variants },\n          variantId,\n          basePrice,\n        } = row;\n        let priceIncTax = Number(basePrice);\n        if (variants?.length) {\n          priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) || Number(basePrice);\n        }\n\n        const qty = handleSetCheckedQty(row);\n        const withTaxPrice = priceIncTax || Number(basePrice);\n        const price = withTaxPrice * Number(qty);\n\n        return (\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${showPrice(currencyFormat(price), row)}`}\n          </Typography>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'qty',\n      title: b3Lang('purchasedProducts.qty'),\n      render: (row) => {\n        const qty = handleSetCheckedQty(row);\n\n        return (\n          <StyledTextField\n            size=\"small\"\n            type=\"number\"\n            variant=\"filled\"\n            value={qty}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            onChange={(e) => {\n              handleUpdateProductQty(row.id, e.target.value);\n            }}\n          />\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'lastOrderedAt',\n      title: b3Lang('purchasedProducts.lastOrdered'),\n      render: (row: CustomFieldItems) => (\n        <Box>\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${displayFormat(Number(row.lastOrderedAt))}`}\n          </Typography>\n        </Box>\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n      isSortable: true,\n    },\n  ];\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <StyleQuickOrderTable>\n        <Typography\n          sx={{\n            fontSize: '24px',\n            height: '50px',\n          }}\n        >\n          {b3Lang('purchasedProducts.totalProducts', { total })}\n        </Typography>\n        <Box\n          sx={{\n            marginBottom: '5px',\n            display: 'flex',\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: isMobile ? '100%' : '40%',\n              mr: '20px',\n              display: 'flex',\n              justifyContent: isMobile ? 'space-between' : 'flex-start',\n            }}\n          >\n            <B3FilterSearch\n              h=\"48px\"\n              searchBGColor=\"rgba(0, 0, 0, 0.06)\"\n              handleChange={(e) => {\n                handleSearchProduct(e);\n              }}\n            />\n\n            {isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <B3FilterMore\n                  filterMoreInfo={[]}\n                  startPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.from'),\n                    defaultValue: search?.beginDateAt || '',\n                    pickerKey: 'start',\n                  }}\n                  endPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.to'),\n                    defaultValue: search?.endDateAt || '',\n                    pickerKey: 'end',\n                  }}\n                  isShowMore\n                  onChange={handleFilterChange}\n                />\n              </Box>\n            )}\n          </Box>\n\n          {!isMobile && (\n            <B3FilterPicker\n              handleChange={handlePickerChange}\n              xs={{\n                mt: 0,\n                height: '50px',\n              }}\n              startPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.from'),\n                defaultValue: distanceDay(90),\n                pickerKey: 'start',\n              }}\n              endPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.to'),\n                defaultValue: distanceDay(),\n                pickerKey: 'end',\n              }}\n              customWidth=\"58%\"\n            />\n          )}\n        </Box>\n\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={columnItems}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={getList}\n          searchParams={search}\n          isCustomRender={false}\n          showCheckbox\n          showSelectAllCheckbox\n          disableCheckbox={false}\n          hover\n          labelRowsPerPage={b3Lang('purchasedProducts.itemsPerPage')}\n          showBorder={false}\n          requestLoading={setIsRequestLoading}\n          getSelectCheckbox={getSelectCheckbox}\n          itemIsMobileSpacing={0}\n          isSelectOtherPageCheckbox\n          noDataText={b3Lang('purchasedProducts.noProductsFound')}\n          sortDirection={order}\n          orderBy={orderBy}\n          sortByFn={handleSetOrderBy}\n          renderItem={(row, _, checkBox) => (\n            <QuickOrderCard\n              item={row}\n              checkBox={checkBox}\n              handleUpdateProductQty={handleUpdateProductQty}\n            />\n          )}\n        />\n      </StyleQuickOrderTable>\n    </B3Spin>\n  );\n}\n\nexport default QuickOrderTable;\n","import { LangFormatFunction } from '@/lib/lang';\nimport { getCart } from '@/shared/service/bc/graphql/cart';\nimport { store } from '@/store';\nimport { OrderedProductType, ProductInfoType } from '@/types/gql/graphql';\nimport { snackbar } from '@/utils';\nimport { LineItem } from '@/utils/b3Product/b3Product';\n\ninterface ProductInfo extends OrderedProductType {\n  productsSearch: ProductInfoType;\n  quantity: number;\n}\n\ninterface CommonProducts extends ProductInfoType {\n  quantity: number;\n  variantId?: string;\n}\n\nexport interface CheckedProduct {\n  node: ProductInfo;\n}\n\nconst handleVerifyProduct = (products: CustomFieldItems, b3Lang: LangFormatFunction) => {\n  const {\n    variantId,\n    variants,\n    inventoryLevel,\n    inventoryTracking,\n    orderQuantityMaximum,\n    orderQuantityMinimum,\n    quantity,\n    sku,\n  } = products;\n\n  const isEnableProduct =\n    store.getState().global?.blockPendingQuoteNonPurchasableOOS?.isEnableProduct || false;\n\n  const isStock = inventoryTracking !== 'none';\n  let purchasingDisabled = false;\n  let stock = inventoryLevel;\n  let productSku = sku;\n\n  const currentVariant = variants.find(\n    (variant: CustomFieldItems) => Number(variant.variant_id) === Number(variantId),\n  );\n  if (currentVariant) {\n    purchasingDisabled = currentVariant.purchasing_disabled;\n    stock = inventoryTracking === 'variant' ? currentVariant.inventory_level : stock;\n    productSku = currentVariant.sku || sku;\n  }\n\n  if (purchasingDisabled && !isEnableProduct) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n        notPurchaseSku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'notPurchaseableSku',\n    };\n  }\n\n  if (isStock && Number(quantity) > Number(stock)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.insufficientStockSku', {\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'insufficientStockSku',\n    };\n  }\n\n  if (Number(orderQuantityMinimum) > 0 && Number(quantity) < orderQuantityMinimum) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n        minQuantity: orderQuantityMinimum,\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'minQuantity',\n    };\n  }\n\n  if (Number(orderQuantityMaximum) > 0 && Number(quantity) > Number(orderQuantityMaximum)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n        maxQuantity: orderQuantityMaximum,\n        sku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'maxQuantity',\n    };\n  }\n\n  return {\n    isVerify: true,\n  };\n};\n\nexport const getCartProductInfo = async () => {\n  const {\n    data: {\n      site: { cart },\n    },\n  } = await getCart();\n\n  if (cart) {\n    const { lineItems } = cart;\n    return Object.values(lineItems).reduce((pre, lineItems) => {\n      lineItems.forEach((item: LineItem) => {\n        pre.push(item);\n      });\n\n      return pre;\n    }, [] as LineItem[]);\n  }\n\n  return [];\n};\n\nexport const addCartProductToVerify = async (\n  checkedArr: Partial<CheckedProduct>[],\n  b3lang: LangFormatFunction,\n) => {\n  const cartProducts: LineItem[] = await getCartProductInfo();\n\n  const addCommonProducts = checkedArr.reduce((pre, checkItem) => {\n    const { node } = checkItem;\n\n    const num =\n      cartProducts.find(\n        (item: LineItem) =>\n          item.sku === node?.sku &&\n          Number(item?.variantEntityId || 0) === Number(node?.variantId || 0),\n      )?.quantity || 0;\n\n    pre.push({\n      ...node?.productsSearch,\n      variantId: node?.variantId,\n      quantity: (node?.quantity || 0) + num,\n    });\n\n    return pre;\n  }, [] as CommonProducts[]);\n\n  return addCommonProducts.every((product) => {\n    return handleVerifyProduct(product, b3lang).isVerify;\n  });\n};\n","import { Dispatch, SetStateAction, useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowDropDown } from '@mui/icons-material';\nimport { Box, Grid, Menu, MenuItem, SxProps, Typography, useMediaQuery } from '@mui/material';\nimport uniq from 'lodash-es/uniq';\nimport { v1 as uuid } from 'uuid';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL, PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useFeatureFlags, useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { currencyFormat, getProductPriceIncTaxOrExTaxBySetting, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  addQuoteDraftProducts,\n  calculateProductListPrice,\n  getValidOptionsList,\n  validProductQty,\n} from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { createOrUpdateExistingCart } from '@/utils/cartUtils';\nimport { validateProducts } from '@/utils/validateProducts';\n\nimport CreateShoppingList from '../../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../../OrderDetail/components/OrderShoppingList';\nimport { addCartProductToVerify, CheckedProduct } from '../utils';\n\ninterface NodeProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n  optionSelections: CustomFieldItems;\n}\n\ninterface ProductsProps {\n  maxQuantity?: number;\n  minQuantity?: number;\n  stock?: number;\n  isStock?: string;\n  node: NodeProps;\n  isValid?: boolean;\n}\n\ninterface QuickOrderFooterProps {\n  checkedArr: CheckedProduct[];\n  isAgenting: boolean;\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  isB2BUser: boolean;\n}\n\nfunction QuickOrderFooter(props: QuickOrderFooterProps) {\n  const { checkedArr, isAgenting, setIsRequestLoading, isB2BUser } = props;\n  const {\n    state: { productQuoteEnabled = false, shoppingListEnabled = false },\n  } = useContext(GlobalContext);\n  const b3Lang = useB3Lang();\n  const featureFlags = useFeatureFlags();\n\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n  const backendValidationEnabled =\n    featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend'];\n\n  const isShowCartAction = isB2BUser ? purchasabilityPermission : true;\n\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n  const [isMobile] = useMobile();\n  const ref = useRef<HTMLButtonElement | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSubTotal, setSelectedSubTotal] = useState(0.0);\n  const [openShoppingList, setOpenShoppingList] = useState(false);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState(false);\n  const [isShoppingListLoading, setIisShoppingListLoading] = useState(false);\n\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n\n  const navigate = useNavigate();\n\n  const containerStyle = isMobile\n    ? {\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n      }\n    : {\n        alignItems: 'center',\n      };\n\n  const handleOpenBtnList = () => {\n    if (checkedArr.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.error.selectOneItem'));\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  // Add selected to cart\n  const handleSetCartLineItems = (inventoryInfos: ProductsProps[]) => {\n    const lineItems: CustomFieldItems[] = [];\n\n    checkedArr.forEach((item: CheckedProduct) => {\n      const { node } = item;\n\n      const currentProduct: CustomFieldItems | undefined = inventoryInfos.find(\n        (inventory: CustomFieldItems) => Number(node.productId) === inventory.id,\n      );\n      if (currentProduct) {\n        const { variants }: CustomFieldItems = currentProduct;\n\n        if (variants.length > 0) {\n          const currentInventoryInfo: CustomFieldItems | undefined = variants.find(\n            (variant: CustomFieldItems) =>\n              node.variantSku === variant.sku &&\n              Number(node.variantId) === Number(variant.variant_id),\n          );\n\n          if (currentInventoryInfo) {\n            const { optionList, quantity } = node;\n\n            const options = optionList.map((option: CustomFieldItems) => ({\n              optionId: option.product_option_id,\n              optionValue: option.value,\n            }));\n\n            lineItems.push({\n              optionSelections: options,\n              allOptions: optionList,\n              productId: parseInt(currentInventoryInfo.product_id, 10) || 0,\n              quantity,\n              variantId: parseInt(currentInventoryInfo.variant_id, 10) || 0,\n            });\n          }\n        }\n      }\n    });\n\n    return lineItems;\n  };\n\n  const showAddToCartSuccessMessage = () => {\n    snackbar.success(b3Lang('purchasedProducts.footer.productsAdded'), {\n      action: {\n        label: b3Lang('purchasedProducts.footer.viewCart'),\n        onClick: () => {\n          if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n            window.location.href = CART_URL;\n          }\n        },\n      },\n    });\n  };\n\n  const handleFrontedAddSelectedToCart = async (productIds: number[]) => {\n    try {\n      const isPassVerify = await addCartProductToVerify(checkedArr, b3Lang);\n\n      if (!isPassVerify) return;\n\n      const companyId = companyInfoId;\n\n      const { productsSearch: getInventoryInfos } = await searchProducts({\n        productIds,\n        companyId,\n        customerGroupId,\n      });\n\n      const lineItems = handleSetCartLineItems(getInventoryInfos || []);\n\n      const res = await createOrUpdateExistingCart(lineItems);\n\n      if (res && !res.errors) {\n        showAddToCartSuccessMessage();\n      } else if (res && res.errors) {\n        snackbar.error(res.errors[0].message);\n      } else {\n        snackbar.error('Error has occurred');\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  const handleBackendAddSelectedToCart = async () => {\n    try {\n      const lineItems = checkedArr.map(({ node }) => ({\n        productId: Number(node.productId),\n        variantId: Number(node.variantId),\n        quantity: node.quantity,\n        optionSelections: node.optionSelections,\n        allOptions: node.optionList,\n      }));\n      await createOrUpdateExistingCart(lineItems);\n      showAddToCartSuccessMessage();\n    } catch (e) {\n      if (e instanceof Error) {\n        snackbar.error(e.message);\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  const handleAddSelectedToCart = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n\n    const productIds = uniq(checkedArr.map(({ node }) => Number(node.productId)));\n\n    if (productIds.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.footer.selectOneItemToAdd'));\n      return;\n    }\n    if (backendValidationEnabled) {\n      handleBackendAddSelectedToCart();\n    } else {\n      handleFrontedAddSelectedToCart(productIds);\n    }\n  };\n\n  // Add selected to quote\n  const getOptionsList = (options: CustomFieldItems) => {\n    if (options?.length === 0) return [];\n\n    const option = options.map(\n      ({\n        product_option_id: optionId,\n        value,\n      }: {\n        product_option_id: number | string;\n        value: string | number;\n      }) => ({\n        optionId: `attribute[${optionId}]`,\n        optionValue: value,\n      }),\n    );\n\n    return option;\n  };\n\n  const addToQuote = async (products: CustomFieldItems[]) => {\n    if (featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend']) {\n      const validatedProducts = await validateProducts(products, b3Lang);\n\n      addQuoteDraftProducts(validatedProducts);\n\n      return validatedProducts.length > 0;\n    }\n\n    addQuoteDraftProducts(products);\n\n    return true;\n  };\n\n  const handleAddSelectedToQuote = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productsWithSku = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return variantSku !== '' && variantSku !== null && variantSku !== undefined;\n      });\n\n      const noSkuProducts = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return !variantSku;\n      });\n      if (noSkuProducts.length > 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.cantAddProductsNoSku'));\n      }\n      if (noSkuProducts.length === checkedArr.length) return;\n\n      const productIds: number[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const { productsSearch } = await searchProducts({\n        productIds,\n        companyId: companyInfoId,\n        customerGroupId,\n        currencyCode,\n      });\n\n      const newProductInfo: CustomFieldItems = conversionProductsList(productsSearch);\n      let errorMessage = '';\n      let isFondVariant = true;\n\n      const newProducts: CustomFieldItems[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const {\n          node: {\n            basePrice,\n            optionList,\n            variantSku,\n            productId,\n            productName,\n            quantity,\n            variantId,\n            tax,\n          },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const currentProductSearch = newProductInfo.find(\n          (product: CustomFieldItems) => Number(product.id) === Number(productId),\n        );\n\n        const variantItem = currentProductSearch?.variants.find(\n          (item: CustomFieldItems) => item.sku === variantSku,\n        );\n\n        if (!variantItem) {\n          errorMessage = b3Lang('purchasedProducts.footer.notFoundSku', {\n            sku: variantSku as string,\n          });\n          isFondVariant = false;\n        }\n\n        const quoteListitem = {\n          node: {\n            id: uuid(),\n            variantSku: variantItem?.sku || variantSku,\n            variantId,\n            productsSearch: {\n              ...currentProductSearch,\n              newSelectOptionList: optionsList,\n              variantId,\n            },\n            primaryImage: variantItem?.image_url || PRODUCT_DEFAULT_IMAGE,\n            productName,\n            quantity: Number(quantity) || 1,\n            optionList: JSON.stringify(optionsList),\n            productId,\n            basePrice,\n            tax,\n          },\n        };\n\n        newProducts.push(quoteListitem);\n      });\n\n      const isValidQty = validProductQty(newProducts);\n\n      if (!isFondVariant) {\n        snackbar.error(errorMessage);\n\n        return;\n      }\n\n      if (isValidQty) {\n        await calculateProductListPrice(newProducts, '2');\n\n        const success = await addToQuote(newProducts);\n        if (success) {\n          snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToQuote'), {\n            action: {\n              label: b3Lang('purchasedProducts.footer.viewQuote'),\n              onClick: () => {\n                navigate('/quoteDraft');\n              },\n            },\n          });\n        }\n      } else {\n        snackbar.error(b3Lang('purchasedProducts.footer.productsLimit'), {\n          action: {\n            label: b3Lang('purchasedProducts.footer.viewQuote'),\n            onClick: () => {\n              navigate('/quoteDraft');\n            },\n          },\n        });\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to shopping list\n  const gotoShoppingDetail = (id: string | number) => {\n    navigate(`/shoppingList/${id}`);\n  };\n\n  const handleShoppingClose = (isTrue?: boolean) => {\n    if (isTrue) {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    } else {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    }\n  };\n\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleClose();\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  const handleAddSelectedToShoppingList = async (shoppingListId: string | number) => {\n    setIisShoppingListLoading(true);\n    try {\n      const productIds: number[] = [];\n      checkedArr.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const items: CustomFieldItems = [];\n\n      checkedArr.forEach((product: CheckedProduct) => {\n        const {\n          node: { optionList, productId, quantity, variantId, productsSearch },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const newOptionLists = getValidOptionsList(optionsList, productsSearch);\n        items.push({\n          productId: Number(productId),\n          variantId: Number(variantId),\n          quantity: Number(quantity),\n          optionList: newOptionLists,\n        });\n      });\n\n      const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n      await addToShoppingList({\n        shoppingListId: Number(shoppingListId),\n        items,\n      });\n\n      snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToShoppingList'), {\n        action: {\n          label: b3Lang('pdp.notification.viewShoppingList'),\n          onClick: () => gotoShoppingDetail(shoppingListId),\n        },\n      });\n      handleShoppingClose(true);\n    } catch (err) {\n      b2bLogger.error(err);\n    } finally {\n      setIisShoppingListLoading(false);\n    }\n  };\n\n  const buttonList = [\n    {\n      name: b3Lang('purchasedProducts.footer.addToCart'),\n      key: 'add-selected-to-cart',\n      handleClick: handleAddSelectedToCart,\n      isDisabled: !isShowCartAction,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addToQuote'),\n      key: 'add-selected-to-quote',\n      handleClick: handleAddSelectedToQuote,\n      isDisabled: !productQuoteEnabled,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addSelectedProductsToShoppingList'),\n      key: 'add-selected-to-shoppingList',\n      handleClick: handleCreateShoppingClick,\n      isDisabled: !shoppingListEnabled,\n    },\n  ];\n\n  useEffect(() => {\n    if (checkedArr.length > 0) {\n      let total = 0.0;\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const {\n          node: {\n            variantId,\n            productsSearch: { variants },\n            quantity,\n            basePrice,\n          },\n        } = item;\n\n        if (variants?.length) {\n          const priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) ||\n            Number(basePrice || 0);\n          total += priceIncTax * Number(quantity);\n        } else {\n          total += Number(basePrice || 0) * Number(quantity);\n        }\n      });\n\n      setSelectedSubTotal((1000 * total) / 1000);\n    } else {\n      setSelectedSubTotal(0.0);\n    }\n  }, [checkedArr]);\n\n  let gridBarStyles: SxProps = {\n    display: isMobile ? 'initial' : 'flex',\n    flexBasis: '100%',\n  };\n\n  if (isDesktopLimit) {\n    gridBarStyles = {\n      display: 'flex',\n      flexGrow: 1,\n      maxWidth: 1775,\n      margin: 'auto',\n    };\n  }\n\n  return (\n    <>\n      {isShowCartAction || productQuoteEnabled || shoppingListEnabled ? (\n        <Grid\n          sx={{\n            position: 'fixed',\n            bottom: isMobile && isAgenting ? '52px' : 0,\n            left: 0,\n            backgroundColor: '#fff',\n            width: '100%',\n            padding: isMobile ? '0 0 1rem 0' : '16px 0 16px',\n            height: isMobile ? '8rem' : 'auto',\n            marginLeft: 0,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            zIndex: '1000',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid item={isMobile} sx={gridBarStyles}>\n            <Box\n              sx={{\n                width: 263,\n                display: isMobile ? 'none' : 'block',\n              }}\n            />\n            <Box\n              sx={{\n                flex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: isMobile ? 0 : '50px',\n                paddingRight: isMobile ? 0 : '80px',\n              }}\n            >\n              <Box\n                sx={{\n                  width: isMobile ? '100%' : 'calc(66.6667% + 32px)',\n                  display: 'flex',\n                  zIndex: '999',\n                  justifyContent: 'space-between',\n                  ...containerStyle,\n                }}\n              >\n                <Typography\n                  sx={{\n                    color: '#000000',\n                    fontSize: '16px',\n                    fontWeight: '400',\n                  }}\n                >\n                  {b3Lang('purchasedProducts.footer.selectedProducts', {\n                    quantity: checkedArr.length,\n                  })}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: isMobile ? 'wrap' : 'nowrap',\n                    width: isMobile ? '100%' : 'auto',\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    sx={{\n                      fontSize: '16px',\n                      fontWeight: '700',\n                      color: '#000000',\n                    }}\n                  >\n                    {b3Lang('purchasedProducts.footer.subtotal', {\n                      subtotal: currencyFormat(selectedSubTotal),\n                    })}\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginTop: isMobile ? '0.5rem' : 0,\n                      marginLeft: isMobile ? 0 : '20px',\n                      width: isMobile ? '100%' : 'auto',\n                    }}\n                  >\n                    <CustomButton\n                      variant=\"contained\"\n                      ref={ref}\n                      onClick={handleOpenBtnList}\n                      sx={{\n                        marginRight: isMobile ? '1rem' : 0,\n                        width: isMobile ? '100%' : 'auto',\n                      }}\n                      endIcon={<ArrowDropDown />}\n                    >\n                      {b3Lang('purchasedProducts.footer.addSelectedTo')}\n                    </CustomButton>\n\n                    <Menu\n                      id=\"basic-menu\"\n                      anchorEl={ref.current}\n                      open={isOpen}\n                      onClose={handleClose}\n                      MenuListProps={{\n                        'aria-labelledby': 'basic-button',\n                      }}\n                    >\n                      {buttonList.length > 0 &&\n                        buttonList.map((button) => {\n                          if (button.isDisabled) return null;\n\n                          return (\n                            <MenuItem\n                              key={button.key}\n                              onClick={() => {\n                                button.handleClick();\n                              }}\n                            >\n                              {button.name}\n                            </MenuItem>\n                          );\n                        })}\n                    </Menu>\n                  </Box>\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  width: '33.3333%',\n                  display: isMobile ? 'none' : 'block',\n                }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      ) : null}\n\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('purchasedProducts.footer.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleAddSelectedToShoppingList}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isShoppingListLoading}\n        setLoading={setIisShoppingListLoading}\n      />\n\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default QuickOrderFooter;\n","import { KeyboardEventHandler, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice, useFeatureFlags } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getVariantInfoBySkus } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { getQuickAddRowFields } from '@/utils/b3Product/shared/config';\nimport { validateProducts } from '@/utils/validateProducts';\n\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\nimport { getCartProductInfo } from '../utils';\n\ninterface AddToListContentProps {\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n}\n\nconst LEVEL = 3;\n\nconst parseOptionList = (options: string[] | undefined): ShoppingListAddProductOption[] => {\n  return (options || []).reduce((arr: ShoppingListAddProductOption[], optionStr: string) => {\n    try {\n      const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n      arr.push({\n        optionId: `attribute[${option.option_id}]`,\n        optionValue: `${option.id}`,\n      });\n      return arr;\n    } catch (error) {\n      return arr;\n    }\n  }, []);\n};\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const { quickAddToList } = props;\n  const buttonText = b3Lang('purchasedProducts.quickOrderPad.addProductsToCart');\n  const featureFlags = useFeatureFlags();\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const [rows, setRows] = useState(LEVEL);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n  }, [b3Lang, rows]);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleAddRowsClick = () => {\n    setRows(rows + LEVEL);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = async (\n    variantInfoList: CustomFieldItems,\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const notFoundSku: string[] = [];\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const passSku: string[] = [];\n    const notStockSku: {\n      sku: string;\n      stock: number;\n    }[] = [];\n    const orderLimitSku: {\n      sku: string;\n      min: number;\n      max: number;\n    }[] = [];\n\n    const cartProducts = await getCartProductInfo();\n\n    skus.forEach((sku) => {\n      const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n        (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n      );\n\n      if (!variantInfo) {\n        notFoundSku.push(sku);\n        return;\n      }\n\n      const {\n        productId,\n        variantId,\n        option: options,\n        purchasingDisabled = '1',\n        stock,\n        isStock,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n      } = variantInfo;\n\n      const num =\n        cartProducts.find(\n          (item) =>\n            item.sku === variantSku &&\n            Number(item?.variantEntityId || 0) === Number(variantId || 0),\n        )?.quantity || 0;\n\n      const quantity = (skuValue[sku] as number) || 0;\n\n      const allQuantity = (skuValue[sku] as number) + num || 0;\n\n      if (purchasingDisabled === '1') {\n        notPurchaseSku.push(sku);\n        return;\n      }\n\n      if (isStock === '1' && allQuantity > Number(stock)) {\n        notStockSku.push({\n          sku,\n          stock: Number(stock),\n        });\n\n        return;\n      }\n\n      if (\n        maxQuantity !== 0 &&\n        minQuantity !== 0 &&\n        allQuantity > 0 &&\n        (allQuantity > maxQuantity || allQuantity < minQuantity)\n      ) {\n        orderLimitSku.push({\n          sku,\n          min: allQuantity < minQuantity ? minQuantity : 0,\n          max: allQuantity > maxQuantity ? maxQuantity : 0,\n        });\n\n        return;\n      }\n\n      const optionList = parseOptionList(options);\n\n      passSku.push(sku);\n\n      productItems.push({\n        ...variantInfo,\n        newSelectOptionList: optionList,\n        productId: parseInt(productId, 10) || 0,\n        quantity,\n        variantId: parseInt(variantId, 10) || 0,\n      });\n    });\n\n    return {\n      notFoundSku,\n      notPurchaseSku,\n      notStockSku,\n      productItems,\n      passSku,\n      orderLimitSku,\n    };\n  };\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySkus(skus);\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleFrontendValidation = async (\n    value: CustomFieldItems,\n    variantInfoList: CustomFieldItems[],\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const { notFoundSku, notPurchaseSku, productItems, passSku, notStockSku, orderLimitSku } =\n      await getProductItems(variantInfoList, skuValue, skus);\n\n    if (notFoundSku.length > 0) {\n      showErrors(value, notFoundSku, 'sku', '');\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n          notFoundSku: notFoundSku.join(','),\n        }),\n      );\n    }\n\n    if (notPurchaseSku.length > 0) {\n      showErrors(value, notPurchaseSku, 'sku', '');\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.notPurchaseableSku', {\n          notPurchaseSku: notPurchaseSku.join(','),\n        }),\n      );\n    }\n\n    if (notStockSku.length > 0) {\n      const stockSku = notStockSku.map((item) => item.sku);\n\n      notStockSku.forEach((item) => {\n        const { sku, stock } = item;\n\n        showErrors(value, [sku], 'qty', `${stock} in stock`);\n      });\n\n      snackbar.error(\n        b3Lang('purchasedProducts.quickAdd.insufficientStockSku', {\n          stockSku: stockSku.join(','),\n        }),\n      );\n    }\n\n    if (orderLimitSku.length > 0) {\n      orderLimitSku.forEach((item) => {\n        const { min, max, sku } = item;\n\n        const type = min === 0 ? 'Max' : 'Min';\n        const limit = min === 0 ? max : min;\n        showErrors(value, [sku], 'qty', `${type} is ${limit}`);\n\n        const typeText = min === 0 ? 'maximum' : 'minimum';\n        snackbar.error(\n          b3Lang('purchasedProducts.quickAdd.purchaseQuantityLimitMessage', {\n            typeText,\n            limit,\n            sku,\n          }),\n        );\n      });\n    }\n\n    return { productItems, passSku };\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n        let productItems: CustomFieldItems[] = [];\n        let passSku: string[] = [];\n\n        if (featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend']) {\n          if (variantInfoList.length <= 0) {\n            snackbar.error(\n              b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n                notFoundSku: skus.join(','),\n              }),\n            );\n            return;\n          }\n          // Map catalog products to format expected by backend validation\n          const productsToValidate = variantInfoList.map((catalogProduct: CustomFieldItems) => {\n            const matchingSkuFromInput = Object.keys(skuValue).find(\n              (inputSku) => inputSku.toUpperCase() === catalogProduct.variantSku.toUpperCase(),\n            );\n            const requestedQuantity = matchingSkuFromInput\n              ? (skuValue[matchingSkuFromInput] as number)\n              : 0;\n            return {\n              node: {\n                productId: parseInt(catalogProduct.productId, 10) || 0,\n                quantity: requestedQuantity,\n                productsSearch: {\n                  variantId: parseInt(catalogProduct.variantId, 10) || 0,\n                  newSelectOptionList: parseOptionList(catalogProduct.option),\n                },\n              },\n            };\n          });\n\n          const backendValidatedProducts = await validateProducts(productsToValidate, b3Lang);\n\n          productItems = backendValidatedProducts.map(\n            ({ node: validatedProduct }: CustomFieldItems) => {\n              const originalProductInfo = variantInfoList.find(\n                (catalogProduct: CustomFieldItems) =>\n                  parseInt(catalogProduct.productId, 10) === validatedProduct.productId,\n              );\n              return {\n                ...originalProductInfo,\n                newSelectOptionList: validatedProduct.productsSearch.newSelectOptionList,\n                productId: validatedProduct.productId,\n                quantity: validatedProduct.quantity,\n                variantId: validatedProduct.productsSearch.variantId,\n              };\n            },\n          );\n\n          passSku = backendValidatedProducts\n            .map(({ node: validatedProduct }: CustomFieldItems) => {\n              const originalProductInfo = variantInfoList.find(\n                (catalogProduct: CustomFieldItems) =>\n                  parseInt(catalogProduct.productId, 10) === validatedProduct.productId,\n              );\n              return originalProductInfo?.variantSku || '';\n            })\n            .filter(Boolean);\n        } else {\n          ({ productItems, passSku } = await handleFrontendValidation(\n            value,\n            variantInfoList,\n            skuValue,\n            skus,\n          ));\n        }\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          snackbar.error(e.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('purchasedProducts.quickAdd.title')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('purchasedProducts.quickAdd.showMoreRowsButton')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n","import {\n  ChangeEvent,\n  Dispatch,\n  KeyboardEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport styled from '@emotion/styled';\nimport { Box, Divider, TextField, Typography } from '@mui/material';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { AllOptionProps, ShoppingListProductItem, SimpleObject, Variant } from '@/types';\nimport { currencyFormat, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { calculateProductListPrice, getBCPrice } from '@/utils/b3Product/b3Product';\nimport {\n  Base64,\n  getOptionRequestData,\n  getProductOptionsFields,\n} from '@/utils/b3Product/shared/config';\n\nconst Flex = styled('div')({\n  display: 'flex',\n  wordBreak: 'break-word',\n  gap: '8px',\n  flexWrap: 'wrap',\n  padding: '12px 0 12px',\n  '&:first-of-type': {\n    marginTop: '12px',\n  },\n});\n\ninterface FlexItemProps {\n  padding?: string;\n}\n\nconst FlexItem = styled('div')(({ padding }: FlexItemProps) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexShrink: 1,\n  alignItems: 'flex-start',\n  width: '100%',\n  padding: padding || '0 0 0 16px',\n}));\n\nconst ProductImage = styled('img')(() => ({\n  width: '60px',\n  height: '60px',\n  borderRadius: '4px',\n  marginTop: '12px',\n  flexShrink: 0,\n}));\n\nconst ProductOptionText = styled('div')(() => ({\n  fontSize: '0.75rem',\n  lineHeight: '1.5',\n  color: '#455A64',\n}));\n\nconst StyleTextField = styled(TextField)(() => ({\n  '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n    marginTop: '-8px',\n    marginBottom: '8px',\n  },\n}));\n\ninterface ChooseOptionsDialogProps {\n  isOpen: boolean;\n  product?: ShoppingListProductItem;\n  onCancel: () => void;\n  onConfirm: (products: CustomFieldItems[]) => void;\n  isLoading: boolean;\n  setIsLoading: Dispatch<SetStateAction<boolean>>;\n}\n\ninterface ChooseOptionsProductProps extends ShoppingListProductItem {\n  newSelectOptionList: {\n    optionId: string;\n    optionValue: unknown;\n  }[];\n  productId: number;\n  quantity: number;\n  variantId: number;\n  additionalProducts: CustomFieldItems;\n}\n\nexport default function ChooseOptionsDialog(props: ChooseOptionsDialogProps) {\n  const { isOpen, onCancel, onConfirm, product, isLoading, setIsLoading } = props;\n  const b3Lang = useB3Lang();\n\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const [quantity, setQuantity] = useState<number | string>(1);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [variantInfo, setVariantInfo] = useState<Partial<Variant> | null>(null);\n  const [variantSku, setVariantSku] = useState('');\n  const [currentImage, setCurrentImage] = useState<string>(product?.imageUrl || '');\n  const [additionalProducts, setAdditionalProducts] = useState<CustomFieldItems>({});\n  const [productPriceChangeOptions, setProductPriceChangeOptions] = useState<\n    Partial<AllOptionProps>[]\n  >([]);\n  const [newPrice, setNewPrice] = useState<number>(0);\n  const [chooseOptionsProduct, setChooseOptionsProduct] = useState<ChooseOptionsProductProps[]>([]);\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  const isShowPrice = Boolean(product?.isPriceHidden);\n\n  const setChooseOptionsForm = async (product: ShoppingListProductItem) => {\n    try {\n      setIsLoading(true);\n\n      const modifiers =\n        product?.modifiers?.filter(\n          (modifier) =>\n            modifier.type === 'product_list_with_images' || modifier.type === 'product_list',\n        ) || [];\n      const productImages: SimpleObject = {};\n      const additionalProductsParams: CustomFieldItems = {};\n      if (modifiers.length > 0) {\n        const productIds = modifiers.reduce((arr: number[], modifier) => {\n          const { option_values: optionValues } = modifier;\n          optionValues.forEach((option) => {\n            if (option?.value_data?.product_id) {\n              arr.push(option.value_data.product_id);\n            }\n          });\n          return arr;\n        }, []);\n\n        if (productIds.length > 0) {\n          const companyId = companyInfoId || salesRepCompanyId;\n          const { productsSearch } = await searchProducts({\n            productIds,\n            companyId,\n            customerGroupId,\n          });\n\n          productsSearch.forEach((product: CustomFieldItems) => {\n            productImages[product.id] = product.imageUrl;\n            additionalProductsParams[product.id] = product;\n          });\n        }\n      }\n\n      setAdditionalProducts(additionalProductsParams);\n\n      setQuantity(product.quantity);\n      if (product.variants?.length === 1 && product.variants[0]) {\n        setVariantInfo(product.variants[0]);\n      }\n\n      const productOptionsFields = getProductOptionsFields(product, productImages);\n      setFormFields([...productOptionsFields]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getProductPriceOptions = (product: ShoppingListProductItem) => {\n    const newProductPriceChangeOptionLists: Partial<AllOptionProps>[] = [];\n    product.allOptions?.forEach((item) => {\n      if (\n        item.type === 'product_list_with_images' ||\n        item.type === 'product_list' ||\n        item.type === 'checkbox' ||\n        item.type === 'rectangles' ||\n        item.type === 'swatch' ||\n        item.type === 'radio_buttons' ||\n        item.type === 'dropdown'\n      ) {\n        newProductPriceChangeOptionLists.push(item);\n      }\n    });\n\n    setProductPriceChangeOptions(newProductPriceChangeOptionLists);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setChooseOptionsForm(product);\n      setChooseOptionsProduct([]);\n      setNewPrice(0);\n      if (product?.allOptions?.length) {\n        getProductPriceOptions(product);\n      }\n    } else {\n      setQuantity(1);\n      setFormFields([]);\n    }\n    // disabling as we don't need dispatchers here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [product]);\n\n  const getProductPrice = (product: ShoppingListProductItem) => {\n    const { variants = [] } = product;\n\n    let priceNumber = 0;\n    if (variantSku) {\n      const variantCalculatePrice = variants.find(\n        (variant) => variant.sku === variantSku,\n      )?.bc_calculated_price;\n      priceNumber =\n        (showInclusiveTaxPrice\n          ? variantCalculatePrice?.tax_inclusive\n          : variantCalculatePrice?.tax_exclusive) || 0;\n    } else {\n      const variantCalculatePrice = variants[0]?.bc_calculated_price;\n      priceNumber =\n        parseFloat(\n          (showInclusiveTaxPrice\n            ? variantCalculatePrice?.tax_inclusive\n            : variantCalculatePrice?.tax_exclusive\n          )?.toString(),\n        ) || 0;\n    }\n\n    return priceNumber;\n  };\n\n  const handleProductQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value || parseInt(e.target.value, 10) > 0) {\n      setQuantity(e.target.value);\n    }\n  };\n\n  const handleNumberInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (['KeyE', 'Equal', 'Minus'].indexOf(event.code) > -1) {\n      event.preventDefault();\n    }\n  };\n\n  const handleNumberInputBlur = () => {\n    if (!quantity) {\n      setQuantity(1);\n    }\n\n    if (Number(quantity) > 1000000) {\n      setQuantity(1000000);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const formValues = watch();\n  const cache = useRef(formValues);\n\n  const getProductVariantId = useCallback(\n    async (value: CustomFieldItems, changeName = '') => {\n      const isVariantOptionChange =\n        formFields.find((item: CustomFieldItems) => item.name === changeName)?.isVariantOption ||\n        false;\n\n      if (!isVariantOptionChange || !product || !changeName) {\n        return;\n      }\n\n      const { variants = [] } = product || {};\n\n      const variantInfo =\n        variants.find((variant) => {\n          const { option_values: optionValues = [] } = variant;\n\n          const isSelectVariant = optionValues.reduce((isSelect, option) => {\n            if (\n              value[Base64.encode(`attribute[${option.option_id}]`)].toString() !==\n              (option.id || '').toString()\n            ) {\n              return false;\n            }\n            return isSelect;\n          }, true);\n\n          return isSelectVariant;\n        }) || null;\n\n      setVariantSku(variantInfo ? variantInfo.sku : '');\n      setVariantInfo(variantInfo);\n\n      if (variantInfo && (variantInfo.sku || variantInfo.variant_id)) {\n        const currentVariant = variants.find(\n          (variant) =>\n            variant.sku === variantInfo.sku || variant.variant_id === variantInfo.variant_id,\n        );\n\n        setCurrentImage(currentVariant?.image_url || product.imageUrl || '');\n      }\n    },\n    [formFields, product],\n  );\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      getProductVariantId(value, name);\n    });\n\n    if (formFields[0]) {\n      const defaultValues: SimpleObject = formFields.reduce((value: SimpleObject, fields) => {\n        const formFieldValue = value;\n        formFieldValue[fields.name] = fields.default;\n        setValue(fields.name, fields.default);\n        return value;\n      }, {});\n      getProductVariantId(defaultValues, formFields[0].name);\n    }\n\n    return () => subscription.unsubscribe();\n    // disabling as we don't need dispatchers or subscribers in the dep array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formFields, getProductVariantId]);\n\n  const validateQuantityNumber = useCallback(() => {\n    const { purchasing_disabled: purchasingDisabled = true } = variantInfo || {};\n\n    if (purchasingDisabled && !isEnableProduct) {\n      snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n      return false;\n    }\n\n    return true;\n  }, [b3Lang, isEnableProduct, variantInfo]);\n\n  const getOptionList = useCallback(\n    (value: FieldValues) => {\n      const optionsData = getOptionRequestData(formFields, {}, value);\n      return Object.keys(optionsData).map((optionId) => ({\n        optionId,\n        optionValue: optionsData[optionId]?.toString(),\n      }));\n    },\n    [formFields],\n  );\n\n  useEffect(() => {\n    if (cache?.current && isEqual(cache?.current, formValues)) {\n      return;\n    }\n\n    cache.current = formValues;\n    if (Object.keys(formValues).length && formFields.length && productPriceChangeOptions.length) {\n      const optionList = getOptionList(formValues);\n      const { variant_id: variantId = '' } = variantInfo || {};\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      const newChooseOptionsProduct = [\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ];\n\n      if (chooseOptionsProduct[0]) {\n        let optionChangeFlag = false;\n        const { newSelectOptionList } = chooseOptionsProduct[0];\n        newSelectOptionList.forEach((option) => {\n          const findAttributeId = productPriceChangeOptions.findIndex((item) =>\n            option.optionId.includes(String(item.id)),\n          );\n          optionList.forEach((newOption) => {\n            if (\n              option.optionId === newOption.optionId &&\n              option.optionValue !== newOption.optionValue &&\n              findAttributeId !== -1\n            ) {\n              optionChangeFlag = true;\n            }\n          });\n        });\n        if (optionChangeFlag) {\n          setChooseOptionsProduct(newChooseOptionsProduct);\n        }\n      } else {\n        setChooseOptionsProduct(newChooseOptionsProduct);\n      }\n    }\n  }, [\n    additionalProducts,\n    chooseOptionsProduct,\n    formFields.length,\n    formValues,\n    getOptionList,\n    product,\n    productPriceChangeOptions,\n    quantity,\n    validateQuantityNumber,\n    variantInfo,\n  ]);\n\n  useEffect(() => {\n    const getNewProductPrice = async () => {\n      try {\n        if (chooseOptionsProduct.length) {\n          setIsRequestLoading(true);\n          const products = await calculateProductListPrice(chooseOptionsProduct);\n\n          if (products[0]) {\n            const { basePrice, taxPrice } = products[0];\n            const price = getBCPrice(Number(basePrice), Number(taxPrice));\n            setNewPrice(price);\n          }\n        }\n      } catch (err) {\n        b2bLogger.error(err);\n      } finally {\n        setIsRequestLoading(false);\n      }\n    };\n\n    getNewProductPrice();\n  }, [chooseOptionsProduct]);\n\n  const handleConfirmClicked = () => {\n    handleSubmit((value) => {\n      const optionList = getOptionList(value);\n\n      const { variant_id: variantId = '' } = variantInfo || {};\n\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      onConfirm([\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ]);\n    })();\n  };\n\n  const handleCancelClicked = () => {\n    setQuantity(1);\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n    // disabling as reset does not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <B3Dialog\n      isOpen={isOpen}\n      rightSizeBtn={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n      handleLeftClick={handleCancelClicked}\n      handRightClick={handleConfirmClicked}\n      title={b3Lang('shoppingList.chooseOptionsDialog.chooseOptions')}\n      loading={isLoading || isRequestLoading}\n    >\n      <B3Spin isSpinning={isLoading}>\n        {product && (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <ProductImage src={currentImage || product.imageUrl || PRODUCT_DEFAULT_IMAGE} />\n                <Flex>\n                  <FlexItem padding=\"0\">\n                    <Box\n                      sx={{\n                        marginLeft: '16px',\n                      }}\n                    >\n                      <Typography variant=\"body1\" color=\"#212121\">\n                        {product.name}\n                      </Typography>\n                      <Typography variant=\"body1\" color=\"#616161\">\n                        {variantSku || product.sku}\n                      </Typography>\n                      {(product.product_options || []).map((option) => (\n                        <ProductOptionText\n                          key={`${option.option_id}`}\n                        >{`${option.display_name}: ${option.display_value}`}</ProductOptionText>\n                      ))}\n                    </Box>\n                  </FlexItem>\n\n                  <FlexItem>\n                    <span>{b3Lang('shoppingList.chooseOptionsDialog.price')}</span>\n                    {!isShowPrice\n                      ? ''\n                      : currencyFormat(newPrice * Number(quantity) || getProductPrice(product))}\n                  </FlexItem>\n\n                  <FlexItem>\n                    <StyleTextField\n                      type=\"number\"\n                      variant=\"filled\"\n                      label={b3Lang('shoppingList.chooseOptionsDialog.quantity')}\n                      value={quantity}\n                      onChange={handleProductQuantityChange}\n                      onKeyDown={handleNumberInputKeyDown}\n                      onBlur={handleNumberInputBlur}\n                      size=\"small\"\n                      sx={{\n                        width: '60%',\n                        maxWidth: '100px',\n                      }}\n                    />\n                  </FlexItem>\n                </Flex>\n              </Box>\n\n              <Divider\n                sx={{\n                  margin: '16px 0 24px',\n                }}\n              />\n\n              <B3CustomForm\n                formFields={formFields}\n                errors={errors}\n                control={control}\n                getValues={getValues}\n                setValue={setValue}\n              />\n            </Box>\n          </Box>\n        )}\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useCallback, useContext } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport { B3ProductList } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { ShoppingListDetailsContext } from '@/pages/ShoppingListDetails/context/ShoppingListDetailsContext';\nimport { useAppSelector } from '@/store';\nimport { ShoppingListProductItem } from '@/types';\nimport { snackbar } from '@/utils';\n\ninterface ProductTableActionProps {\n  product: ShoppingListProductItem;\n  onAddToListClick: (id: number) => void;\n  onChooseOptionsClick: (id: number) => void;\n  addButtonText: string;\n}\n\nfunction ProductTableAction(props: ProductTableActionProps) {\n  const {\n    product: { id, allOptions: productOptions },\n    onAddToListClick,\n    onChooseOptionsClick,\n    addButtonText,\n  } = props;\n\n  const {\n    state: { isLoading = false },\n  } = useContext(ShoppingListDetailsContext);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  return productOptions && productOptions.length > 0 ? (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onChooseOptionsClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {b3Lang('global.searchProduct.chooseOptionsButton')}\n    </CustomButton>\n  ) : (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onAddToListClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {addButtonText}\n    </CustomButton>\n  );\n}\n\ninterface ProductListDialogProps {\n  isLoading: boolean;\n  isOpen: boolean;\n  searchText: string;\n  productList: ShoppingListProductItem[];\n  onCancel: () => void;\n  onSearchTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n  onProductQuantityChange: (id: number, newQuantity: number) => void;\n  onAddToListClick: (products: CustomFieldItems[]) => void;\n  onChooseOptionsClick: (id: number) => void;\n}\n\nconst ProductTable = B3ProductList<ShoppingListProductItem>;\n\nexport default function ProductListDialog(props: ProductListDialogProps) {\n  const b3Lang = useB3Lang();\n\n  const {\n    isOpen,\n    onCancel,\n    searchText,\n    productList,\n    onSearchTextChange,\n    onSearch,\n    onProductQuantityChange,\n    onAddToListClick,\n    onChooseOptionsClick,\n    isLoading,\n  } = props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const [isMobile] = useMobile();\n\n  const handleCancelClicked = () => {\n    onCancel();\n  };\n\n  const handleSearchKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  const validateQuantityNumber = useCallback(\n    (product: ShoppingListProductItem) => {\n      const { variants = [] } = product || {};\n      const { purchasing_disabled: purchasingDisabled = true } = variants[0] || {};\n\n      if (purchasingDisabled && !isEnableProduct) {\n        snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n        return false;\n      }\n\n      return true;\n    },\n    [b3Lang, isEnableProduct],\n  );\n\n  const handleAddToList = (id: number) => {\n    const product = productList.find((product) => product.id === id);\n\n    if (product && validateQuantityNumber(product || {})) {\n      let variantId: number | string = product.variantId || 0;\n\n      if (!product.variantId && product.variants?.[0]) {\n        variantId = product.variants[0].variant_id;\n      }\n\n      onAddToListClick([\n        {\n          ...product,\n          newSelectOptionList: [],\n          quantity: parseInt(product.quantity.toString(), 10) || 1,\n          variantId,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n      showRightBtn={false}\n      loading={isLoading}\n      maxWidth=\"md\"\n      leftSizeBtn={b3Lang('shoppingLists.close')}\n    >\n      <B3Spin isSpinning={isLoading}>\n        <Box\n          sx={{\n            minWidth: isMobile ? 'initial' : '100%',\n            flex: 1,\n          }}\n        >\n          <TextField\n            hiddenLabel\n            variant=\"filled\"\n            fullWidth\n            size=\"small\"\n            value={searchText}\n            onChange={onSearchTextChange}\n            onKeyDown={handleSearchKeyDown}\n            error={!productList || productList.length <= 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              margin: '12px 0',\n              '& input': {\n                padding: '12px 12px 12px 0',\n              },\n            }}\n          />\n\n          {productList && productList.length > 0 ? (\n            <ProductTable\n              products={productList}\n              quantityEditable\n              type=\"quickOrder\"\n              textAlign={isMobile ? 'left' : 'right'}\n              canToProduct\n              onProductQuantityChange={onProductQuantityChange}\n              renderAction={(product) => (\n                <ProductTableAction\n                  product={product}\n                  onAddToListClick={handleAddToList}\n                  onChooseOptionsClick={onChooseOptionsClick}\n                  addButtonText={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n                />\n              )}\n              actionWidth=\"180px\"\n            />\n          ) : (\n            <Typography>No products found</Typography>\n          )}\n        </Box>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { calculateProductListPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListProductItem } from '../../../types';\n\nimport ChooseOptionsDialog from './ChooseOptionsDialog';\nimport ProductListDialog from './ProductListDialog';\n\ninterface SearchProductProps {\n  addToList: (products: CustomFieldItems[]) => void;\n}\n\nexport default function SearchProduct({ addToList }: SearchProductProps) {\n  const b3Lang = useB3Lang();\n\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const companyId = companyInfoId || salesRepCompanyId;\n  const [isLoading, setIsLoading] = useState(false);\n  const [productListOpen, setProductListOpen] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [productList, setProductList] = useState<ShoppingListProductItem[]>([]);\n  const [chooseOptionsOpen, setChooseOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<ShoppingListProductItem>();\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleSearchTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const searchProduct = async () => {\n    if (!searchText || isLoading) {\n      return;\n    }\n\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('global.searchProductAddProduct.businessAccountPendingApproval'));\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { productsSearch } = await searchProducts({\n        search: searchText,\n        companyId,\n        customerGroupId,\n        categoryFilter: true,\n      });\n\n      const product = conversionProductsList(productsSearch);\n\n      setProductList(product);\n      setProductListOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchTextKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchProduct();\n    }\n  };\n\n  const handleSearchButtonClicked = () => {\n    searchProduct();\n  };\n\n  const clearProductInfo = () => {\n    setProductList([]);\n  };\n\n  const handleProductListDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(false);\n\n    if (isAdded) {\n      setIsAdded(false);\n    }\n\n    clearProductInfo();\n  };\n\n  const handleProductQuantityChange = (id: number, newQuantity: number) => {\n    const product = productList.find((product) => product.id === id);\n    if (product) {\n      product.quantity = newQuantity;\n    }\n\n    setProductList([...productList]);\n  };\n\n  const handleAddToListClick = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await addToList(products);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleProductListAddToList = async (products: CustomFieldItems[]) => {\n    await handleAddToListClick(products);\n  };\n\n  const handleChangeOptionsClick = (productId: number) => {\n    const product = productList.find((product) => product.id === productId);\n    if (product) {\n      setOptionsProduct({\n        ...product,\n      });\n    }\n    setProductListOpen(false);\n    setChooseOptionsOpen(true);\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(true);\n  };\n\n  const handleChooseOptionsDialogConfirm = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await handleAddToListClick(products);\n      setChooseOptionsOpen(false);\n      setProductListOpen(true);\n    } catch (error) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: '24px 0',\n      }}\n    >\n      <Typography>{b3Lang('global.searchProductAddProduct.searchBySkuOrName')}</Typography>\n      <TextField\n        hiddenLabel\n        placeholder={b3Lang('global.searchProduct.placeholder.quickOrder')}\n        variant=\"filled\"\n        fullWidth\n        size=\"small\"\n        value={searchText}\n        onChange={handleSearchTextChange}\n        onKeyDown={handleSearchTextKeyDown}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          margin: '12px 0',\n          '& input': {\n            padding: '12px 12px 12px 0',\n          },\n        }}\n      />\n      <CustomButton\n        variant=\"outlined\"\n        fullWidth\n        disabled={isLoading}\n        onClick={handleSearchButtonClicked}\n      >\n        <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n          <Box\n            sx={{\n              flex: 1,\n              textAlign: 'center',\n            }}\n          >\n            {b3Lang('global.searchProductAddProduct.searchProduct')}\n          </Box>\n        </B3Spin>\n      </CustomButton>\n\n      <ProductListDialog\n        isOpen={productListOpen}\n        isLoading={isLoading}\n        productList={productList}\n        searchText={searchText}\n        onSearchTextChange={handleSearchTextChange}\n        onSearch={handleSearchButtonClicked}\n        onCancel={handleProductListDialogCancel}\n        onProductQuantityChange={handleProductQuantityChange}\n        onChooseOptionsClick={handleChangeOptionsClick}\n        onAddToListClick={handleProductListAddToList}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={handleChooseOptionsDialogConfirm}\n      />\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { UploadFile as UploadFileIcon } from '@mui/icons-material';\nimport { Box, Card, CardContent, Divider, Typography } from '@mui/material';\n\nimport { B3Upload } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL } from '@/constants';\nimport { useBlockPendingAccountViewPrice, useFeatureFlags } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { createOrUpdateExistingCart } from '@/utils/cartUtils';\n\nimport { addCartProductToVerify } from '../utils';\n\nimport QuickAdd from './QuickAdd';\nimport SearchProduct from './SearchProduct';\n\nexport default function QuickOrderPad() {\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [isOpenBulkLoadCSV, setIsOpenBulkLoadCSV] = useState(false);\n  const [productData, setProductData] = useState<CustomFieldItems>([]);\n  const [addBtnText, setAddBtnText] = useState<string>('Add to cart');\n  const [isLoading, setIsLoading] = useState(false);\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n  const featureFlags = useFeatureFlags();\n  const backendValidationEnabled =\n    featureFlags['B2B-3318.move_stock_and_backorder_validation_to_backend'];\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n\n  const getSnackbarMessage = (res: any) => {\n    if (res && !res.errors) {\n      snackbar.success(b3Lang('purchasedProducts.quickOrderPad.productsAdded'), {\n        action: {\n          label: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          onClick: () => {\n            if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n              window.location.href = CART_URL;\n            }\n          },\n        },\n      });\n    } else {\n      snackbar.error('Error has occurred');\n    }\n  };\n\n  const quickAddToList = async (products: CustomFieldItems[]) => {\n    const res = await createOrUpdateExistingCart(products);\n\n    if (res && res.errors) {\n      snackbar.error(res.errors[0].message);\n    } else {\n      snackbar.success(b3Lang('purchasedProducts.quickOrderPad.productsAdded'), {\n        action: {\n          label: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          onClick: () => {\n            if (window.b2b.callbacks.dispatchEvent('on-click-cart-button')) {\n              window.location.href = CART_URL;\n            }\n          },\n        },\n      });\n    }\n\n    b3TriggerCartNumber();\n\n    return res;\n  };\n\n  const getValidProducts = (products: CustomFieldItems) => {\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const limitProduct: CustomFieldItems[] = [];\n    const minLimitQuantity: CustomFieldItems[] = [];\n    const maxLimitQuantity: CustomFieldItems[] = [];\n    const outOfStock: string[] = [];\n\n    products.forEach((item: CustomFieldItems) => {\n      const { products: currentProduct, qty } = item;\n      const {\n        option,\n        isStock,\n        stock,\n        purchasingDisabled,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n        variantId,\n        productId,\n        modifiers,\n      } = currentProduct;\n      if (purchasingDisabled === '1' || purchasingDisabled) {\n        notPurchaseSku.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock === 0) {\n        outOfStock.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock > 0 && stock < Number(qty)) {\n        limitProduct.push({\n          variantSku,\n          AvailableAmount: stock,\n        });\n        return;\n      }\n\n      if (Number(minQuantity) > 0 && Number(qty) < Number(minQuantity)) {\n        minLimitQuantity.push({\n          variantSku,\n          minQuantity,\n        });\n\n        return;\n      }\n\n      if (Number(maxQuantity) > 0 && Number(qty) > Number(maxQuantity)) {\n        maxLimitQuantity.push({\n          variantSku,\n          maxQuantity,\n        });\n\n        return;\n      }\n\n      const optionsList = option.map((item: CustomFieldItems) => ({\n        optionId: item.option_id,\n        optionValue: item.id,\n      }));\n\n      productItems.push({\n        productId: parseInt(productId, 10) || 0,\n        variantId: parseInt(variantId, 10) || 0,\n        quantity: Number(qty),\n        optionSelections: optionsList,\n        allOptions: modifiers,\n      });\n    });\n\n    return {\n      notPurchaseSku,\n      productItems,\n      limitProduct,\n      minLimitQuantity,\n      maxLimitQuantity,\n      outOfStock,\n    };\n  };\n\n  const handleAddToCart = async (productsData: CustomFieldItems) => {\n    setIsLoading(true);\n    try {\n      const { stockErrorFile, validProduct } = productsData;\n\n      const {\n        notPurchaseSku,\n        productItems,\n        limitProduct,\n        minLimitQuantity,\n        maxLimitQuantity,\n        outOfStock,\n      } = getValidProducts(validProduct);\n\n      if (productItems.length > 0) {\n        const res = await createOrUpdateExistingCart(productItems);\n\n        getSnackbarMessage(res);\n        b3TriggerCartNumber();\n      }\n\n      if (limitProduct.length > 0) {\n        limitProduct.forEach((data: CustomFieldItems) => {\n          snackbar.warning(\n            b3Lang('purchasedProducts.quickOrderPad.notEnoughStock', {\n              variantSku: data.variantSku,\n            }),\n            {\n              description: b3Lang('purchasedProducts.quickOrderPad.availableAmount', {\n                availableAmount: data.AvailableAmount,\n              }),\n            },\n          );\n        });\n      }\n\n      if (notPurchaseSku.length > 0) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n            notPurchaseSku: notPurchaseSku.join(','),\n          }),\n        );\n      }\n\n      if (outOfStock.length > 0 && stockErrorFile) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.outOfStockSku', {\n            outOfStock: outOfStock.join(','),\n          }),\n          {\n            action: {\n              label: b3Lang('purchasedProducts.quickOrderPad.downloadErrorsCSV'),\n              onClick: () => {\n                window.location.href = stockErrorFile;\n              },\n            },\n          },\n        );\n      }\n\n      if (minLimitQuantity.length > 0) {\n        minLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n              minQuantity: data.minQuantity,\n              sku: data.variantSku,\n            }),\n          );\n        });\n      }\n\n      if (maxLimitQuantity.length > 0) {\n        maxLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n              maxQuantity: data.maxQuantity,\n              sku: data.variantSku,\n            }),\n          );\n        });\n      }\n\n      setIsOpenBulkLoadCSV(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickSearchAddCart = async (productData: CustomFieldItems[]) => {\n    const currentProducts = productData.map((item) => {\n      return {\n        node: {\n          ...item,\n          productsSearch: item,\n        },\n      };\n    });\n    const isPassVerify = await addCartProductToVerify(\n      currentProducts as CustomFieldItems[],\n      b3Lang,\n    );\n    try {\n      if (isPassVerify) {\n        await quickAddToList(productData);\n      }\n    } catch (error) {\n      b2bLogger.error(error);\n    }\n\n    return productData;\n  };\n\n  const handleOpenUploadDiag = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart'));\n    } else {\n      setIsOpenBulkLoadCSV(true);\n    }\n  };\n\n  const handleBackendQuickSearchAddToCart = async (productData: CustomFieldItems[]) => {\n    try {\n      await quickAddToList(productData);\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        snackbar.error(e.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (productData?.length > 0) {\n      setAddBtnText(\n        b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart', {\n          quantity: productData.length,\n        }),\n      );\n    }\n  }, [b3Lang, productData]);\n\n  return (\n    <Card sx={{ marginBottom: isMobile ? '8.5rem' : '50px' }}>\n      <CardContent>\n        <Box>\n          <Typography variant=\"h5\" sx={{ marginBottom: '1rem' }}>\n            {b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n          </Typography>\n\n          <SearchProduct\n            addToList={\n              backendValidationEnabled\n                ? handleBackendQuickSearchAddToCart\n                : handleQuickSearchAddCart\n            }\n          />\n\n          <Divider />\n\n          <QuickAdd quickAddToList={quickAddToList} />\n\n          <Divider />\n\n          <Box sx={{ margin: '20px 0 0' }}>\n            <CustomButton variant=\"text\" onClick={() => handleOpenUploadDiag()}>\n              <UploadFileIcon sx={{ marginRight: '8px' }} />\n              {b3Lang('purchasedProducts.quickOrderPad.bulkUploadCSV')}\n            </CustomButton>\n          </Box>\n        </Box>\n      </CardContent>\n\n      <B3Upload\n        isOpen={isOpenBulkLoadCSV}\n        setIsOpen={setIsOpenBulkLoadCSV}\n        handleAddToList={handleAddToCart}\n        setProductData={setProductData}\n        addBtnText={addBtnText}\n        isLoading={isLoading}\n        isToCart\n      />\n    </Card>\n  );\n}\n","import { useState } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport QuickOrderTable from './components/QuickOrderB2BTable';\nimport QuickOrderFooter from './components/QuickOrderFooter';\nimport QuickOrderPad from './components/QuickOrderPad';\nimport { CheckedProduct } from './utils';\n\nfunction QuickOrder() {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const [isMobile] = useMobile();\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [checkedArr, setCheckedArr] = useState<CheckedProduct[]>([]);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowQuickOrderPad = isB2BUser ? purchasabilityPermission : true;\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            m: 0,\n            width: '100%',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={isMobile ? 12 : 8}\n            sx={{\n              backgroundColor: '#ffffff',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              pr: '16px',\n            }}\n          >\n            <QuickOrderTable\n              setCheckedArr={setCheckedArr}\n              setIsRequestLoading={setIsRequestLoading}\n              isRequestLoading={isRequestLoading}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={isMobile ? 12 : 4}\n            sx={{\n              pt: isMobile ? '16px' : '0px !important',\n              pl: isMobile ? '0px !important' : '16px',\n            }}\n          >\n            {isShowQuickOrderPad && <QuickOrderPad />}\n          </Grid>\n        </Grid>\n      </Box>\n      <Box\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          width: '100%',\n          zIndex: '999',\n        }}\n      >\n        <QuickOrderFooter\n          checkedArr={checkedArr}\n          isAgenting={isAgenting}\n          setIsRequestLoading={setIsRequestLoading}\n          isB2BUser={isB2BUser}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuickOrder;\n"],"names":["getProductPriceIncTaxOrExTaxBySetting","variants","variantId","variantSku","showInclusiveTaxPrice","store","currentVariantInfo","item","isEmpty","bcCalculatedPrice","orderedProducts","data","getOrderedProducts","B3Request","StyledImage","styled","QuickOrderCard","props","shoppingDetail","checkBox","handleUpdateProductQty","b3Lang","useB3Lang","quantity","imageUrl","productName","optionList","basePrice","lastOrderedAt","productsSearch","price","currentVariants","currentImage","b2bGetVariantImageByVariantInfo","jsx","Box","jsxs","CardContent","PRODUCT_DEFAULT_IMAGE","Typography","option","currencyFormat","TextField","e","displayFormat","StyleQuickOrderTable","StyledTextField","defaultSortKey","sortKeys","QuickOrderTable","setIsRequestLoading","setCheckedArr","isRequestLoading","paginationTableRef","useRef","companyInfoId","useAppSelector","company","customerGroupId","search","setSearch","useState","distanceDay","handleSetOrderBy","order","orderBy","useSort","total","setTotalCount","isMobile","useMobile","currencyCode","activeCurrencyInfoSelector","handleGetProductsById","listProducts","productIds","node","searchProducts","newProductsSearch","conversionProductsList","productInfo","productId","err","snackbar","getList","params","edges","totalCount","handleSearchProduct","q","getSelectCheckbox","selectCheckbox","productList","_a","checkedItems","pre","newItems","product","handlePickerChange","key","value","handleFilterChange","id","listItems","listCacheItems","_b","newListItems","newListCacheItems","_c","_d","showPrice","row","isPriceHidden","getDisplayPrice","handleSetCheckedQty","cacheProductList","qty","currentProduct","columnItems","priceIncTax","B3Spin","B3FilterSearch","B3FilterMore","B3FilterPicker","B3PaginationTable","_","handleVerifyProduct","products","inventoryLevel","inventoryTracking","orderQuantityMaximum","orderQuantityMinimum","sku","isEnableProduct","isStock","purchasingDisabled","stock","productSku","currentVariant","variant","getCartProductInfo","cart","getCart","lineItems","addCartProductToVerify","checkedArr","b3lang","cartProducts","checkItem","num","QuickOrderFooter","isAgenting","isB2BUser","productQuoteEnabled","shoppingListEnabled","useContext","GlobalContext","featureFlags","useFeatureFlags","state","purchasabilityPermission","rolePermissionSelector","backendValidationEnabled","isShowCartAction","isDesktopLimit","useMediaQuery","ref","isOpen","setIsOpen","selectedSubTotal","setSelectedSubTotal","openShoppingList","setOpenShoppingList","isOpenCreateShopping","setIsOpenCreateShopping","isShoppingListLoading","setIisShoppingListLoading","navigate","useNavigate","containerStyle","handleOpenBtnList","handleClose","handleSetCartLineItems","inventoryInfos","inventory","currentInventoryInfo","options","showAddToCartSuccessMessage","CART_URL","handleFrontedAddSelectedToCart","companyId","getInventoryInfos","res","createOrUpdateExistingCart","b3TriggerCartNumber","handleBackendAddSelectedToCart","handleAddSelectedToCart","uniq","getOptionsList","optionId","addToQuote","validatedProducts","validateProducts","addQuoteDraftProducts","handleAddSelectedToQuote","productsWithSku","checkedItem","noSkuProducts","newProductInfo","errorMessage","isFondVariant","newProducts","tax","optionsList","currentProductSearch","variantItem","quoteListitem","uuid","isValidQty","validProductQty","calculateProductListPrice","b2bLogger","gotoShoppingDetail","handleShoppingClose","isTrue","handleOpenCreateDialog","handleCloseShoppingClick","handleCreateShoppingClick","handleAddSelectedToShoppingList","shoppingListId","items","newOptionLists","getValidOptionsList","addProductToShoppingList","addProductToBcShoppingList","buttonList","useEffect","gridBarStyles","Fragment","Grid","CustomButton","ArrowDropDown","Menu","button","MenuItem","OrderShoppingList","CreateShoppingList","LEVEL","parseOptionList","arr","optionStr","error","QuickAdd","quickAddToList","buttonText","companyStatus","rows","setRows","formFields","setFormFields","isLoading","setIsLoading","loopRows","fn","index","getQuickAddRowFields","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","handleAddRowsClick","control","handleSubmit","getValues","errors","setError","setValue","useForm","validateSkuInput","isValid","getProductData","skuValue","getProductItems","variantInfoList","skus","notFoundSku","notPurchaseSku","productItems","passSku","notStockSku","orderLimitSku","variantInfo","maxQuantity","minQuantity","allQuantity","showErrors","inputType","message","skuFieldName","name","clearInputValue","getVariantList","getVariantInfoBySkus","handleFrontendValidation","stockSku","min","max","type","limit","typeText","handleAddToList","productsToValidate","catalogProduct","matchingSkuFromInput","inputSku","requestedQuantity","backendValidatedProducts","validatedProduct","originalProductInfo","handleKeyDown","B3CustomForm","Flex","FlexItem","padding","ProductImage","ProductOptionText","StyleTextField","ChooseOptionsDialog","onCancel","onConfirm","global","salesRepCompanyId","b2bFeatures","setQuantity","setVariantInfo","setVariantSku","setCurrentImage","additionalProducts","setAdditionalProducts","productPriceChangeOptions","setProductPriceChangeOptions","newPrice","setNewPrice","chooseOptionsProduct","setChooseOptionsProduct","isShowPrice","setChooseOptionsForm","modifiers","modifier","productImages","additionalProductsParams","optionValues","productOptionsFields","getProductOptionsFields","getProductPriceOptions","newProductPriceChangeOptionLists","getProductPrice","priceNumber","variantCalculatePrice","handleProductQuantityChange","handleNumberInputKeyDown","event","handleNumberInputBlur","watch","reset","formValues","cache","getProductVariantId","useCallback","changeName","isSelect","Base64","subscription","defaultValues","fields","formFieldValue","validateQuantityNumber","getOptionList","optionsData","getOptionRequestData","isEqual","newChooseOptionsProduct","optionChangeFlag","newSelectOptionList","findAttributeId","newOption","taxPrice","getBCPrice","handleConfirmClicked","handleCancelClicked","B3Dialog","Divider","ProductTableAction","productOptions","onAddToListClick","onChooseOptionsClick","addButtonText","ShoppingListDetailsContext","ProductTable","B3ProductList","ProductListDialog","searchText","onSearchTextChange","onSearch","onProductQuantityChange","handleSearchKeyDown","InputAdornment","SearchIcon","SearchProduct","addToList","productListOpen","setProductListOpen","isAdded","setIsAdded","setSearchText","setProductList","chooseOptionsOpen","setChooseOptionsOpen","optionsProduct","setOptionsProduct","handleSearchTextChange","searchProduct","handleSearchTextKeyDown","handleSearchButtonClicked","clearProductInfo","handleProductListDialogCancel","newQuantity","handleAddToListClick","handleProductListAddToList","handleChangeOptionsClick","handleChooseOptionsDialogCancel","handleChooseOptionsDialogConfirm","QuickOrderPad","isOpenBulkLoadCSV","setIsOpenBulkLoadCSV","productData","setProductData","addBtnText","setAddBtnText","getSnackbarMessage","getValidProducts","limitProduct","minLimitQuantity","maxLimitQuantity","outOfStock","handleAddToCart","productsData","stockErrorFile","validProduct","handleQuickSearchAddCart","currentProducts","isPassVerify","handleOpenUploadDiag","handleBackendQuickSearchAddToCart","Card","UploadFileIcon","B3Upload","QuickOrder","isB2BUserSelector","isShowQuickOrderPad"],"mappings":"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"}