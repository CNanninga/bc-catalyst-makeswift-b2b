{"version":3,"file":"B3LayoutTip-legacy-Bo9xJLxd.js","sources":["../../src/components/layout/B3LayoutTip.tsx"],"sourcesContent":["import { useContext, useEffect } from 'react';\nimport { flushSync } from 'react-dom';\n\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { MsgsProps } from '@/shared/dynamicallyVariable/context/config';\n\nimport B3Tip from '../B3Tip';\n\nfunction B3LayoutTip() {\n  const {\n    state: { tipMessage },\n    dispatch,\n  } = useContext(DynamicallyVariableContext);\n\n  useEffect(() => {\n    window.tipDispatch = dispatch;\n    // disabling as dispatch does not need to be in the deps\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setMsgs = (msgs: [] | Array<MsgsProps> = []) => {\n    dispatch({\n      type: 'common',\n      payload: {\n        tipMessage: {\n          ...tipMessage,\n          msgs,\n        },\n      },\n    });\n  };\n\n  const { msgs = [], autoHideDuration = 5000, vertical = 'top', horizontal = 'right' } = tipMessage;\n\n  const handleClose = (id: number | string) => {\n    const newMsgs = msgs.filter((msg) => msg.id !== id);\n\n    setMsgs(newMsgs);\n  };\n\n  const closeMsgs = (id: number | string, reason: string) => {\n    if (reason === 'clickaway') return;\n\n    flushSync(() => {\n      if (msgs.length) {\n        const newMsgs = msgs.filter((item: MsgsProps) => item.id !== id);\n\n        dispatch({\n          type: 'common',\n          payload: {\n            tipMessage: {\n              ...tipMessage,\n              msgs: newMsgs,\n            },\n          },\n        });\n      }\n    });\n  };\n\n  return (\n    <B3Tip\n      msgs={msgs}\n      handleAllClose={closeMsgs}\n      autoHideDuration={autoHideDuration}\n      handleItemClose={handleClose}\n      // handleItemClose={isClose ? handleClose : undefined}\n      vertical={vertical}\n      horizontal={horizontal}\n    />\n  );\n}\n\nexport default B3LayoutTip;\n"],"names":["state","tipMessage","dispatch","useContext","DynamicallyVariableContext","useEffect","window","tipDispatch","msgs","autoHideDuration","vertical","horizontal","jsx","B3Tip","handleAllClose","closeMsgs","id","reason","flushSync","length","newMsgs","filter","item","type","payload","handleItemClose","setMsgs","msg"],"mappings":"ouBAQA,WACE,MACEA,OAAOC,WAAEA,GAAWC,SACpBA,GACEC,EAAAA,WAAWC,GAEfC,EAAAA,UAAU,KACRC,OAAOC,YAAcL,GAGpB,IAEH,MAYMM,KAAEA,EAAO,GAACC,iBAAGA,EAAmB,aAAMC,EAAW,MAAAC,WAAOA,EAAa,SAAYV,EA4BvF,OACEW,EAAAA,IAACC,EAAA,CACCL,OACAM,eAvBcC,CAACC,EAAqBC,KACvB,cAAXA,GAEJC,EAAAA,UAAU,KACR,GAAIV,EAAKW,OAAQ,CACf,MAAMC,EAAUZ,EAAKa,OAAQC,GAAoBA,EAAKN,KAAOA,GAE7Dd,EAAS,CACPqB,KAAM,SACNC,QAAS,CACPvB,WAAY,IACPA,EACHO,KAAMY,KAId,KAQAX,mBACAgB,gBA/BiBT,IAdLU,EAAClB,EAA8B,MAC7CN,EAAS,CACPqB,KAAM,SACNC,QAAS,CACPvB,WAAY,IACPA,EACHO,KAAAA,OAWNkB,CAFgBlB,EAAKa,OAAQM,GAAQA,EAAIX,KAAOA,KAgC9CN,WACAC,cAGN"}