{"version":3,"file":"B3CompanyHierarchyExternalButton-B-ZSx20A.js","sources":["../../src/components/outSideComponents/B3CompanyHierarchyExternalButton.tsx"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { Business as BusinessIcon } from '@mui/icons-material';\nimport { Box, SnackbarOrigin, SxProps } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\n\nimport { PAGES_SUBSIDIARIES_PERMISSION_KEYS, PATH_ROUTES, Z_INDEX } from '@/constants';\nimport useMobile from '@/hooks/useMobile';\nimport { useB3Lang } from '@/lib/lang';\nimport { type SetOpenPage } from '@/pages/SetOpenPage';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { setOpenCompanyHierarchyDropDown, useAppDispatch, useAppSelector } from '@/store';\nimport { PagesSubsidiariesPermissionProps } from '@/types';\n\nimport {\n  getContrastColor,\n  getLocation,\n  getPosition,\n  getStyles,\n  setMUIMediaStyle,\n  splitCustomCssValue,\n} from './utils/b3CustomStyles';\n\nconst bottomHeightPage = ['shoppingList/', 'purchased-products'];\n\ninterface B3CompanyHierarchyExternalButtonProps {\n  isOpen: boolean;\n  setOpenPage: SetOpenPage;\n}\nfunction B3CompanyHierarchyExternalButton({\n  setOpenPage,\n  isOpen,\n}: B3CompanyHierarchyExternalButtonProps) {\n  const b3Lang = useB3Lang();\n\n  const { hash } = window.location;\n\n  const [isMobile] = useMobile();\n\n  const dispatch = useAppDispatch();\n\n  const { selectCompanyHierarchyId, companyHierarchyList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const isAddBottom = bottomHeightPage.some((item: string) => hash.includes(item));\n\n  const {\n    state: { switchAccountButton },\n  } = useContext(CustomStyleContext);\n\n  const defaultLocation: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n  };\n\n  const {\n    color = '',\n    customCss = '',\n    location = 'bottomLeft',\n    horizontalPadding = '',\n    verticalPadding = '',\n  } = switchAccountButton;\n\n  const cssInfo = splitCustomCssValue(customCss);\n  const {\n    cssValue,\n    mediaBlocks,\n  }: {\n    cssValue: string;\n    mediaBlocks: string[];\n  } = cssInfo;\n  const MUIMediaStyle = setMUIMediaStyle(mediaBlocks);\n\n  const baseStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n    bottom: 0,\n    ...getStyles(cssValue),\n  };\n\n  const desktopStyles: SxProps = isAddBottom ? { bottom: '90px !important' } : {};\n  const buyerPortalStyles: SxProps = {\n    bottom: '24px',\n    left: '24px',\n    right: 'auto',\n    top: 'unset',\n  };\n  const mobileOpenStyles: SxProps = {\n    width: '100%',\n    bottom: 0,\n    left: 0,\n  };\n\n  let sx: SxProps = { ...baseStyles };\n\n  if (isMobile) {\n    if (isOpen) {\n      sx = { ...sx, ...mobileOpenStyles };\n    } else {\n      sx = { ...sx, ...getPosition(horizontalPadding, verticalPadding, location) };\n    }\n  } else if (isOpen) {\n    sx = { ...sx, ...buyerPortalStyles, ...desktopStyles };\n  } else {\n    sx = { ...sx, ...getPosition(horizontalPadding, verticalPadding, location), ...desktopStyles };\n  }\n\n  const companyName: string = useMemo(() => {\n    if (!selectCompanyHierarchyId) {\n      return '';\n    }\n\n    return (\n      companyHierarchyList.find((company) => company.companyId === Number(selectCompanyHierarchyId))\n        ?.companyName || ''\n    );\n  }, [selectCompanyHierarchyId, companyHierarchyList]);\n\n  const handleHierarchyExternalBtnClick = () => {\n    const { companyHierarchy } = pagesSubsidiariesPermission;\n\n    if (companyHierarchy) {\n      const { COMPANY_HIERARCHY } = PATH_ROUTES;\n\n      setOpenPage({\n        isOpen: true,\n        openUrl: COMPANY_HIERARCHY,\n      });\n\n      return;\n    }\n\n    const key = Object.keys(pagesSubsidiariesPermission).find((key) => {\n      return !!pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps];\n    });\n\n    const route = PAGES_SUBSIDIARIES_PERMISSION_KEYS.find((item) => item.key === key);\n\n    if (route && !isOpen) {\n      setOpenPage({\n        isOpen: true,\n        openUrl: route.path,\n      });\n    }\n    dispatch(setOpenCompanyHierarchyDropDown(true));\n  };\n\n  return (\n    <>\n      {!!companyName && (\n        <Snackbar\n          sx={{\n            zIndex: Z_INDEX.NOTIFICATION,\n            height: '52px',\n            borderRadius: '4px',\n            fontSize: '16px',\n            fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif',\n            mb: isMobile ? '4rem' : '0px',\n            ...sx,\n            ...MUIMediaStyle,\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              padding: '1rem 2rem',\n              borderRadius: '4px',\n              fontSize: '16px',\n              cursor: 'pointer',\n            }}\n            onClick={() => handleHierarchyExternalBtnClick()}\n          >\n            <BusinessIcon sx={{ fontSize: '20px' }} />\n            <Box\n              sx={{\n                margin: '0 0.5rem',\n              }}\n            >\n              {b3Lang('global.companyHierarchy.externalBtn')}\n            </Box>\n            <Box\n              sx={{\n                fontWeight: 'bold',\n              }}\n            >\n              {companyName}\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n    </>\n  );\n}\n\nexport default B3CompanyHierarchyExternalButton;\n"],"names":["bottomHeightPage","B3CompanyHierarchyExternalButton","setOpenPage","isOpen","b3Lang","useB3Lang","hash","isMobile","useMobile","dispatch","useAppDispatch","selectCompanyHierarchyId","companyHierarchyList","useAppSelector","company","pagesSubsidiariesPermission","isAddBottom","item","switchAccountButton","useContext","CustomStyleContext","defaultLocation","color","customCss","location","horizontalPadding","verticalPadding","cssInfo","splitCustomCssValue","cssValue","mediaBlocks","MUIMediaStyle","setMUIMediaStyle","baseStyles","getContrastColor","getStyles","desktopStyles","buyerPortalStyles","mobileOpenStyles","sx","getPosition","companyName","useMemo","_a","handleHierarchyExternalBtnClick","companyHierarchy","COMPANY_HIERARCHY","PATH_ROUTES","key","route","PAGES_SUBSIDIARIES_PERMISSION_KEYS","setOpenCompanyHierarchyDropDown","jsx","Fragment","Snackbar","Z_INDEX","getLocation","jsxs","Box","BusinessIcon"],"mappings":"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"}