{"version":3,"file":"index-B3Ism599.js","sources":["../../src/utils/validationError.ts","../../src/pages/PDP/addProductsToShoppingListErrorHandler.ts","../../src/pages/PDP/useAddedToShoppingListAlert.tsx","../../src/pages/PDP/index.tsx"],"sourcesContent":["class ValidationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\n\nexport default ValidationError;\n","import { globalSnackbar, ValidationError } from '@/utils';\n\nexport const addProductsToShoppingListErrorHandler = (error: Error) => {\n  const message =\n    error instanceof ValidationError ? error.message : 'Something went wrong. Please try again.';\n  globalSnackbar.error(message);\n};\n","import { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { globalSnackbar } from '@/utils';\n\nexport function useAddedToShoppingListAlert() {\n  const b3Lang = useB3Lang();\n  const setOpenPage = useAppSelector(({ global }) => global.setOpenPageFn);\n\n  const gotoShoppingDetail = (id: string) =>\n    setOpenPage?.({\n      isOpen: true,\n      openUrl: `/shoppingList/${id}`,\n      params: {\n        shoppingListBtn: 'add',\n      },\n    });\n\n  return (id: string) => {\n    globalSnackbar.success(b3Lang('shoppingList.addToShoppingList.productsAdded'), {\n      action: {\n        label: b3Lang('pdp.notification.viewShoppingList'),\n        onClick: () => gotoShoppingDetail(id),\n      },\n    });\n  };\n}\n","import { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport config from '@/lib/config';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchProducts,\n} from '@/shared/service/b2b';\nimport { isB2BUserSelector, store, useAppSelector } from '@/store';\nimport { getActiveCurrencyInfo, serialize, ValidationError } from '@/utils';\nimport { getProductOptionList, isAllRequiredOptionFilled } from '@/utils/b3AddToShoppingList';\nimport { getValidOptionsList } from '@/utils/b3Product/b3Product';\n\nimport { conversionProductsList } from '../../utils/b3Product/shared/config';\nimport CreateShoppingList from '../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../OrderDetail/components/OrderShoppingList';\n\nimport { addProductsToShoppingListErrorHandler } from './addProductsToShoppingListErrorHandler';\nimport { useAddedToShoppingListAlert } from './useAddedToShoppingListAlert';\n\nexport { useAddedToShoppingListAlert } from './useAddedToShoppingListAlert';\nexport { addProductsToShoppingListErrorHandler } from './addProductsToShoppingListErrorHandler';\n\ninterface AddProductsToShoppingListParams {\n  isB2BUser: boolean;\n  items: CustomFieldItems[];\n  shoppingListId: number | string;\n  customerGroupId?: number;\n}\n\nexport const addProductsToShoppingList = async ({\n  isB2BUser,\n  customerGroupId,\n  items,\n  shoppingListId,\n}: AddProductsToShoppingListParams) => {\n  const { currency_code: currencyCode } = getActiveCurrencyInfo();\n  const { id: companyId } = store.getState().company.companyInfo;\n\n  const { productsSearch } = await searchProducts({\n    productIds: items.map(({ productId }) => productId),\n    currencyCode,\n    companyId,\n    customerGroupId,\n  });\n\n  const productsInfo = conversionProductsList(productsSearch);\n  const products = [];\n\n  for (let index = 0; index < productsInfo.length; index += 1) {\n    const { allOptions: requiredOptions, variants } = productsInfo[index];\n    const { productId, sku, variantId: vId, quantity, optionSelections } = items[index];\n    // check if it's an specified product\n    const variantId =\n      vId ||\n      variants.find((item: { sku: string }) => item.sku === sku)?.variant_id ||\n      variants[0]?.variant_id;\n    // get selected options by inputted data\n    const optionList = !optionSelections ? [] : getProductOptionList(optionSelections);\n    // verify inputted data includes required data\n    const { isValid, message } = isAllRequiredOptionFilled(requiredOptions, optionList);\n\n    if (!isValid) {\n      throw new ValidationError(message);\n    }\n\n    const newOptionLists = getValidOptionsList(optionList, productsInfo[index]);\n    products.push({\n      productId,\n      variantId,\n      quantity,\n      optionList: newOptionLists,\n    });\n  }\n\n  const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n\n  await addToShoppingList({\n    shoppingListId,\n    items: products,\n  });\n};\n\nfunction useData() {\n  const {\n    state: { shoppingListClickNode },\n  } = useContext(GlobalContext);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n  const platform = useAppSelector(({ global }) => global.storeInfo.platform);\n  const setOpenPageFn = useAppSelector(({ global }) => global.setOpenPageFn);\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const getShoppingListItem = () => {\n    if (platform !== 'bigcommerce') {\n      return window.b2b.utils.shoppingList.itemFromCurrentPage[0];\n    }\n\n    if (!shoppingListClickNode) return undefined;\n\n    const productView: HTMLElement | null = shoppingListClickNode.closest(\n      config['dom.productView'],\n    );\n    if (!productView) return undefined;\n\n    const productId = (productView.querySelector('input[name=product_id]') as any)?.value;\n    const quantity = (productView.querySelector('[name=\"qty[]\"]') as any)?.value ?? 1;\n    const sku = (productView.querySelector('[data-product-sku]')?.innerHTML ?? '').trim();\n    const form = productView.querySelector('form[data-cart-item-add]') as HTMLFormElement;\n    return {\n      productId: Number(productId),\n      sku,\n      quantity: Number(quantity),\n      optionSelections: serialize(form),\n    };\n  };\n\n  const addToShoppingList = ({\n    shoppingListId,\n    product,\n  }: {\n    shoppingListId: string | number;\n    product: CustomFieldItems;\n  }) =>\n    addProductsToShoppingList({\n      isB2BUser,\n      customerGroupId,\n      shoppingListId,\n      items: [product],\n    });\n\n  return { setOpenPageFn, getShoppingListItem, addToShoppingList };\n}\n\nfunction PDP() {\n  const { setOpenPageFn, getShoppingListItem, addToShoppingList } = useData();\n  const b3Lang = useB3Lang();\n\n  const [openShoppingList, setOpenShoppingList] = useState<boolean>(true);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState<boolean>(false);\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const displayAddedToShoppingListAlert = useAddedToShoppingListAlert();\n\n  const navigate = useNavigate();\n\n  const handleShoppingClose = () => {\n    window.scrollTo(0, 0);\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(false);\n    navigate('/');\n    setOpenPageFn?.({\n      isOpen: false,\n      openUrl: '',\n    });\n  };\n\n  const handleShoppingConfirm = async (shoppingListId: string) => {\n    const product = getShoppingListItem();\n\n    if (!product) return;\n    try {\n      setIsRequestLoading(true);\n      await addToShoppingList({ shoppingListId, product })\n        .then(() => displayAddedToShoppingListAlert(shoppingListId))\n        .catch(addProductsToShoppingListErrorHandler);\n\n      handleShoppingClose();\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  return (\n    <>\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('pdp.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleShoppingConfirm}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isRequestLoading}\n        setLoading={setIsRequestLoading}\n      />\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default PDP;\n"],"names":["ValidationError","message","addProductsToShoppingListErrorHandler","error","globalSnackbar","useAddedToShoppingListAlert","b3Lang","useB3Lang","setOpenPage","useAppSelector","global","gotoShoppingDetail","id","addProductsToShoppingList","isB2BUser","customerGroupId","items","shoppingListId","currencyCode","getActiveCurrencyInfo","companyId","store","productsSearch","searchProducts","productId","productsInfo","conversionProductsList","products","index","requiredOptions","variants","sku","vId","quantity","optionSelections","variantId","_a","item","_b","optionList","getProductOptionList","isValid","isAllRequiredOptionFilled","newOptionLists","getValidOptionsList","addProductToShoppingList","addProductToBcShoppingList","useData","shoppingListClickNode","useContext","GlobalContext","company","platform","setOpenPageFn","isB2BUserSelector","productView","config","_c","_e","_d","form","serialize","product","PDP","getShoppingListItem","addToShoppingList","openShoppingList","setOpenShoppingList","useState","isOpenCreateShopping","setIsOpenCreateShopping","isRequestLoading","setIsRequestLoading","displayAddedToShoppingListAlert","navigate","useNavigate","handleShoppingClose","handleShoppingConfirm","handleOpenCreateDialog","handleCloseShoppingClick","handleCreateShoppingClick","jsxs","Fragment","jsx","OrderShoppingList","CreateShoppingList"],"mappings":"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"}