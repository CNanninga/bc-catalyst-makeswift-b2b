{"version":3,"file":"OrderShoppingList-legacy-w3HPSrJA.js","sources":["../../src/pages/OrderDetail/components/CreateShoppingList.tsx","../../src/pages/OrderDetail/components/OrderShoppingList.tsx","../../src/utils/b3ShoppingList/b3ShoppingList.ts"],"sourcesContent":["import { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { LangFormatFunction, useB3Lang } from '@/lib/lang';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport createShoppingList from '@/utils/b3ShoppingList/b3ShoppingList';\n\nconst getList = (b3Lang: LangFormatFunction) => [\n  {\n    name: 'name',\n    label: b3Lang('global.createShoppingList.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('global.createShoppingList.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n\ninterface CreateShoppingListProps {\n  open: boolean;\n  onChange: () => void;\n  onClose: () => void;\n}\n\nfunction CreateShoppingList({ open, onChange, onClose }: CreateShoppingListProps) {\n  const container = useRef<HTMLInputElement | null>(null);\n\n  const b3Lang = useB3Lang();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleConfirm = () => {\n    handleSubmit(async (data) => {\n      const { name, description } = data;\n\n      setLoading(true);\n      await createShoppingList({\n        data: { name, description },\n        isB2BUser,\n      });\n      setLoading(false);\n      onChange();\n    })();\n  };\n\n  return (\n    <Box\n      sx={{\n        ml: 3,\n        cursor: 'pointer',\n        width: '50%',\n      }}\n    >\n      <Box ref={container} />\n\n      <B3Dialog\n        isOpen={open}\n        fullWidth\n        title={b3Lang('global.createShoppingList.createNew')}\n        loading={loading}\n        handleLeftClick={handleClose}\n        handRightClick={handleConfirm}\n      >\n        <Box\n          sx={{\n            minHeight: 'auto',\n            display: 'flex',\n            alignItems: 'flex-start',\n          }}\n        >\n          <B3CustomForm\n            formFields={getList(b3Lang)}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n      </B3Dialog>\n    </Box>\n  );\n}\n\nexport default CreateShoppingList;\n","import { useEffect, useState } from 'react';\nimport { Add as AddIcon } from '@mui/icons-material';\nimport { Box, ListItemText, MenuItem, MenuList, useTheme } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport { b3HexToRgb } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getB2BShoppingList, getBcShoppingList } from '@/shared/service/b2b';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListItem, ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId } from '@/utils';\n\ninterface OrderShoppingListProps {\n  isOpen: boolean;\n  dialogTitle?: string;\n  confirmText?: string;\n  onClose?: () => void;\n  onCreate?: () => void;\n  onConfirm?: (id: string) => void;\n  isLoading?: boolean;\n  setLoading?: (val: boolean) => void;\n}\n\ninterface ListItem {\n  node: ShoppingListItem;\n}\n\nconst noop = () => {};\n\nexport default function OrderShoppingList(props: OrderShoppingListProps) {\n  const b3Lang = useB3Lang();\n  const {\n    isOpen,\n    dialogTitle = b3Lang('global.orderShoppingList.confirm'),\n    confirmText = b3Lang('global.orderShoppingList.ok'),\n    onClose = noop,\n    onConfirm = noop,\n    onCreate = noop,\n    isLoading = false,\n    setLoading = noop,\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const { submitShoppingListPermission } = useAppSelector(rolePermissionSelector);\n\n  const theme = useTheme();\n  const [isMobile] = useMobile();\n  const primaryColor = theme.palette.primary.main;\n\n  const [list, setList] = useState([]);\n  const [activeId, setActiveId] = useState('');\n\n  useEffect(() => {\n    if (!isOpen) return;\n    const getList = async () => {\n      setLoading(true);\n      setList([]);\n\n      try {\n        const filterStatus = submitShoppingListPermission\n          ? ShoppingListStatus.Draft\n          : ShoppingListStatus.Approved;\n\n        const { edges: list = [] } = isB2BUser\n          ? await getB2BShoppingList({ status: filterStatus })\n          : await getBcShoppingList({ channelId });\n\n        setList(list);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getList();\n    // Disabling as the setLoading dispatcher does not need to be here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isB2BUser, isOpen, role]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleConfirm = () => {\n    onConfirm(activeId);\n  };\n\n  const handleCreate = () => {\n    onCreate();\n  };\n\n  const handleListItemClicked = (item: ListItem) => () => {\n    setActiveId(item.node.id);\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      title={dialogTitle}\n      disabledSaveBtn={!activeId}\n      handleLeftClick={handleClose}\n      handRightClick={handleConfirm}\n      rightSizeBtn={confirmText}\n    >\n      <B3Spin isSpinning={isLoading} isFlex={false}>\n        <Box\n          sx={\n            isMobile\n              ? {\n                  height: '430px',\n                }\n              : {\n                  padding: isLoading ? '4rem 0' : 'unset',\n                  maxHeight: '430PX',\n                }\n          }\n        >\n          <MenuList\n            sx={{\n              maxHeight: '400px',\n              width: '100%',\n              overflowY: 'auto',\n            }}\n          >\n            {list.map((item: ListItem) => (\n              <MenuItem\n                key={item.node.id}\n                className={activeId === item.node.id ? 'active' : ''}\n                onClick={handleListItemClicked(item)}\n                sx={{\n                  '&:hover': {\n                    backgroundColor: b3HexToRgb(primaryColor, 0.12),\n                  },\n                  '&.active': {\n                    backgroundColor: b3HexToRgb(primaryColor, 0.12),\n                  },\n                }}\n              >\n                <ListItemText>{item.node.name}</ListItemText>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Box>\n\n        <CustomButton\n          variant=\"text\"\n          onClick={handleCreate}\n          sx={{\n            textTransform: 'none',\n          }}\n        >\n          <AddIcon\n            sx={{\n              fontSize: '17px',\n            }}\n          />\n          {` ${b3Lang('global.orderShoppingList.createNew')}`}\n        </CustomButton>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { createB2BShoppingList, createBcShoppingList } from '@/shared/service/b2b';\nimport { store } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\n\nimport { b2bPermissionsMap, validatePermissionWithComparisonType } from '../b3CheckPermissions';\nimport { channelId } from '../basicConfig';\n\ninterface CreateShoppingListParams {\n  data: { name: string; description: string };\n  isB2BUser: boolean;\n}\n\nconst createShoppingList = ({\n  data,\n  isB2BUser,\n}: // currentChannelId,\nCreateShoppingListParams) => {\n  const createShoppingData: Record<string, string | number> = data;\n\n  const createSL = isB2BUser ? createB2BShoppingList : createBcShoppingList;\n\n  if (isB2BUser) {\n    const submitShoppingListPermission = validatePermissionWithComparisonType({\n      containOrEqual: 'contain',\n      code: b2bPermissionsMap.submitShoppingListPermission,\n    });\n    const selectCompanyHierarchyId =\n      store.getState()?.company?.companyHierarchyInfo?.selectCompanyHierarchyId || 0;\n    createShoppingData.status = submitShoppingListPermission\n      ? ShoppingListStatus.Draft\n      : ShoppingListStatus.Approved;\n    if (selectCompanyHierarchyId) {\n      createShoppingData.companyId = selectCompanyHierarchyId;\n    }\n  } else {\n    createShoppingData.channelId = channelId;\n  }\n\n  return createSL({ ...createShoppingData, channelId });\n};\n\nexport default createShoppingList;\n"],"names":["open","onChange","onClose","container","useRef","b3Lang","useB3Lang","loading","setLoading","useState","isB2BUser","useAppSelector","isB2BUserSelector","control","handleSubmit","getValues","formState","errors","setValue","useForm","mode","jsxs","Box","sx","ml","cursor","width","children","jsx","ref","B3Dialog","isOpen","fullWidth","title","handleLeftClick","handleClose","handRightClick","handleConfirm","async","name","description","data","createShoppingList","minHeight","display","alignItems","B3CustomForm","formFields","getList","props","dialogTitle","confirmText","noop","onConfirm","onCreate","isLoading","role","company","customer","submitShoppingListPermission","rolePermissionSelector","theme","useTheme","isMobile","useMobile","primaryColor","palette","primary","main","list","setList","activeId","setActiveId","useEffect","filterStatus","ShoppingListStatus","Draft","Approved","edges","getB2BShoppingList","status","getBcShoppingList","channelId","handleListItemClicked","item","node","id","disabledSaveBtn","rightSizeBtn","B3Spin","isSpinning","isFlex","height","padding","maxHeight","MenuList","overflowY","map","MenuItem","className","onClick","backgroundColor","b3HexToRgb","ListItemText","CustomButton","variant","handleCreate","textTransform","AddIcon","fontSize","createShoppingData","createSL","createB2BShoppingList","createBcShoppingList","validatePermissionWithComparisonType","containOrEqual","code","b2bPermissionsMap","selectCompanyHierarchyId","store","getState","companyHierarchyInfo","companyId","label","required","default","fieldType","xs","size","maxLength","rows"],"mappings":"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"}