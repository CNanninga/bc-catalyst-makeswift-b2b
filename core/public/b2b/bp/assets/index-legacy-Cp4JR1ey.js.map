{"version":3,"file":"index-legacy-Cp4JR1ey.js","sources":["../../src/pages/PDP/index.tsx","../../src/utils/validationError.ts","../../src/pages/PDP/addProductsToShoppingListErrorHandler.ts","../../src/pages/PDP/useAddedToShoppingListAlert.tsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport config from '@/lib/config';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchProducts,\n} from '@/shared/service/b2b';\nimport { isB2BUserSelector, store, useAppSelector } from '@/store';\nimport { getActiveCurrencyInfo, serialize, ValidationError } from '@/utils';\nimport { getProductOptionList, isAllRequiredOptionFilled } from '@/utils/b3AddToShoppingList';\nimport { getValidOptionsList } from '@/utils/b3Product/b3Product';\n\nimport { conversionProductsList } from '../../utils/b3Product/shared/config';\nimport CreateShoppingList from '../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../OrderDetail/components/OrderShoppingList';\n\nimport { addProductsToShoppingListErrorHandler } from './addProductsToShoppingListErrorHandler';\nimport { useAddedToShoppingListAlert } from './useAddedToShoppingListAlert';\n\nexport { useAddedToShoppingListAlert } from './useAddedToShoppingListAlert';\nexport { addProductsToShoppingListErrorHandler } from './addProductsToShoppingListErrorHandler';\n\ninterface AddProductsToShoppingListParams {\n  isB2BUser: boolean;\n  items: CustomFieldItems[];\n  shoppingListId: number | string;\n  customerGroupId?: number;\n}\n\nexport const addProductsToShoppingList = async ({\n  isB2BUser,\n  customerGroupId,\n  items,\n  shoppingListId,\n}: AddProductsToShoppingListParams) => {\n  const { currency_code: currencyCode } = getActiveCurrencyInfo();\n  const { id: companyId } = store.getState().company.companyInfo;\n\n  const { productsSearch } = await searchProducts({\n    productIds: items.map(({ productId }) => productId),\n    currencyCode,\n    companyId,\n    customerGroupId,\n  });\n\n  const productsInfo = conversionProductsList(productsSearch);\n  const products = [];\n\n  for (let index = 0; index < productsInfo.length; index += 1) {\n    const { allOptions: requiredOptions, variants } = productsInfo[index];\n    const { productId, sku, variantId: vId, quantity, optionSelections } = items[index];\n    // check if it's an specified product\n    const variantId =\n      vId ||\n      variants.find((item: { sku: string }) => item.sku === sku)?.variant_id ||\n      variants[0]?.variant_id;\n    // get selected options by inputted data\n    const optionList = !optionSelections ? [] : getProductOptionList(optionSelections);\n    // verify inputted data includes required data\n    const { isValid, message } = isAllRequiredOptionFilled(requiredOptions, optionList);\n\n    if (!isValid) {\n      throw new ValidationError(message);\n    }\n\n    const newOptionLists = getValidOptionsList(optionList, productsInfo[index]);\n    products.push({\n      productId,\n      variantId,\n      quantity,\n      optionList: newOptionLists,\n    });\n  }\n\n  const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n\n  await addToShoppingList({\n    shoppingListId,\n    items: products,\n  });\n};\n\nfunction useData() {\n  const {\n    state: { shoppingListClickNode },\n  } = useContext(GlobalContext);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n  const platform = useAppSelector(({ global }) => global.storeInfo.platform);\n  const setOpenPageFn = useAppSelector(({ global }) => global.setOpenPageFn);\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const getShoppingListItem = () => {\n    if (platform !== 'bigcommerce') {\n      return window.b2b.utils.shoppingList.itemFromCurrentPage[0];\n    }\n\n    if (!shoppingListClickNode) return undefined;\n\n    const productView: HTMLElement | null = shoppingListClickNode.closest(\n      config['dom.productView'],\n    );\n    if (!productView) return undefined;\n\n    const productId = (productView.querySelector('input[name=product_id]') as any)?.value;\n    const quantity = (productView.querySelector('[name=\"qty[]\"]') as any)?.value ?? 1;\n    const sku = (productView.querySelector('[data-product-sku]')?.innerHTML ?? '').trim();\n    const form = productView.querySelector('form[data-cart-item-add]') as HTMLFormElement;\n    return {\n      productId: Number(productId),\n      sku,\n      quantity: Number(quantity),\n      optionSelections: serialize(form),\n    };\n  };\n\n  const addToShoppingList = ({\n    shoppingListId,\n    product,\n  }: {\n    shoppingListId: string | number;\n    product: CustomFieldItems;\n  }) =>\n    addProductsToShoppingList({\n      isB2BUser,\n      customerGroupId,\n      shoppingListId,\n      items: [product],\n    });\n\n  return { setOpenPageFn, getShoppingListItem, addToShoppingList };\n}\n\nfunction PDP() {\n  const { setOpenPageFn, getShoppingListItem, addToShoppingList } = useData();\n  const b3Lang = useB3Lang();\n\n  const [openShoppingList, setOpenShoppingList] = useState<boolean>(true);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState<boolean>(false);\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const displayAddedToShoppingListAlert = useAddedToShoppingListAlert();\n\n  const navigate = useNavigate();\n\n  const handleShoppingClose = () => {\n    window.scrollTo(0, 0);\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(false);\n    navigate('/');\n    setOpenPageFn?.({\n      isOpen: false,\n      openUrl: '',\n    });\n  };\n\n  const handleShoppingConfirm = async (shoppingListId: string) => {\n    const product = getShoppingListItem();\n\n    if (!product) return;\n    try {\n      setIsRequestLoading(true);\n      await addToShoppingList({ shoppingListId, product })\n        .then(() => displayAddedToShoppingListAlert(shoppingListId))\n        .catch(addProductsToShoppingListErrorHandler);\n\n      handleShoppingClose();\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  return (\n    <>\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('pdp.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleShoppingConfirm}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isRequestLoading}\n        setLoading={setIsRequestLoading}\n      />\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default PDP;\n","class ValidationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\n\nexport default ValidationError;\n","import { globalSnackbar, ValidationError } from '@/utils';\n\nexport const addProductsToShoppingListErrorHandler = (error: Error) => {\n  const message =\n    error instanceof ValidationError ? error.message : 'Something went wrong. Please try again.';\n  globalSnackbar.error(message);\n};\n","import { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { globalSnackbar } from '@/utils';\n\nexport function useAddedToShoppingListAlert() {\n  const b3Lang = useB3Lang();\n  const setOpenPage = useAppSelector(({ global }) => global.setOpenPageFn);\n\n  const gotoShoppingDetail = (id: string) =>\n    setOpenPage?.({\n      isOpen: true,\n      openUrl: `/shoppingList/${id}`,\n      params: {\n        shoppingListBtn: 'add',\n      },\n    });\n\n  return (id: string) => {\n    globalSnackbar.success(b3Lang('shoppingList.addToShoppingList.productsAdded'), {\n      action: {\n        label: b3Lang('pdp.notification.viewShoppingList'),\n        onClick: () => gotoShoppingDetail(id),\n      },\n    });\n  };\n}\n"],"names":["setOpenPageFn","getShoppingListItem","addToShoppingList","state","shoppingListClickNode","useContext","GlobalContext","customerGroupId","useAppSelector","company","customer","platform","global","storeInfo","isB2BUser","isB2BUserSelector","window","b2b","utils","shoppingList","itemFromCurrentPage","productView","closest","config","productId","querySelector","value","quantity","sku","innerHTML","trim","form","Number","optionSelections","serialize","shoppingListId","product","addProductsToShoppingList","items","useData","b3Lang","useB3Lang","openShoppingList","setOpenShoppingList","useState","isOpenCreateShopping","setIsOpenCreateShopping","isRequestLoading","setIsRequestLoading","displayAddedToShoppingListAlert","useAddedToShoppingListAlert","navigate","useNavigate","handleShoppingClose","scrollTo","isOpen","openUrl","handleCloseShoppingClick","jsxs","Fragment","children","jsx","OrderShoppingList","dialogTitle","onClose","onConfirm","async","then","catch","addProductsToShoppingListErrorHandler","onCreate","handleOpenCreateDialog","isLoading","setLoading","CreateShoppingList","open","onChange","handleCreateShoppingClick","ValidationError","Error","constructor","message","super","this","name","exports","error","globalSnackbar","setOpenPage","id","success","action","label","onClick","params","shoppingListBtn","gotoShoppingDetail","currency_code","currencyCode","getActiveCurrencyInfo","companyId","store","getState","companyInfo","productsSearch","searchProducts","productIds","map","productsInfo","conversionProductsList","products","index","length","allOptions","requiredOptions","variants","variantId","vId","find","item","variant_id","optionList","getProductOptionList","isValid","isAllRequiredOptionFilled","newOptionLists","getValidOptionsList","push","addProductToShoppingList","addProductToBcShoppingList"],"mappings":"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"}