{"version":3,"file":"B3MasqueradeGlobalTip-CshbMvMx.js","sources":["../../src/components/outSideComponents/B3MasqueradeGlobalTip.tsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport {\n  Group as GroupIcon,\n  KeyboardArrowLeft as KeyboardArrowLeftIcon,\n  KeyboardArrowRight as KeyboardArrowRightIcon,\n} from '@mui/icons-material';\nimport { Box, Button, SnackbarOrigin, SxProps } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Cookies from 'js-cookie';\n\nimport {\n  CHECKOUT_URL,\n  END_MASQUERADE_DEFAULT_VALUE,\n  TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n} from '@/constants';\nimport { useGetButtonText } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport useStorageState from '@/hooks/useStorageState';\nimport { useB3Lang } from '@/lib/lang';\nimport { type SetOpenPage } from '@/pages/SetOpenPage';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { superAdminEndMasquerade } from '@/shared/service/b2b';\nimport { deleteCart } from '@/shared/service/bc/graphql/cart';\nimport { clearMasqueradeCompany, setCartNumber, useAppDispatch, useAppSelector } from '@/store';\n\nimport { ConfirmMasqueradeDialog } from '../ConfirmMasqueradeDialog';\n\nimport {\n  getContrastColor,\n  getLocation,\n  getPosition,\n  getStyles,\n  setMUIMediaStyle,\n  splitCustomCssValue,\n} from './utils/b3CustomStyles';\n\ninterface B3MasqueradeGlobalTipProps {\n  isOpen: boolean;\n  setOpenPage: SetOpenPage;\n}\n\nconst bottomHeightPage = ['shoppingList/', 'purchased-products'];\n\nfunction useData() {\n  const customerId = useAppSelector(({ company }) => company.customer.id);\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const {\n    state: { masqueradeButton },\n  } = useContext(CustomStyleContext);\n\n  return {\n    customerId,\n    b2bId,\n    salesRepCompanyId,\n    salesRepCompanyName,\n    isAgenting,\n    masqueradeButton,\n    cartNumber,\n  };\n}\n\nexport default function B3MasqueradeGlobalTip(props: B3MasqueradeGlobalTipProps) {\n  const { isOpen, setOpenPage } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmEndActing, setConfirmEndActing] = useState(false);\n  const dispatch = useAppDispatch();\n  const {\n    customerId,\n    b2bId,\n    salesRepCompanyId,\n    salesRepCompanyName,\n    isAgenting,\n    masqueradeButton,\n    cartNumber,\n  } = useData();\n  const { hash, href } = window.location;\n\n  const b3Lang = useB3Lang();\n\n  const {\n    text = '',\n    color = '',\n    customCss = '',\n    location = 'bottomLeft',\n    horizontalPadding = '',\n    verticalPadding = '',\n  } = masqueradeButton;\n\n  const buttonLabel = useGetButtonText(\n    TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n    text,\n    END_MASQUERADE_DEFAULT_VALUE,\n  );\n\n  const isAddBottom = bottomHeightPage.some((item: string) => hash.includes(item));\n\n  const [isExpansion, setExpansion] = useStorageState<boolean>(\n    'sf-isMasqueradeTipExpansion',\n    true,\n    sessionStorage,\n  );\n  const [isMobile] = useMobile();\n\n  const endActing = async () => {\n    setIsLoading(true);\n    if (typeof b2bId === 'number') {\n      await superAdminEndMasquerade(Number(salesRepCompanyId));\n    }\n\n    const cartEntityId = Cookies.get('cartId');\n    if (cartEntityId) {\n      await deleteCart({ deleteCartInput: { cartEntityId } });\n      Cookies.remove('cartId');\n      dispatch(setCartNumber(0));\n    }\n\n    setIsLoading(false);\n    dispatch(clearMasqueradeCompany());\n    setOpenPage({\n      isOpen: true,\n      openUrl: '/dashboard',\n    });\n  };\n\n  const onEndActing = async () => {\n    if (cartNumber > 0) {\n      setConfirmEndActing(true);\n    } else {\n      await endActing();\n    }\n  };\n\n  if (href.includes(CHECKOUT_URL) || !customerId) return null;\n\n  if (!isAgenting) return null;\n\n  const defaultLocation: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n  };\n\n  let sx: SxProps = {};\n\n  if (isMobile && isOpen) {\n    sx = {\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      borderRadius: '0px',\n    };\n  } else if (!isMobile && isAddBottom) {\n    sx = {\n      bottom: '90px !important',\n    };\n  }\n\n  const cssInfo = splitCustomCssValue(customCss);\n  const {\n    cssValue,\n    mediaBlocks,\n  }: {\n    cssValue: string;\n    mediaBlocks: string[];\n  } = cssInfo;\n  const MUIMediaStyle = setMUIMediaStyle(mediaBlocks);\n\n  const customStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n    padding: '0',\n    ...getStyles(cssValue),\n  };\n\n  const isMobileCustomStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n  };\n\n  const customBuyerPortalPagesStyles: SxProps = {\n    bottom: '24px',\n    left: '24px',\n    right: 'auto',\n    top: 'unset',\n  };\n\n  return (\n    <>\n      {!isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '99999999993',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Button\n            sx={{\n              height: '42px',\n              marginTop: '10px',\n              ...customStyles,\n              ...MUIMediaStyle,\n            }}\n            onClick={onEndActing}\n            variant=\"contained\"\n            startIcon={<GroupIcon />}\n          >\n            {salesRepCompanyName}\n          </Button>\n        </Snackbar>\n      )}\n\n      {!isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            fontSize: '16px',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n            ...sx,\n            ...customStyles,\n            ...MUIMediaStyle,\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            {!isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 400,\n                    }}\n                  >\n                    {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 500,\n                      fontSize: '13px',\n                      cursor: 'pointer',\n                    }}\n                    onClick={onEndActing}\n                  >\n                    {buttonLabel}\n                  </Box>\n                )}\n\n                {isExpansion ? (\n                  <KeyboardArrowLeftIcon\n                    onClick={() => setExpansion(false)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                ) : (\n                  <KeyboardArrowRightIcon\n                    onClick={() => setExpansion(true)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                )}\n              </Box>\n            )}\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...customStyles,\n            ...customBuyerPortalPagesStyles,\n            ...sx,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n              }}\n            >\n              <GroupIcon\n                sx={{\n                  mr: '12px',\n                }}\n              />\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 400,\n                  }}\n                >\n                  {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                </Box>\n              )}\n              <Box\n                sx={{\n                  fontWeight: '600',\n                  m: '0 15px 0 10px',\n                }}\n              >\n                {salesRepCompanyName}\n              </Box>\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 500,\n                    fontSize: '13px',\n                    cursor: 'pointer',\n                  }}\n                  onClick={onEndActing}\n                >\n                  {buttonLabel}\n                </Box>\n              )}\n\n              {isExpansion ? (\n                <KeyboardArrowLeftIcon\n                  onClick={() => setExpansion(false)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              ) : (\n                <KeyboardArrowRightIcon\n                  onClick={() => setExpansion(true)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              )}\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...sx,\n            ...isMobileCustomStyles,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n                width: '100%',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n              </Box>\n\n              <Box\n                sx={{\n                  fontWeight: 500,\n                  fontSize: '13px',\n                  cursor: 'pointer',\n                }}\n                onClick={onEndActing}\n              >\n                {buttonLabel}\n              </Box>\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n      <ConfirmMasqueradeDialog\n        title={b3Lang('dashboard.masqueradeModal.title.end')}\n        isOpen={confirmEndActing}\n        isRequestLoading={isLoading}\n        handleClose={() => setConfirmEndActing(false)}\n        handleConfirm={async () => {\n          await endActing();\n          setConfirmEndActing(false);\n        }}\n      />\n    </>\n  );\n}\n"],"names":["bottomHeightPage","useData","customerId","useAppSelector","company","b2bId","salesRepCompanyId","b2bFeatures","isAgenting","cartNumber","global","salesRepCompanyName","masqueradeButton","useContext","CustomStyleContext","B3MasqueradeGlobalTip","props","isOpen","setOpenPage","isLoading","setIsLoading","useState","confirmEndActing","setConfirmEndActing","dispatch","useAppDispatch","hash","href","b3Lang","useB3Lang","text","color","customCss","location","horizontalPadding","verticalPadding","buttonLabel","useGetButtonText","TRANSLATION_MASQUERADE_BUTTON_VARIABLE","END_MASQUERADE_DEFAULT_VALUE","isAddBottom","item","isExpansion","setExpansion","useStorageState","isMobile","useMobile","endActing","superAdminEndMasquerade","cartEntityId","Cookies","deleteCart","setCartNumber","clearMasqueradeCompany","onEndActing","CHECKOUT_URL","defaultLocation","sx","cssInfo","splitCustomCssValue","cssValue","mediaBlocks","MUIMediaStyle","setMUIMediaStyle","customStyles","getContrastColor","getStyles","isMobileCustomStyles","customBuyerPortalPagesStyles","jsxs","Fragment","jsx","Snackbar","getPosition","getLocation","Button","GroupIcon","Box","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","ConfirmMasqueradeDialog"],"mappings":"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"}