{"version":3,"file":"getQuoteExtraFields-legacy-CAC5l3Az.js","sources":["../../src/components/B3CollapseContainer.tsx","../../src/pages/quote/components/QuoteInfo.tsx","../../src/pages/quote/components/QuoteNote.tsx","../../src/pages/quote/components/QuoteAttachment.tsx","../../src/pages/quote/components/FileUpload.tsx","../../src/pages/quote/style.ts","../../src/pages/quote/components/QuoteInfoAndExtrafieldsItem.tsx","../../src/pages/quote/utils/getQuoteExtraFields.ts"],"sourcesContent":["import { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\nimport { Box, Collapse, Typography } from '@mui/material';\n\ninterface CollapseContainerProps {\n  title?: string | ReactElement;\n  header?: ReactNode;\n  defaultOpen?: boolean;\n  children: ReactNode;\n  handleOnChange?: (open: boolean) => void;\n}\n\nexport default function B3CollapseContainer(props: CollapseContainerProps) {\n  const { children, title = '', header, defaultOpen = false, handleOnChange } = props;\n\n  const [open, setOpen] = useState(defaultOpen);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  useEffect(() => {\n    if (handleOnChange) handleOnChange(open);\n  }, [handleOnChange, open]);\n\n  useEffect(() => {\n    if (defaultOpen) {\n      setOpen(defaultOpen);\n    }\n  }, [defaultOpen]);\n\n  return (\n    <Box>\n      <Box\n        onClick={handleClick}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          cursor: 'pointer',\n          alignItems: 'center',\n        }}\n      >\n        {header || <Typography variant=\"h5\">{title}</Typography>}\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </Box>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {children}\n      </Collapse>\n    </Box>\n  );\n}\n","import { useId } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport {\n  BillingAddress,\n  ContactInfo,\n  QuoteInfoAndExtrafieldsItemProps,\n  ShippingAddress,\n} from '@/types/quotes';\n\nimport Container from '../style';\n\nimport QuoteInfoAndExtrafieldsItem from './QuoteInfoAndExtrafieldsItem';\n\ninterface QuoteInfoItemType {\n  [key: string]: string;\n}\ninterface InfoProps {\n  contactInfo: ContactInfo;\n  quoteAndExtraFieldsInfo: QuoteInfoAndExtrafieldsItemProps;\n  shippingAddress: ShippingAddress;\n  billingAddress: BillingAddress;\n  handleEditInfoClick?: () => void;\n  status?: string;\n}\n\ntype Keys = string | string[];\n\nconst contactInfoKeys: string[] = ['name', 'email', 'companyName', 'phoneNumber'];\n\nconst addressVerifyKeys: string[] = [\n  'label',\n  'firstName',\n  'lastName',\n  'company',\n  'address',\n  'apartment',\n  'city',\n  'state',\n  'zipCode',\n  'country',\n  'phoneNumber',\n];\n\nconst addressKeys: Keys[] = [\n  'label',\n  ['firstName', 'lastName'],\n  'company',\n  'address',\n  'apartment',\n  ['city', 'state', 'zipCode', 'country'],\n  'phoneNumber',\n];\n\ninterface QuoteInfoItemProps {\n  flag?: string;\n  title: string;\n  info: QuoteInfoItemType;\n  status?: string;\n}\n\nfunction QuoteInfoItem({ flag, title, info, status }: QuoteInfoItemProps) {\n  const keyTable = flag === 'info' ? contactInfoKeys : addressKeys;\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const noAddressText =\n    status === 'Draft'\n      ? `Please add ${flag === 'Billing' ? 'billing' : 'shipping'} address `\n      : `No ${flag === 'Billing' ? 'billing' : 'shipping'} address`;\n\n  const isComplete =\n    flag !== 'info' ? addressVerifyKeys.some((item: string) => info && !!info[item]) : false;\n\n  const infoPaddingLeft = flag === 'info' || isMobile ? 0 : '10px';\n  const titleId = useId();\n\n  return (\n    <Box\n      aria-labelledby={titleId}\n      role=\"article\"\n      sx={{\n        width: isMobile || flag === 'info' ? '100%' : '33.3%',\n        paddingLeft: infoPaddingLeft,\n      }}\n    >\n      <Typography\n        id={titleId}\n        sx={{\n          fontWeight: 400,\n          fontSize: '24px',\n          height: '32px',\n        }}\n      >\n        {title}\n      </Typography>\n      <Box\n        sx={{\n          p: '15px 0',\n        }}\n      >\n        {(isComplete || flag === 'info') &&\n          JSON.stringify(info) !== '{}' &&\n          keyTable.map((list: Keys) => {\n            if (list === 'quoteTitle') {\n              return status === 'Draft' ? (\n                <Typography\n                  sx={{\n                    wordBreak: 'break-all',\n                  }}\n                  key={list}\n                  variant=\"body1\"\n                >\n                  {`${b3Lang('quoteDraft.quoteInfo.quoteTitle')}${info[list] || ''}`}\n                </Typography>\n              ) : (\n                ''\n              );\n            }\n\n            if (typeof list === 'string') {\n              return (\n                <Typography key={list} variant=\"body1\">\n                  {(info && info[list]) || ''}\n                </Typography>\n              );\n            }\n\n            return (\n              <Typography key={`${list}`} variant=\"body1\">\n                {list.map((item: string, index: number) => {\n                  if (index === list.length - 1) {\n                    return info[item] || '';\n                  }\n                  if (item === 'firstName') return `${info[item] || ''} `;\n                  return info[item] ? `${info[item] || ''}, ` : '';\n                })}\n              </Typography>\n            );\n          })}\n\n        {!isComplete && flag !== 'info' && <Box>{noAddressText}</Box>}\n      </Box>\n    </Box>\n  );\n}\n\nfunction QuoteInfo({\n  quoteAndExtraFieldsInfo,\n  contactInfo,\n  shippingAddress,\n  billingAddress,\n  handleEditInfoClick,\n  status,\n}: InfoProps) {\n  const b3Lang = useB3Lang();\n  const [isMobile] = useMobile();\n\n  return (\n    <Container\n      flexDirection=\"column\"\n      xs={{\n        boxShadow:\n          '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n        borderRadius: '4px',\n      }}\n    >\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexDirection: isMobile ? 'column' : 'row',\n        }}\n      >\n        <Box\n          sx={{\n            width: isMobile ? '100%' : '33.3%',\n          }}\n        >\n          <QuoteInfoItem\n            title={b3Lang('quoteDraft.contactInfo.contact')}\n            flag=\"info\"\n            status={status}\n            info={contactInfo as unknown as QuoteInfoItemType}\n          />\n          <QuoteInfoAndExtrafieldsItem status={status} quoteInfo={quoteAndExtraFieldsInfo} />\n        </Box>\n\n        <QuoteInfoItem\n          title={b3Lang('global.quoteInfo.billing')}\n          flag=\"Billing\"\n          status={status}\n          info={billingAddress as unknown as QuoteInfoItemType}\n        />\n\n        <QuoteInfoItem\n          title={b3Lang('global.quoteInfo.shipping')}\n          flag=\"Shipping\"\n          status={status}\n          info={shippingAddress as unknown as QuoteInfoItemType}\n        />\n      </Box>\n      {handleEditInfoClick && (\n        <CustomButton\n          sx={{\n            mt: '10px',\n            mb: '15px',\n          }}\n          onClick={handleEditInfoClick}\n          variant=\"outlined\"\n        >\n          {b3Lang('global.quoteInfo.editInfo')}\n        </CustomButton>\n      )}\n    </Container>\n  );\n}\n\nexport default QuoteInfo;\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Card, CardContent, TextField, Typography } from '@mui/material';\n\nimport { B3CollapseContainer } from '@/components';\nimport { useB3Lang } from '@/lib/lang';\nimport {\n  isB2BUserSelector,\n  rolePermissionSelector,\n  setDraftQuoteInfoNote,\n  store,\n  useAppSelector,\n} from '@/store';\n\ninterface QuoteNoteProps {\n  quoteStatus?: string | number;\n  quoteNotes?: string;\n}\n\nexport default function QuoteNote(props: QuoteNoteProps) {\n  const b3Lang = useB3Lang();\n  const { quoteStatus, quoteNotes = '' } = props;\n\n  const [noteText, setNoteText] = useState('');\n  const [defaultOpen, setDefaultOpen] = useState(false);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n\n  const quotesActionsPermission = isB2BUser ? b2bPermissions.quotesCreateActionsPermission : true;\n\n  const handleNoteTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setNoteText(event?.target.value || '');\n    store.dispatch(setDraftQuoteInfoNote(event?.target.value || ''));\n  };\n\n  useEffect(() => {\n    const note = store.getState().quoteInfo.draftQuoteInfo.note || '';\n\n    setNoteText(note);\n  }, []);\n\n  useEffect(() => {\n    store.dispatch(setDraftQuoteInfoNote(noteText || ''));\n  }, [noteText]);\n\n  useEffect(() => {\n    if (quoteNotes) setDefaultOpen(true);\n  }, [quoteNotes]);\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer\n          title={\n            quoteStatus && quoteStatus === 'Draft'\n              ? b3Lang('global.quoteNote.message')\n              : b3Lang('global.quoteNote.notes')\n          }\n          defaultOpen={defaultOpen}\n        >\n          <Box\n            sx={{\n              padding: '16px 0',\n            }}\n          >\n            {quoteStatus && quoteStatus === 'Draft' && (\n              <Box\n                sx={{\n                  fontSize: '16px',\n                  color: 'rgba(0, 0, 0, 0.38)',\n                  mb: '16px',\n                }}\n              >\n                {b3Lang('global.quoteNote.messageNote')}\n              </Box>\n            )}\n            {quoteNotes ? (\n              <Typography\n                variant=\"body1\"\n                style={{\n                  whiteSpace: 'pre-line',\n                  maxHeight: '400px',\n                  overflow: 'auto',\n                }}\n              >\n                {quoteNotes}\n              </Typography>\n            ) : (\n              <Box>\n                {quotesActionsPermission ? (\n                  <TextField\n                    multiline\n                    fullWidth\n                    rows={5}\n                    value={noteText}\n                    onChange={handleNoteTextChange}\n                    label={b3Lang('global.quoteNote.typeMessage')}\n                    size=\"small\"\n                    variant=\"filled\"\n                    sx={{\n                      '& .MuiFormLabel-root': {\n                        color: 'rgba(0, 0, 0, 0.38)',\n                      },\n                    }}\n                  />\n                ) : null}\n              </Box>\n            )}\n          </Box>\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { Box, Card, CardContent } from '@mui/material';\n\nimport { B3CollapseContainer } from '@/components';\nimport { useRole } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { quoteDetailAttachFileCreate, quoteDetailAttachFileDelete } from '@/shared/service/b2b';\nimport { setDraftQuoteInfo, useAppDispatch, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\n\nimport FileUpload, { FileObjects } from './FileUpload';\n\ninterface UpLoaddingProps extends HTMLInputElement {\n  setUploadLoadding: (flag: boolean) => void;\n}\n\ninterface QuoteAttachmentProps {\n  allowUpload?: boolean;\n  defaultFileList?: FileObjects[];\n  status?: number;\n  quoteId?: number;\n}\n\nexport default function QuoteAttachment(props: QuoteAttachmentProps) {\n  const { allowUpload = true, defaultFileList = [], status, quoteId } = props;\n  const b3Lang = useB3Lang();\n  const dispatch = useAppDispatch();\n\n  const firstName = useAppSelector(({ company }) => company.customer.firstName);\n  const lastName = useAppSelector(({ company }) => company.customer.lastName);\n  const draftQuoteInfo = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteInfo);\n\n  const [roleText] = useRole();\n\n  const [fileList, setFileList] = useState<FileObjects[]>([]);\n\n  const uploadRef = useRef<UpLoaddingProps | null>(null);\n\n  useEffect(() => {\n    if (status === 0) {\n      const { fileInfo = [] }: CustomFieldItems = draftQuoteInfo || {};\n\n      setFileList(typeof fileInfo !== 'object' ? [] : fileInfo);\n    } else if (defaultFileList.length) {\n      setFileList(defaultFileList);\n    }\n    // disabling as it throws render errors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultFileList.length, status]);\n\n  const saveQuoteInfo = (newFileInfo: FileObjects[]) => {\n    if (draftQuoteInfo) {\n      const newQuoteInfo = {\n        ...draftQuoteInfo,\n        fileInfo: newFileInfo,\n      };\n      dispatch(setDraftQuoteInfo(newQuoteInfo));\n    }\n  };\n\n  const handleChange = async (file: FileObjects) => {\n    try {\n      let newFileList: FileObjects[] = [];\n      if (status !== 0) {\n        const createFile: FileObjects = {\n          fileName: file.fileName,\n          fileType: file.fileType,\n          fileUrl: file.fileUrl,\n          fileSize: file.fileSize,\n        };\n        const {\n          quoteAttachFileCreate: { attachFiles },\n        } = await quoteDetailAttachFileCreate({\n          fileList: [\n            {\n              ...createFile,\n            },\n          ],\n          quoteId,\n        });\n\n        createFile.id = attachFiles[0].id;\n        newFileList = [\n          {\n            ...createFile,\n            title: b3Lang('global.quoteAttachment.uploadedByCustomer', {\n              createdBy: attachFiles[0].createdBy,\n            }),\n            hasDelete: true,\n          },\n          ...fileList,\n        ];\n      } else {\n        newFileList = [\n          {\n            ...file,\n            title: b3Lang('global.quoteAttachment.uploadedByCustomerWithName', {\n              firstName,\n              lastName,\n            }),\n            hasDelete: true,\n          },\n          ...fileList,\n        ];\n\n        saveQuoteInfo(newFileList);\n      }\n      setFileList(newFileList);\n    } finally {\n      uploadRef.current?.setUploadLoadding(false);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      uploadRef.current?.setUploadLoadding(true);\n      const deleteFile = fileList.find((file) => file.id === id);\n      const newFileList = fileList.filter((file) => file.id !== id);\n      if (status !== 0 && deleteFile) {\n        await quoteDetailAttachFileDelete({\n          fileId: deleteFile?.id || '',\n          quoteId,\n        });\n      } else {\n        saveQuoteInfo(newFileList);\n      }\n      setFileList(newFileList);\n    } finally {\n      uploadRef.current?.setUploadLoadding(false);\n    }\n  };\n\n  const limitUploadFn = () => {\n    const customerFiles = fileList.filter(\n      (file: FileObjects) => file?.title && file.title.includes('by customer'),\n    );\n    if (customerFiles.length >= 3) {\n      snackbar.error(b3Lang('global.quoteAttachment.maxFilesMessage'));\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer title={b3Lang('global.quoteAttachment.title')}>\n          <Box>\n            <FileUpload\n              ref={uploadRef}\n              requestType={roleText !== 'b2b' ? 'customerQuoteAttachedFile' : 'quoteAttachedFile'}\n              isEndLoadding\n              fileList={fileList}\n              limitUploadFn={limitUploadFn}\n              onchange={handleChange}\n              onDelete={handleDelete}\n              allowUpload={allowUpload}\n            />\n          </Box>\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { forwardRef, Ref, useImperativeHandle, useState } from 'react';\nimport { DropzoneArea } from 'react-mui-dropzone';\nimport styled from '@emotion/styled';\nimport {\n  AttachFile as AttachFileIcon,\n  Delete as DeleteIcon,\n  Help as HelpIcon,\n} from '@mui/icons-material';\nimport { Box, Tooltip, Typography, useTheme } from '@mui/material';\nimport noop from 'lodash-es/noop';\nimport { v1 as uuid } from 'uuid';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useB3Lang } from '@/lib/lang';\nimport { uploadB2BFile } from '@/shared/service/b2b';\nimport { snackbar } from '@/utils';\n\nimport { FILE_UPLOAD_ACCEPT_TYPE } from '../../../constants';\n\nconst FileUploadContainer = styled(Box)(({ style }) => ({\n  '& .file-upload-area': {\n    cursor: 'pointer',\n    '& .MuiDropzoneArea-textContainer': {\n      display: 'flex',\n      alignItems: 'center',\n      color: style?.color || '#1976D2',\n    },\n    '& .MuiDropzoneArea-text': {\n      order: 1,\n      textTransform: 'uppercase',\n      fontWeight: 500,\n      fontSize: '14px',\n      lineHeight: '24px',\n    },\n  },\n}));\n\nconst FileListItem = styled(Box)((props: CustomFieldItems) => ({\n  display: 'flex',\n  background: props.hasdelete === 'true' ? 'rgba(25, 118, 210, 0.3)' : 'rgba(0, 0, 0, 0.12)',\n  borderRadius: '18px',\n  padding: '6px 8px',\n  alignItems: 'center',\n  margin: '0 0 2px',\n  color: 'rgba(0, 0, 0, 0.54)',\n  '& .fileList-name-area': {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n  },\n  '& .fileList-name': {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    flexGrow: 1,\n    flexBasis: '100px',\n    maxWidth: '200px',\n    color: '#313440',\n    fontSize: '14px',\n    cursor: 'pointer',\n  },\n}));\n\nconst FileUserTitle = styled(Typography)({\n  marginBottom: '16px',\n  fontSize: '10px',\n  color: 'rgba(0, 0, 0, 0.38)',\n  padding: '0 12px',\n  textAlign: 'right',\n  wordBreak: 'break-word',\n});\n\nexport interface FileObjects {\n  id?: string;\n  fileName: string;\n  fileType: string;\n  fileUrl: string;\n  fileSize?: number;\n  title?: string;\n  hasDelete?: boolean;\n  isCustomer?: boolean;\n}\n\ninterface FileUploadProps {\n  title?: string;\n  tips?: string;\n  maxFileSize?: number;\n  fileNumber?: number;\n  acceptedFiles?: string[];\n  onchange?: (file: FileObjects) => void;\n  fileList: FileObjects[];\n  allowUpload?: boolean;\n  onDelete?: (id: string) => void;\n  limitUploadFn?: () => boolean;\n  isEndLoadding?: boolean;\n  requestType?: string;\n}\n\nconst AttachFile = styled(AttachFileIcon)(() => ({\n  transform: 'rotate(45deg)',\n  marginRight: '5px',\n}));\n\nfunction FileUpload(props: FileUploadProps, ref: Ref<unknown>) {\n  const b3Lang = useB3Lang();\n  const {\n    title = b3Lang('global.fileUpload.addAttachment'),\n    tips = b3Lang('global.fileUpload.maxFileSizeMessage'),\n    maxFileSize = 2097152, // 2MB\n    fileNumber = 3,\n    limitUploadFn,\n    acceptedFiles = FILE_UPLOAD_ACCEPT_TYPE,\n    onchange = noop,\n    fileList = [],\n    allowUpload = true,\n    onDelete = noop,\n    isEndLoadding = false,\n    requestType = 'quoteAttachedFile',\n  } = props;\n\n  const theme = useTheme();\n\n  const primaryColor = theme.palette.primary.main;\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useImperativeHandle(ref, () => ({\n    setUploadLoadding: (flag: boolean) => setLoading(flag),\n  }));\n\n  const getMaxFileSizeLabel = (maxSize: number) => {\n    if (maxSize / 1048576 > 1) {\n      return `${(maxSize / 1048576).toFixed(1)}MB`;\n    }\n    if (maxSize / 1024 > 1) {\n      return `${(maxSize / 1024).toFixed(1)}KB`;\n    }\n    return `${maxSize}B`;\n  };\n\n  const getRejectMessage = (rejectedFile: File, acceptedFiles: string[], maxFileSize: number) => {\n    const { size, type } = rejectedFile;\n\n    let isAcceptFileType = false;\n    acceptedFiles.forEach((acceptedFileType: string) => {\n      isAcceptFileType = new RegExp(acceptedFileType).test(type) || isAcceptFileType;\n    });\n\n    let message = '';\n    if (!isAcceptFileType) {\n      message = b3Lang('global.fileUpload.fileTypeNotSupported');\n    }\n\n    if (size > maxFileSize) {\n      message = b3Lang('global.fileUpload.fileSizeExceedsLimit', {\n        maxFileSize: getMaxFileSizeLabel(maxFileSize),\n      });\n    }\n\n    if (message) {\n      snackbar.error(message);\n    }\n\n    return message;\n  };\n\n  const getFileLimitExceedMessage = () => {\n    snackbar.error(\n      b3Lang('global.fileUpload.fileSizeExceedsLimit', {\n        maxFileSize: getMaxFileSizeLabel(maxFileSize),\n      }),\n    );\n    return '';\n  };\n\n  const handleChange = async (files: File[]) => {\n    const file = files.length > 0 ? files[0] : null;\n\n    if (file && limitUploadFn && limitUploadFn()) {\n      return;\n    }\n\n    if (!limitUploadFn && file && fileList.length >= fileNumber) {\n      snackbar.error(b3Lang('global.fileUpload.maxFileNumber', { fileNumber }));\n      return;\n    }\n\n    if (file) {\n      try {\n        setLoading(true);\n        const {\n          code,\n          data: fileInfo,\n          message,\n        } = await uploadB2BFile({\n          file,\n          type: requestType,\n        });\n        if (code === 200) {\n          onchange({\n            ...fileInfo,\n            id: uuid(),\n          });\n        } else {\n          snackbar.error(message);\n        }\n      } finally {\n        if (!isEndLoadding) {\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  const handleDelete = (id: string) => {\n    onDelete(id);\n  };\n\n  const downloadFile = (fileUrl: string) => {\n    if (fileUrl) {\n      window.open(fileUrl, '_blank');\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={loading}>\n      <Box\n        sx={{\n          padding: '12px 0 0',\n          width: '100%',\n        }}\n      >\n        <Box>\n          {fileList.map((file, index) => (\n            <Box key={file.id || index}>\n              <FileListItem hasdelete={(file?.hasDelete || '').toString()}>\n                <Box className=\"fileList-name-area\">\n                  <AttachFile />\n                  <Typography\n                    className=\"fileList-name\"\n                    onClick={() => {\n                      downloadFile(file.fileUrl);\n                    }}\n                  >\n                    {file.fileName}\n                  </Typography>\n                </Box>\n                {file.hasDelete && (\n                  <DeleteIcon\n                    sx={{\n                      cursor: 'pointer',\n                    }}\n                    onClick={() => {\n                      handleDelete(file?.id || '');\n                    }}\n                  />\n                )}\n              </FileListItem>\n              <FileUserTitle>{file.title || ''}</FileUserTitle>\n            </Box>\n          ))}\n        </Box>\n        {allowUpload && (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: '10px',\n            }}\n          >\n            <FileUploadContainer\n              style={{\n                color: primaryColor,\n              }}\n            >\n              <DropzoneArea\n                dropzoneClass=\"file-upload-area\"\n                Icon={AttachFile}\n                filesLimit={1}\n                onChange={handleChange}\n                showPreviews={false}\n                showPreviewsInDropzone={false}\n                maxFileSize={maxFileSize}\n                showAlerts={false}\n                dropzoneText={title}\n                getDropRejectMessage={getRejectMessage}\n                getFileLimitExceedMessage={getFileLimitExceedMessage}\n                acceptedFiles={acceptedFiles}\n              />\n            </FileUploadContainer>\n\n            <Tooltip\n              title={tips}\n              sx={{\n                fontSize: '20px',\n                color: 'rgba(0, 0, 0, 0.54)',\n              }}\n            >\n              <HelpIcon />\n            </Tooltip>\n          </Box>\n        )}\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default forwardRef(FileUpload);\n","import styled from '@emotion/styled';\n\ninterface ContainerProps {\n  padding?: string;\n  flexBasis?: string;\n  alignItems?: string;\n  backgroundColor?: string;\n  width?: string;\n  xs?: {\n    [key: string]: string | number;\n  };\n  flexDirection?:\n    | 'column'\n    | 'inherit'\n    | '-moz-initial'\n    | 'initial'\n    | 'revert'\n    | 'unset'\n    | 'column-reverse'\n    | 'row'\n    | 'row-reverse';\n}\n\nconst Container = styled('div')(\n  ({\n    padding = '1rem',\n    alignItems = 'flex-start',\n    flexDirection = 'row',\n    backgroundColor = 'white',\n    width = '100%',\n    xs,\n  }: ContainerProps) => ({\n    display: 'flex',\n    flexDirection,\n    alignItems,\n    padding,\n    width,\n    backgroundColor,\n    ...xs,\n  }),\n);\n\nexport default Container;\n","import { useId } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nimport { useB3Lang } from '@/lib/lang';\nimport { QuoteInfoAndExtrafieldsItemProps } from '@/types/quotes';\n\nimport { Base64 } from '../../../utils/b3Product/shared/config';\n\ninterface QuoteInfoAndExtrafieldsProps {\n  quoteInfo: QuoteInfoAndExtrafieldsItemProps;\n  status?: string;\n}\n\nfunction QuoteInfoAndExtrafieldsItem({ status, quoteInfo }: QuoteInfoAndExtrafieldsProps) {\n  const b3Lang = useB3Lang();\n\n  const {\n    info: { quoteTitle, referenceNumber },\n    extraFields = [],\n    recipients,\n  } = quoteInfo;\n\n  const titleId = useId();\n\n  return (\n    <Box\n      role=\"article\"\n      aria-labelledby={titleId}\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Typography\n        id={titleId}\n        sx={{\n          fontWeight: 400,\n          fontSize: '24px',\n          height: '32px',\n        }}\n      >\n        {b3Lang('quoteDraft.quoteInfo.title')}\n      </Typography>\n      <Box\n        sx={{\n          p: '15px 0',\n        }}\n      >\n        {(quoteTitle || status === 'Draft') && (\n          <Typography>{`${b3Lang('quoteDraft.quoteInfo.titleText')} ${quoteTitle}`}</Typography>\n        )}\n        {(referenceNumber || status === 'Draft') && (\n          <Typography>{`${b3Lang(\n            'quoteDraft.quoteInfo.referenceText',\n          )} ${referenceNumber}`}</Typography>\n        )}\n\n        {status === 'Draft' && !recipients.length ? (\n          <Typography>{b3Lang('quoteDraft.quoteInfo.ccEmailText')}</Typography>\n        ) : (\n          recipients.map((ccEmail) => (\n            <Typography\n              key={`ccEmail-${Base64.encode(ccEmail)}`}\n              sx={{ wordBreak: 'break-all' }}\n            >{`${b3Lang('quoteDraft.quoteInfo.ccEmailText')} ${ccEmail}`}</Typography>\n          ))\n        )}\n\n        {extraFields.map(\n          (field) =>\n            (field.value || status === 'Draft') && (\n              <Typography\n                key={`extraField-${field.fieldName}`}\n              >{`${field.fieldName}: ${field.value}`}</Typography>\n            ),\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuoteInfoAndExtrafieldsItem;\n","import { getQuoteExtraFieldsConfig } from '@/shared/service/b2b';\nimport { QuoteExtraFieldsOrigin, QuoteFormattedItemsProps } from '@/types/quotes';\nimport b2bLogger from '@/utils/b3Logger';\n\nconst handleConversionExtraItemFormat = (quoteExtraFields: QuoteExtraFieldsOrigin[]) => {\n  const formattedQuoteExtraFields = quoteExtraFields.map((item) => {\n    const { listOfValue } = item;\n\n    const currentItems: QuoteFormattedItemsProps = {\n      isExtraFields: true,\n      name: item.fieldName || '',\n      label: item.labelName || '',\n      required: item.isRequired,\n      default: item.defaultValue || '',\n      fieldType: item.fieldCategory || '',\n      xs: 6,\n      variant: 'filled',\n      size: 'small',\n      id: item.id,\n    };\n\n    switch (item.fieldCategory) {\n      case 'dropdown':\n        if (listOfValue) {\n          const options = listOfValue?.map((option) => ({\n            label: option,\n            value: option,\n          }));\n\n          if (options.length > 0) {\n            currentItems.options = options;\n          }\n        }\n\n        break;\n      case 'number':\n        currentItems.max = item.maximumValue || '';\n        break;\n      case 'multiline':\n        currentItems.rows = item.numberOfRows || '';\n        break;\n      default:\n        currentItems.maxLength = item.maximumLength || '';\n        break;\n    }\n\n    return currentItems;\n  });\n\n  return formattedQuoteExtraFields;\n};\n\nconst getB2BQuoteExtraFields = async () => {\n  let quoteExtraFieldsList: QuoteFormattedItemsProps[] = [];\n  try {\n    const { quoteExtraFieldsConfig } = await getQuoteExtraFieldsConfig();\n\n    const visibleFields = quoteExtraFieldsConfig.filter((item) => item.visibleToEnduser);\n\n    const formattedQuoteExtraFields = handleConversionExtraItemFormat(visibleFields);\n\n    quoteExtraFieldsList = formattedQuoteExtraFields;\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  return quoteExtraFieldsList;\n};\n\nexport default getB2BQuoteExtraFields;\n"],"names":["B3CollapseContainer","props","children","title","header","defaultOpen","handleOnChange","open","setOpen","useState","useEffect","Box","jsxs","onClick","handleClick","sx","display","justifyContent","cursor","alignItems","jsx","Typography","variant","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","quoteAndExtraFieldsInfo","contactInfo","shippingAddress","billingAddress","handleEditInfoClick","status","b3Lang","useB3Lang","isMobile","useMobile","Container","flexDirection","xs","boxShadow","borderRadius","width","QuoteInfoItem","flag","info","QuoteInfoAndExtrafieldsItem","quoteInfo","CustomButton","mt","mb","quoteStatus","quoteNotes","noteText","setNoteText","setDefaultOpen","isB2BUser","useAppSelector","isB2BUserSelector","b2bPermissions","rolePermissionSelector","quotesActionsPermission","quotesCreateActionsPermission","note","store","getState","draftQuoteInfo","dispatch","setDraftQuoteInfoNote","Card","CardContent","p","padding","fontSize","color","style","whiteSpace","maxHeight","overflow","TextField","multiline","fullWidth","rows","value","onChange","event","target","label","size","allowUpload","defaultFileList","quoteId","useAppDispatch","firstName","company","customer","lastName","roleText","useRole","fileList","setFileList","uploadRef","useRef","fileInfo","length","saveQuoteInfo","newFileInfo","newQuoteInfo","setDraftQuoteInfo","FileUpload","ref","requestType","isEndLoadding","limitUploadFn","filter","file","includes","snackbar","error","onchange","async","newFileList","createFile","fileName","fileType","fileUrl","fileSize","quoteAttachFileCreate","attachFiles","quoteDetailAttachFileCreate","id","createdBy","hasDelete","current","setUploadLoadding","onDelete","deleteFile","find","quoteDetailAttachFileDelete","fileId","FileUploadContainer","styled","order","textTransform","fontWeight","lineHeight","FileListItem","background","hasdelete","margin","flex","textOverflow","flexGrow","flexBasis","maxWidth","FileUserTitle","marginBottom","textAlign","wordBreak","AttachFile","AttachFileIcon","transform","marginRight","FileUpload$1","forwardRef","tips","maxFileSize","fileNumber","acceptedFiles","FILE_UPLOAD_ACCEPT_TYPE","noop","primaryColor","useTheme","palette","primary","main","loading","setLoading","useImperativeHandle","getMaxFileSizeLabel","maxSize","toFixed","B3Spin","isSpinning","map","index","toString","className","window","DeleteIcon","marginTop","DropzoneArea","dropzoneClass","Icon","filesLimit","files","code","data","message","uploadB2BFile","type","uuid","showPreviews","showPreviewsInDropzone","showAlerts","dropzoneText","getDropRejectMessage","getRejectMessage","rejectedFile","isAcceptFileType","forEach","acceptedFileType","RegExp","test","getFileLimitExceedMessage","Tooltip","HelpIcon","exports","backgroundColor","quoteTitle","referenceNumber","extraFields","recipients","titleId","useId","role","height","ccEmail","Base64","encode","field","fieldName","contactInfoKeys","addressVerifyKeys","addressKeys","keyTable","noAddressText","isComplete","some","item","infoPaddingLeft","paddingLeft","JSON","stringify","list","quoteExtraFieldsList","quoteExtraFieldsConfig","getQuoteExtraFieldsConfig","visibleFields","visibleToEnduser","listOfValue","currentItems","isExtraFields","name","labelName","required","isRequired","default","defaultValue","fieldType","fieldCategory","options","option","max","maximumValue","numberOfRows","maxLength","maximumLength","err","b2bLogger"],"mappings":"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"}