{"version":3,"file":"B3Layout-DCbQdYhT.js","sources":["../../src/components/CompanyCredit.tsx","../../src/components/layout/B3CloseAppButton.tsx","../../src/components/layout/B3Logo.tsx","../../src/components/B3DropDown.tsx","../../src/components/layout/B3AccountInfo.tsx","../../src/components/layout/B3CompanyHierarchy.tsx","../../src/components/layout/B3StatusNotification.tsx","../../src/components/layout/B3MainHeader.tsx","../../src/components/layout/B3Nav.tsx","../../src/components/layout/B3MobileLayout.tsx","../../src/components/layout/B3Layout.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Alert, Box } from '@mui/material';\n\nimport useStorageState from '@/hooks/useStorageState';\nimport { useB3Lang } from '@/lib/lang';\nimport { getCompanyCreditConfig } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\n\nconst permissionRoles = [0, 1, 2];\n\nfunction CompanyCredit() {\n  const b3Lang = useB3Lang();\n  const [isEnabled, setEnabled] = useState<boolean>(false);\n  const [isCloseCompanyCredit, setIsCloseCompanyCredit] = useStorageState<boolean>(\n    'sf-isCloseCompanyCredit',\n    false,\n    sessionStorage,\n  );\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  useEffect(() => {\n    const init = async () => {\n      if (isCloseCompanyCredit) return;\n\n      if (permissionRoles.includes(Number(role)) || (Number(role) === 3 && isAgenting)) {\n        const {\n          companyCreditConfig: { creditHold, creditEnabled },\n        } = await getCompanyCreditConfig();\n\n        setEnabled(creditHold && creditEnabled);\n      }\n    };\n\n    init();\n  }, [role, isAgenting, isCloseCompanyCredit]);\n\n  const handleCompanyCreditCloseClick = () => {\n    setIsCloseCompanyCredit(true);\n    setEnabled(false);\n  };\n\n  if (!isEnabled) return null;\n\n  return (\n    <Box\n      sx={{\n        margin: '1rem 0',\n      }}\n    >\n      <Alert variant=\"filled\" onClose={() => handleCompanyCreditCloseClick()} severity=\"warning\">\n        {b3Lang('global.companyCredit.alert')}\n      </Alert>\n    </Box>\n  );\n}\n\nexport default CompanyCredit;\n","import { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport useMobile from '@/hooks/useMobile';\nimport { GlobalContext } from '@/shared/global';\nimport { useAppSelector } from '@/store';\n\nimport { CloseBox, CloseBoxMobile, CloseButton } from '../styled';\n\nexport default function B3CloseAppButton() {\n  const [isMobile] = useMobile();\n\n  const setOpenPageFn = useAppSelector(({ global }) => global.setOpenPageFn);\n\n  const {\n    state: { isCloseGotoBCHome },\n  } = useContext(GlobalContext);\n  const navigate = useNavigate();\n\n  const handleCloseForm = () => {\n    if (isCloseGotoBCHome || window.location.search.includes('action=order_status')) {\n      window.location.href = '/';\n    } else {\n      navigate('/');\n      setOpenPageFn?.({\n        isOpen: false,\n        openUrl: '',\n      });\n    }\n    window.history.replaceState(null, '', window.location.pathname || '/');\n  };\n\n  const Box = isMobile ? CloseBoxMobile : CloseBox;\n\n  return (\n    <Box>\n      <CloseButton\n        sx={{\n          color: '#757371',\n        }}\n        onClick={handleCloseForm}\n      />\n    </Box>\n  );\n}\n","import { useContext } from 'react';\nimport { Box, ImageListItem } from '@mui/material';\n\nimport b2bLogo from '@/assets/b2bLogo.png';\nimport { useMobile } from '@/hooks';\nimport { GlobalContext } from '@/shared/global';\nimport { getAssetUrl } from '@/utils/getAssetUrl';\n\nexport default function B3Logo() {\n  const {\n    state: { logo },\n  } = useContext(GlobalContext);\n\n  const [isMobile] = useMobile();\n\n  return (\n    <Box\n      sx={\n        isMobile\n          ? {\n              height: '40px',\n              width: '140px',\n              '& li': {\n                height: '40px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: '1rem',\n              },\n              '& img': {\n                maxHeight: '40px',\n              },\n            }\n          : {\n              width: '200px',\n              height: '65px',\n              display: 'flex',\n              alignItems: 'center',\n              maxHeight: '65px',\n              '& img': {\n                maxHeight: '65px',\n              },\n            }\n      }\n    >\n      <ImageListItem\n        sx={{\n          maxWidth: '200px',\n          cursor: 'pointer',\n          '& .MuiImageListItem-img': {\n            objectFit: 'contain',\n            width: 'auto',\n          },\n        }}\n        onClick={() => {\n          window.location.href = '/';\n        }}\n      >\n        <img src={logo || getAssetUrl(b2bLogo)} alt=\"logo\" />\n      </ImageListItem>\n    </Box>\n  );\n}\n","import { forwardRef, Ref, useImperativeHandle, useRef, useState } from 'react';\nimport {\n  ArrowDropDown as ArrowDropDownIcon,\n  ArrowDropUp as ArrowDropUpIcon,\n} from '@mui/icons-material';\nimport { Box, MenuProps } from '@mui/material';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { useMobile } from '@/hooks';\nimport { disableLogoutButton } from '@/utils';\n\nexport interface ListItemProps {\n  name: string;\n  key: string | number;\n}\n\nexport interface DropDownHandle {\n  setOpenDropDown: () => void;\n}\n\ninterface B3DropDownProps extends Partial<MenuProps> {\n  width?: string;\n  list: Array<ListItemProps>;\n  title: string;\n  handleItemClick?: (key: string | number) => void;\n  value?: string;\n  menuRenderItemName?: (item: ListItemProps) => JSX.Element | string;\n}\n\nfunction B3DropDown(\n  {\n    width,\n    list,\n    title,\n    value,\n    handleItemClick,\n    menuRenderItemName = (item) => item.name,\n    ...menu\n  }: B3DropDownProps,\n  ref: Ref<DropDownHandle>,\n) {\n  const [isMobile] = useMobile();\n  const [isOpen, setIsOpen] = useState(false);\n  const listRef = useRef<HTMLDivElement | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    setOpenDropDown: () => setIsOpen(true),\n  }));\n\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        width: width || 'auto',\n      }}\n    >\n      {!disableLogoutButton ? (\n        <ListItemButton\n          ref={listRef}\n          onClick={() => setIsOpen(true)}\n          sx={{\n            pr: 0,\n          }}\n        >\n          <ListItemText\n            primary={title}\n            sx={{\n              '& span': {\n                fontWeight: isMobile ? 400 : 700,\n                color: '#333333',\n              },\n            }}\n          />\n          {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n        </ListItemButton>\n      ) : (\n        <ListItemText\n          primary={title}\n          sx={{\n            '& span': {\n              fontWeight: isMobile ? 400 : 700,\n              color: '#333333',\n            },\n          }}\n        />\n      )}\n      <Menu\n        anchorEl={listRef.current}\n        open={isOpen}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        id=\"customized-menu\"\n        keepMounted\n        onClose={close}\n        sx={{\n          '& .MuiList-root.MuiList-padding.MuiMenu-list': {\n            pt: isMobile ? 0 : '8px',\n            pb: isMobile ? 0 : '8px',\n            maxHeight: isMobile ? 'auto' : '200px',\n          },\n        }}\n        {...(menu || {})}\n      >\n        {list.length &&\n          list.map((item) => {\n            const { key } = item;\n            const color = value === key ? '#3385d6' : 'black';\n            return (\n              <MenuItem\n                sx={{\n                  color,\n                  minWidth: isMobile ? 'auto' : width || '155px',\n                }}\n                key={key}\n                onClick={() => {\n                  close();\n                  if (handleItemClick) handleItemClick(key);\n                }}\n              >\n                {menuRenderItemName(item)}\n              </MenuItem>\n            );\n          })}\n      </Menu>\n    </Box>\n  );\n}\n\nexport default forwardRef<DropDownHandle, B3DropDownProps>(B3DropDown);\n","import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\n\nimport B3DropDown, { ListItemProps } from '../B3DropDown';\n\ninterface ListProps {\n  [key: string]: string;\n}\n\nconst list: Array<ListProps> = [\n  {\n    name: 'Log out',\n    key: 'logout',\n    idLang: 'global.button.logout',\n  },\n];\n\ninterface B3AccountInfoProps {\n  closeSidebar?: (x: boolean) => void;\n}\n\nexport default function B3AccountInfo({ closeSidebar }: B3AccountInfoProps) {\n  const [isMobile] = useMobile();\n\n  const firstName = useAppSelector(({ company }) => company.customer.firstName);\n  const lastName = useAppSelector(({ company }) => company.customer.lastName);\n\n  const navigate = useNavigate();\n\n  const b3Lang = useB3Lang();\n\n  const handleItemClick = async (key: string | number) => {\n    const item = list.find((v) => v.key === key);\n\n    if (!item) return;\n\n    if (item.key === 'logout') {\n      navigate('/login?loginFlag=loggedOutLogin');\n    } else if (item.type === 'path' && item.key) {\n      navigate(item.key);\n    }\n    if (closeSidebar) {\n      closeSidebar(false);\n    }\n  };\n\n  const name = `${firstName}  ${lastName}`;\n\n  const newList: ListItemProps[] = useMemo(() => {\n    return list.map((item) => {\n      return {\n        key: item.key,\n        name: b3Lang(item.idLang),\n      };\n    });\n  }, [b3Lang]);\n\n  return (\n    <Box\n      sx={{\n        minWidth: '150px',\n        display: 'flex',\n        justifyContent: isMobile ? 'start' : 'end',\n        mr: '-5px',\n        fontSize: '16px',\n        color: '#333333',\n        textAlign: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <B3DropDown title={name} handleItemClick={handleItemClick} list={newList} />\n    </Box>\n  );\n}\n","import { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Check as CheckIcon } from '@mui/icons-material';\nimport { Box, Chip, Grid } from '@mui/material';\n\nimport { useB3Lang } from '@/lib/lang';\nimport HierarchyDialog from '@/pages/CompanyHierarchy/components/HierarchyDialog';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { setOpenCompanyHierarchyDropDown, useAppDispatch, useAppSelector } from '@/store';\nimport { CompanyHierarchyProps, PagesSubsidiariesPermissionProps } from '@/types';\n\nimport B3DropDown, { DropDownHandle, ListItemProps } from '../B3DropDown';\n\nconst chipInfo = {\n  currentInfo: {\n    langId: 'companyHierarchy.chip.currentCompany',\n  },\n  representingInfo: {\n    langId: 'companyHierarchy.chip.selectCompany',\n  },\n};\n\nfunction B3CompanyHierarchy() {\n  const b3Lang = useB3Lang();\n\n  const dispatch = useAppDispatch();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [currentRow, setCurrentRow] = useState<Partial<CompanyHierarchyProps> | null>(null);\n\n  const dropDownRef = useRef<DropDownHandle>(null);\n\n  const {\n    state: {\n      switchAccountButton: { color = '#ED6C02' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const { id: currentCompanyId } = useAppSelector(({ company }) => company.companyInfo);\n\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const { selectCompanyHierarchyId, companyHierarchyList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { isOpenCompanyHierarchyDropDown } = useAppSelector(({ global }) => global);\n\n  const isPagesSubsidiariesPermission = useMemo(() => {\n    return Object.keys(pagesSubsidiariesPermission).some(\n      (key) => pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps],\n    );\n  }, [pagesSubsidiariesPermission]);\n\n  useEffect(() => {\n    if (isOpenCompanyHierarchyDropDown && dropDownRef?.current) {\n      dropDownRef.current?.setOpenDropDown();\n    }\n  }, [isOpenCompanyHierarchyDropDown]);\n\n  const info = useMemo(() => {\n    const showTitleId = selectCompanyHierarchyId || currentCompanyId || salesRepCompanyId;\n\n    const title = companyHierarchyList.find(\n      (list) => Number(list.companyId) === Number(showTitleId),\n    )?.companyName;\n\n    const list: ListItemProps[] = companyHierarchyList.map((item) => ({\n      name: item.companyName,\n      key: item.companyId,\n    }));\n\n    return {\n      title,\n      list,\n    };\n  }, [selectCompanyHierarchyId, currentCompanyId, companyHierarchyList, salesRepCompanyId]);\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(setOpenCompanyHierarchyDropDown(false));\n  };\n  const handleRowClick = (key: number) => {\n    const item = info.list.find((list) => Number(list.key) === key);\n    if (!item) return;\n    setCurrentRow({\n      companyId: Number(item.key),\n      companyName: item.name,\n    });\n    setOpen(true);\n  };\n\n  const menuRenderItemName = (item: ListItemProps) => {\n    const { name, key } = item;\n\n    const selectId = selectCompanyHierarchyId || currentCompanyId || salesRepCompanyId;\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        sx={{\n          justifyContent: 'space-between',\n        }}\n      >\n        <Grid\n          sx={{\n            mr: 2,\n          }}\n        >\n          {name}\n        </Grid>\n        <Grid\n          sx={{\n            width: '20px',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          {key === Number(selectId) && <CheckIcon sx={{ fontSize: '1.2rem' }} />}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const { langId: chipLangId } = selectCompanyHierarchyId\n    ? chipInfo.representingInfo\n    : chipInfo.currentInfo;\n\n  if (!info?.list?.length || !isPagesSubsidiariesPermission) return null;\n\n  if (!currentCompanyId && !salesRepCompanyId) return null;\n\n  return (\n    <>\n      <Box\n        sx={{\n          minWidth: '100px',\n          display: 'flex',\n          justifyContent: 'start',\n          alignItems: 'center',\n          fontSize: '1rem',\n          color: '#333333',\n          '& .MuiListItemButton-root': {\n            paddingLeft: '0',\n          },\n        }}\n      >\n        <B3DropDown\n          ref={dropDownRef}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          menuRenderItemName={menuRenderItemName}\n          title={info?.title || ''}\n          handleItemClick={(item) => handleRowClick(Number(item))}\n          list={info?.list || []}\n        />\n\n        <Chip\n          label={b3Lang(chipLangId)}\n          size=\"small\"\n          sx={{\n            backgroundColor: selectCompanyHierarchyId ? color : 'primary.main',\n            color: 'white',\n            height: 24,\n            '& .MuiChip-label': {\n              px: 1,\n            },\n          }}\n        />\n      </Box>\n\n      <HierarchyDialog open={open} handleClose={handleClose} currentRow={currentRow} />\n    </>\n  );\n}\n\nexport default B3CompanyHierarchy;\n","import { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Alert, Box } from '@mui/material';\n\nimport { StatusNotifications } from '@/constants';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppDispatch, useAppSelector } from '@/store';\nimport { setLoginType } from '@/store/slices/company';\nimport { LoginTypes } from '@/types';\nimport { B3SStorage } from '@/utils';\n\ntype AlertColor = 'success' | 'info' | 'warning' | 'error';\n\ninterface B3StatusNotificationProps {\n  title: string;\n}\n\nconst B3StatusNotificationContainer = styled(Box)(() => ({\n  '& svg': {\n    color: '#FFFFFF',\n  },\n}));\n\nexport default function B3StatusNotification(props: B3StatusNotificationProps) {\n  const { title } = props;\n  const dispatch = useAppDispatch();\n  const b3Lang = useB3Lang();\n\n  const loginType = useAppSelector(({ company }) => company.customer.loginType);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const blockPendingAccountOrderCreation = B3SStorage.get('blockPendingAccountOrderCreation');\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n  const [tip, setTip] = useState<string>('');\n  const [isShow, setIsShow] = useState<boolean>(false);\n  const [type, setType] = useState<AlertColor>('success');\n  const [bcColor, setBcColor] = useState<string>('#2E7D32');\n\n  const handleCloseTip = () => {\n    dispatch(setLoginType(LoginTypes.WAITING_LOGIN));\n    setIsShow(false);\n  };\n\n  const action: CustomFieldItems = {};\n  if (Number(companyStatus) !== 0) {\n    action.onClose = handleCloseTip;\n  }\n\n  useEffect(() => {\n    const loginTypeStatus = Number(companyStatus) === 0 ? true : loginType === 1;\n\n    const showTip = role === 100 ? false : loginTypeStatus;\n    setIsShow(showTip);\n    if (showTip) {\n      if (Number(companyStatus) === 0) {\n        if (blockPendingAccountOrderCreation && blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingAndViewPriceBlocked));\n        }\n\n        if (blockPendingAccountOrderCreation && !blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingBlocked));\n        }\n\n        if (!blockPendingAccountOrderCreation && blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingViewPriceBlocked));\n        }\n\n        if (!blockPendingAccountOrderCreation && !blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingNotBlocked));\n        }\n        setType('info');\n        setBcColor('#0288D1');\n      }\n\n      if (Number(companyStatus) === 1) {\n        setTip(b3Lang(StatusNotifications.approvedTip));\n        setType('success');\n        setBcColor('#2E7D32');\n      }\n\n      if (Number(companyStatus) === 2) {\n        setTip(StatusNotifications.rejectedTip);\n        setType('warning');\n        setBcColor('#ED6C02');\n      }\n    }\n  }, [\n    blockPendingAccountOrderCreation,\n    blockPendingAccountViewPrice,\n    companyStatus,\n    loginType,\n    role,\n    b3Lang,\n  ]);\n\n  return isShow ? (\n    <B3StatusNotificationContainer\n      sx={{\n        mb: title ? '20px' : '0',\n      }}\n    >\n      <Alert\n        {...action}\n        severity={type || 'success'}\n        sx={{\n          color: '#FFFFFF',\n          backgroundColor: bcColor,\n        }}\n      >\n        {tip}\n      </Alert>\n    </B3StatusNotificationContainer>\n  ) : null;\n}\n","import { useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Grid, Typography } from '@mui/material';\n\nimport { CART_URL } from '@/constants';\nimport { dispatchEvent } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport { useB3Lang } from '@/lib/lang';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\n\nimport { getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\nimport B3AccountInfo from './B3AccountInfo';\nimport B3CompanyHierarchy from './B3CompanyHierarchy';\nimport B3StatusNotification from './B3StatusNotification';\n\nexport default function MainHeader({ title }: { title: string }) {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyInfo = useAppSelector(({ company }) => company.companyInfo);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const navigate = useNavigate();\n  const b3Lang = useB3Lang();\n  const [isMobile] = useMobile();\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const { isEnabledCompanyHierarchy } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isShowCart = isB2BUser ? purchasabilityPermission : true;\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const onCartClick = () => {\n    if (!dispatchEvent('on-click-cart-button')) {\n      return;\n    }\n\n    window.location.href = CART_URL;\n  };\n\n  useEffect(() => {\n    b3TriggerCartNumber();\n  }, []);\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          height: '70px',\n          alignItems: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            alignItems: 'center',\n            flexDirection: 'row',\n            display: 'flex',\n          }}\n        >\n          <Box\n            component=\"h4\"\n            sx={{\n              fontSize: '20px',\n              fontWeight: '500',\n              color: customColor || '#333333',\n              ml: 0,\n            }}\n          >\n            {Number(role) === 3 &&\n              (companyInfo?.companyName ||\n                salesRepCompanyName ||\n                b3Lang('global.B3MainHeader.superAdmin'))}\n          </Box>\n          {isEnabledCompanyHierarchy && <B3CompanyHierarchy />}\n        </Grid>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          {role !== 100 && <B3AccountInfo />}\n          <Box sx={{ marginLeft: '8px' }}>\n            {role === 100 && (\n              <Button\n                sx={{\n                  color: '#333333',\n                  fontWeight: 700,\n                  fontSize: '16px',\n                }}\n                onClick={() => {\n                  navigate('/login');\n                }}\n              >\n                {b3Lang('global.B3MainHeader.signIn')}\n              </Button>\n            )}\n            <Button\n              sx={{\n                color: '#333333',\n                fontWeight: 700,\n                fontSize: '16px',\n              }}\n              onClick={() => {\n                window.location.href = '/';\n              }}\n            >\n              {b3Lang('global.B3MainHeader.home')}\n            </Button>\n            {isShowCart && (\n              <Button\n                sx={{\n                  color: '#333333',\n                  fontWeight: 700,\n                  fontSize: '16px',\n                }}\n                onClick={onCartClick}\n              >\n                {b3Lang('global.B3MainHeader.cart')}\n                {cartNumber > 0 ? (\n                  <Typography\n                    id=\"cart-number-icon\"\n                    sx={{\n                      backgroundColor: '#1976D2',\n                      minWidth: '21px',\n                      height: '20px',\n                      color: '#FFFFFF',\n                      borderRadius: '64px',\n                      fontSize: '12px',\n                      fontWeight: '500',\n                      lineHeight: '20px',\n                      marginLeft: '3px',\n                      padding: '0px 6.5px',\n                    }}\n                  >\n                    {cartNumber}\n                  </Typography>\n                ) : null}\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n      {title && (\n        <Box\n          component=\"h3\"\n          sx={{\n            height: '40px',\n            m: '0',\n            fontSize: '34px',\n            fontWeight: 400,\n            lineHeight: '42px',\n            display: 'flex',\n            alignItems: 'end',\n            mb: '24px',\n            mt: isMobile ? 0 : '24px',\n            color: customColor,\n          }}\n        >\n          {title}\n        </Box>\n      )}\n      <B3StatusNotification title={title} />\n    </Box>\n  );\n}\n","import { useContext, useEffect, useMemo } from 'react';\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom';\nimport { Badge, List, ListItem, ListItemButton, ListItemText, useTheme } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { GlobalContext } from '@/shared/global';\nimport { type RouteItem } from '@/shared/routeList';\nimport { getAllowedRoutes } from '@/shared/routes';\nimport { store, useAppSelector } from '@/store';\nimport {\n  setCompanyHierarchyInfoModules,\n  setPagesSubsidiariesPermission,\n} from '@/store/slices/company';\nimport { PagesSubsidiariesPermissionProps } from '@/types';\nimport { B3SStorage } from '@/utils';\nimport { validatePermissionWithComparisonType } from '@/utils/b3CheckPermissions';\n\nimport { b3HexToRgb, getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\ninterface B3NavProps {\n  closeSidebar?: (x: boolean) => void;\n}\n\nconst getSubsidiariesPermission = (routes: RouteItem[]) => {\n  const subsidiariesPermission = routes.reduce((all, cur) => {\n    if (cur?.subsidiariesCompanyKey) {\n      const code = cur.permissionCodes?.includes(',')\n        ? cur.permissionCodes.split(',')[0].trim()\n        : cur.permissionCodes;\n\n      all[cur.subsidiariesCompanyKey] = validatePermissionWithComparisonType({\n        level: 3,\n        code,\n      });\n    }\n\n    return all;\n  }, {} as PagesSubsidiariesPermissionProps);\n\n  return subsidiariesPermission;\n};\n\nexport default function B3Nav({ closeSidebar }: B3NavProps) {\n  const [isMobile] = useMobile();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const b3Lang = useB3Lang();\n\n  const { dispatch } = useContext(DynamicallyVariableContext);\n  const role = useAppSelector(({ company }) => company.customer.role);\n\n  const { selectCompanyHierarchyId, isEnabledCompanyHierarchy } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { permissions } = useAppSelector(({ company }) => company);\n\n  const { state: globalState } = useContext(GlobalContext);\n  const { quoteDetailHasNewMessages, registerEnabled } = globalState;\n\n  const theme = useTheme();\n  const primaryColor = theme.palette.primary.main;\n\n  const jumpRegister = () => {\n    navigate('/register');\n    dispatch({\n      type: 'common',\n      payload: {\n        globalMessageDialog: {\n          open: false,\n          title: '',\n          message: '',\n          cancelText: 'Cancel',\n        },\n      },\n    });\n  };\n\n  const handleClick = (item: { configKey?: string; path: string }) => {\n    if (role === 100) {\n      dispatch({\n        type: 'common',\n        payload: {\n          globalMessageDialog: {\n            open: true,\n            title: 'Registration',\n            message:\n              item.configKey === 'shoppingLists'\n                ? 'Please create an account, or login to create a shopping list.'\n                : 'To receive full access to buyer portal, please register. It will take 2 minutes.',\n            cancelText: 'Cancel',\n            saveText: registerEnabled ? 'Register' : '',\n            saveFn: jumpRegister,\n          },\n        },\n      });\n\n      return;\n    }\n\n    navigate(item.path);\n    if (isMobile && closeSidebar) {\n      closeSidebar(false);\n    }\n  };\n\n  useEffect(() => {\n    let isHasSubsidiariesCompanyPermission = false;\n    const { hash } = window.location;\n    const url = hash.split('#')[1] || '';\n    const routes = getAllowedRoutes(globalState).filter((route) => route.isMenuItem);\n\n    if (url) {\n      const routeItem = getAllowedRoutes(globalState).find((item) => {\n        return matchPath(item.path, url);\n      });\n\n      if (routeItem && routeItem?.subsidiariesCompanyKey) {\n        const { permissionCodes } = routeItem;\n\n        const code = permissionCodes?.includes(',')\n          ? permissionCodes.split(',')[0].trim()\n          : permissionCodes;\n\n        isHasSubsidiariesCompanyPermission = validatePermissionWithComparisonType({\n          code,\n          level: 3,\n        });\n      }\n    }\n\n    const subsidiariesPermission = getSubsidiariesPermission(routes);\n\n    store.dispatch(setPagesSubsidiariesPermission(subsidiariesPermission));\n\n    store.dispatch(\n      setCompanyHierarchyInfoModules({\n        isHasCurrentPagePermission: isHasSubsidiariesCompanyPermission,\n      }),\n    );\n  }, [selectCompanyHierarchyId, globalState, navigate]);\n\n  const newRoutes = useMemo(() => {\n    let routes = getAllowedRoutes(globalState).filter((route) => route.isMenuItem);\n\n    const subsidiariesPermission = getSubsidiariesPermission(routes);\n\n    if (selectCompanyHierarchyId) {\n      routes = routes.filter((route) =>\n        route?.subsidiariesCompanyKey\n          ? subsidiariesPermission[route.subsidiariesCompanyKey]\n          : false,\n      );\n    } else {\n      routes = routes.filter((route) => {\n        if (route?.subsidiariesCompanyKey === 'companyHierarchy') {\n          return isEnabledCompanyHierarchy && subsidiariesPermission[route.subsidiariesCompanyKey];\n        }\n        return true;\n      });\n    }\n\n    return routes;\n\n    // ignore permissions because verifyCompanyLevelPermissionByCode method with permissions\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectCompanyHierarchyId, permissions, globalState, isEnabledCompanyHierarchy]);\n\n  const activePath = (path: string) => {\n    if (location.pathname === path) {\n      B3SStorage.set('prevPath', path);\n      return true;\n    }\n\n    if (location.pathname.includes('orderDetail')) {\n      const gotoOrderPath =\n        B3SStorage.get('prevPath') === '/company-orders' ? '/company-orders' : '/orders';\n      if (path === gotoOrderPath) return true;\n    }\n\n    if (location.pathname.includes('shoppingList') && path === '/shoppingLists') {\n      return true;\n    }\n\n    if (location.pathname.includes('/quoteDetail') || location.pathname.includes('/quoteDraft')) {\n      if (path === '/quotes') return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: isMobile ? 'background.paper' : 'background.default',\n        color: primaryColor || 'info.main',\n        '& .MuiListItem-root': {\n          '& .MuiButtonBase-root.Mui-selected': {\n            color: getContrastColor(primaryColor) || '#fff',\n            bgcolor: 'primary.main',\n            borderRadius: '4px',\n          },\n          '& .MuiButtonBase-root:hover:not(.Mui-selected)': {\n            bgcolor: b3HexToRgb(primaryColor, 0.12),\n            borderRadius: '4px',\n          },\n        },\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n    >\n      {newRoutes.map((item) => {\n        if (item.name === 'Quotes') {\n          const { pathname } = location;\n          return (\n            <ListItem key={item.path} disablePadding>\n              <Badge\n                badgeContent={\n                  quoteDetailHasNewMessages && pathname.includes('quoteDetail') ? '' : 0\n                }\n                variant=\"dot\"\n                sx={{\n                  width: '100%',\n                  '& .MuiBadge-badge.MuiBadge-dot': {\n                    width: 8,\n                    height: 8,\n                    bgcolor: '#FFFFFF',\n                    right: 14,\n                    top: 22,\n                  },\n                }}\n              >\n                <ListItemButton onClick={() => handleClick(item)} selected={activePath(item.path)}>\n                  <ListItemText primary={b3Lang(item.idLang)} />\n                </ListItemButton>\n              </Badge>\n            </ListItem>\n          );\n        }\n        return (\n          <ListItem key={item.path} disablePadding>\n            <ListItemButton onClick={() => handleClick(item)} selected={activePath(item.path)}>\n              <ListItemText primary={b3Lang(item.idLang)} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { ReactNode, useContext, useState } from 'react';\nimport { Close, Dehaze, ShoppingBagOutlined } from '@mui/icons-material';\nimport { Badge, Box } from '@mui/material';\n\nimport { CART_URL } from '@/constants';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport CompanyCredit from '../CompanyCredit';\nimport { getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\nimport B3AccountInfo from './B3AccountInfo';\nimport B3CloseAppButton from './B3CloseAppButton';\nimport B3Logo from './B3Logo';\nimport B3Nav from './B3Nav';\n\nexport default function B3MobileLayout({\n  children,\n  title,\n}: {\n  children: ReactNode;\n  title: string;\n}) {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const [isOpenMobileSidebar, setOpenMobileSidebar] = useState<boolean>(false);\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowCart = isB2BUser ? purchasabilityPermission : true;\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const openRouteList = () => {\n    setOpenMobileSidebar(true);\n  };\n\n  const customColor = getContrastColor(backgroundColor);\n\n  return (\n    <Box\n      sx={{\n        height: '70vh',\n        p: '4vw',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: '4.5vw',\n        }}\n      >\n        <Badge badgeContent={0} color=\"secondary\">\n          <Dehaze onClick={openRouteList} sx={{ color: customColor }} />\n        </Badge>\n\n        <B3Logo />\n\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n\n            '& span': {\n              marginRight: '1.5rem',\n            },\n          }}\n        >\n          {isShowCart && (\n            <Badge\n              badgeContent={cartNumber}\n              max={1000}\n              sx={{\n                '& .MuiBadge-badge': {\n                  color: '#FFFFFF',\n                  backgroundColor: '#1976D2',\n                  fontWeight: 500,\n                  fontSize: '12px',\n                  minWidth: '18px',\n                  height: '18px',\n                  top: '8px',\n                  right: '3px',\n                  marginRight: '-0.5rem',\n                },\n              }}\n            >\n              <ShoppingBagOutlined\n                sx={{ color: 'rgba(0, 0, 0, 0.54)', marginRight: '-0.5rem' }}\n                onClick={() => {\n                  window.location.href = CART_URL;\n                }}\n              />\n            </Badge>\n          )}\n          <Box\n            sx={{\n              marginLeft: '2px',\n              height: '24px',\n            }}\n          >\n            <B3CloseAppButton />\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        component=\"h1\"\n        sx={{\n          p: 0,\n          m: 0,\n          mb: '6vw',\n          fontSize: '34px',\n          fontWeight: '400',\n          color: customColor || '#263238',\n        }}\n      >\n        {title}\n      </Box>\n      <CompanyCredit />\n      <Box\n        sx={{\n          flex: 1,\n          display: 'flex',\n          paddingBottom: isAgenting ? '52px' : '0',\n        }}\n      >\n        {children}\n      </Box>\n      {isOpenMobileSidebar && (\n        <Box\n          sx={{\n            height: '100vh',\n            position: 'fixed',\n            width: '92vw',\n            zIndex: 1000,\n            left: 0,\n            top: 0,\n            p: '4vw',\n            backgroundColor: 'white',\n            boxShadow:\n              '0px 7px 8px -4px #00000033, 0px 12px 17px 2px #00000024, 0px 5px 22px 4px #0000001f',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              pb: '4vw',\n            }}\n          >\n            <B3AccountInfo closeSidebar={setOpenMobileSidebar} />\n            <Close onClick={() => setOpenMobileSidebar(false)} />\n          </Box>\n\n          <B3Nav closeSidebar={setOpenMobileSidebar} />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import { ReactNode, useContext, useEffect, useMemo, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, useMediaQuery } from '@mui/material';\n\nimport useMobile from '@/hooks/useMobile';\nimport { useB3Lang } from '@/lib/lang';\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { getIsTokenGotoPage, routes } from '@/shared/routes';\nimport { useAppSelector } from '@/store';\n\nimport B3Dialog from '../B3Dialog';\nimport CompanyCredit from '../CompanyCredit';\n\nimport B3CloseAppButton from './B3CloseAppButton';\nimport B3Logo from './B3Logo';\nimport B3MainHeader from './B3MainHeader';\nimport B3MobileLayout from './B3MobileLayout';\nimport B3Nav from './B3Nav';\n\nconst SPECIAL_PATH_TEXTS = {\n  '/purchased-products': 'global.purchasedProducts.title',\n  '/orders': 'global.orders.title',\n  '/company-orders': 'global.companyOrders.title',\n} as const;\n\nexport default function B3Layout({ children }: { children: ReactNode }) {\n  const [isMobile] = useMobile();\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n\n  const location = useLocation();\n\n  const [title, setTitle] = useState<string>('');\n\n  const b3Lang = useB3Lang();\n\n  const emailAddress = useAppSelector(({ company }) => company.customer.emailAddress);\n  const customerId = useAppSelector(({ company }) => company.customer.id);\n\n  const {\n    state: { globalMessageDialog },\n    dispatch,\n  } = useContext(DynamicallyVariableContext);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if ((!emailAddress || !customerId) && !getIsTokenGotoPage(location.pathname)) {\n      navigate('/login');\n    }\n  }, [emailAddress, customerId, location, navigate]);\n\n  useEffect(() => {\n    const itemsRoutes = routes.find((item) => item.path === location.pathname);\n    if (itemsRoutes && location.pathname !== '/quoteDraft') {\n      const foundPath = Object.entries(SPECIAL_PATH_TEXTS).find(\n        ([specialPath]) => specialPath === location.pathname,\n      );\n      if (foundPath) {\n        setTitle(b3Lang(foundPath[1]));\n      } else {\n        setTitle(b3Lang(itemsRoutes.idLang));\n      }\n    } else {\n      setTitle('');\n    }\n    dispatch({\n      type: 'common',\n      payload: {\n        tipMessage: {\n          msgs: [],\n        },\n      },\n    });\n    // disabling as dispatch is not necessary in the deps\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  const messageDialogClose = () => {\n    dispatch({\n      type: 'common',\n      payload: {\n        globalMessageDialog: {\n          open: false,\n          title: '',\n          message: '',\n          cancelText: 'Cancel',\n        },\n      },\n    });\n  };\n\n  const overflowStyle = useMemo(() => {\n    const overflowXHiddenPage = ['/invoice'];\n    if (overflowXHiddenPage.includes(location.pathname)) {\n      return {\n        overflowX: 'hidden',\n      };\n    }\n\n    return {};\n  }, [location]);\n\n  return (\n    <Box>\n      {isMobile ? (\n        <B3MobileLayout title={title}>{children}</B3MobileLayout>\n      ) : (\n        <Box\n          id=\"app-mainPage-layout\"\n          sx={{\n            display: 'flex',\n            minHeight: '100vh',\n            margin: 'auto',\n            width: !isDesktopLimit ? '100%' : 1775,\n            minWidth: !isDesktopLimit ? '100%' : 1775,\n            maxWidth: !isDesktopLimit ? '100%' : 1775,\n            flexDirection: 'row',\n            p: '32px 63px 70px 63px',\n          }}\n        >\n          <B3CloseAppButton />\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '200px',\n              displayPrint: 'none',\n            }}\n          >\n            <B3Logo />\n            <Box\n              sx={{\n                pt: '24px',\n              }}\n            >\n              <B3Nav />\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              flex: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: '1450px',\n              width: '100%',\n              p: '0 0px 0px 50px',\n              ...overflowStyle,\n            }}\n          >\n            <B3MainHeader title={title} />\n            <CompanyCredit />\n            <Box\n              component=\"main\"\n              sx={{\n                mt: !isMobile && !title ? '24px' : '0',\n              }}\n            >\n              {children}\n            </Box>\n          </Box>\n        </Box>\n      )}\n\n      <B3Dialog\n        isOpen={globalMessageDialog.open}\n        title={globalMessageDialog.title}\n        leftSizeBtn={globalMessageDialog.cancelText}\n        rightSizeBtn={globalMessageDialog.saveText}\n        handleLeftClick={globalMessageDialog.cancelFn || messageDialogClose}\n        handRightClick={globalMessageDialog.saveFn}\n        showRightBtn={!!globalMessageDialog.saveText}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: isMobile ? 'center' : 'start',\n            width: isMobile ? '100%' : '450px',\n            height: '100%',\n          }}\n        >\n          {globalMessageDialog.message}\n        </Box>\n      </B3Dialog>\n    </Box>\n  );\n}\n"],"names":["permissionRoles","CompanyCredit","b3Lang","useB3Lang","isEnabled","setEnabled","useState","isCloseCompanyCredit","setIsCloseCompanyCredit","useStorageState","role","useAppSelector","company","isAgenting","b2bFeatures","useEffect","creditHold","creditEnabled","getCompanyCreditConfig","handleCompanyCreditCloseClick","jsx","Box","Alert","B3CloseAppButton","isMobile","useMobile","setOpenPageFn","global","isCloseGotoBCHome","useContext","GlobalContext","navigate","useNavigate","handleCloseForm","CloseBoxMobile","CloseBox","CloseButton","B3Logo","logo","ImageListItem","getAssetUrl","b2bLogo","B3DropDown","width","list","title","value","handleItemClick","menuRenderItemName","item","menu","ref","isOpen","setIsOpen","listRef","useRef","useImperativeHandle","close","jsxs","disableLogoutButton","ListItemText","ListItemButton","ArrowDropUpIcon","ArrowDropDownIcon","Menu","key","color","MenuItem","B3DropDown$1","forwardRef","B3AccountInfo","closeSidebar","firstName","lastName","v","name","newList","useMemo","chipInfo","B3CompanyHierarchy","dispatch","useAppDispatch","open","setOpen","currentRow","setCurrentRow","dropDownRef","CustomStyleContext","currentCompanyId","salesRepCompanyId","pagesSubsidiariesPermission","selectCompanyHierarchyId","companyHierarchyList","isOpenCompanyHierarchyDropDown","isPagesSubsidiariesPermission","_a","info","showTitleId","handleClose","setOpenCompanyHierarchyDropDown","handleRowClick","selectId","Grid","CheckIcon","chipLangId","Fragment","Chip","HierarchyDialog","B3StatusNotificationContainer","styled","B3StatusNotification","props","loginType","companyStatus","blockPendingAccountOrderCreation","B3SStorage","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","tip","setTip","isShow","setIsShow","type","setType","bcColor","setBcColor","handleCloseTip","setLoginType","LoginTypes","action","loginTypeStatus","showTip","StatusNotifications","MainHeader","isB2BUser","isB2BUserSelector","companyInfo","salesRepCompanyName","cartNumber","backgroundColor","purchasabilityPermission","rolePermissionSelector","isEnabledCompanyHierarchy","isShowCart","customColor","getContrastColor","onCartClick","dispatchEvent","CART_URL","b3TriggerCartNumber","Button","Typography","getSubsidiariesPermission","routes","all","cur","code","validatePermissionWithComparisonType","B3Nav","location","useLocation","DynamicallyVariableContext","permissions","globalState","quoteDetailHasNewMessages","registerEnabled","primaryColor","useTheme","jumpRegister","handleClick","isHasSubsidiariesCompanyPermission","hash","url","getAllowedRoutes","route","routeItem","matchPath","permissionCodes","subsidiariesPermission","store","setPagesSubsidiariesPermission","setCompanyHierarchyInfoModules","newRoutes","activePath","path","gotoOrderPath","List","b3HexToRgb","pathname","ListItem","Badge","B3MobileLayout","children","isOpenMobileSidebar","setOpenMobileSidebar","openRouteList","Dehaze","ShoppingBagOutlined","Close","SPECIAL_PATH_TEXTS","B3Layout","isDesktopLimit","useMediaQuery","setTitle","emailAddress","customerId","globalMessageDialog","getIsTokenGotoPage","itemsRoutes","foundPath","specialPath","messageDialogClose","overflowStyle","B3MainHeader","B3Dialog"],"mappings":"srCAQA,MAAMA,GAAkB,CAAC,EAAG,EAAG,CAAC,EAEhC,SAASC,IAAgB,CACvB,MAAMC,EAASC,EAAA,EACT,CAACC,EAAWC,CAAU,EAAIC,EAAAA,SAAkB,EAAK,EACjD,CAACC,EAAsBC,CAAuB,EAAIC,GACtD,0BACA,GACA,cAAA,EAEIC,EAAOC,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,IAAI,EAC5DC,EAAaF,EAAe,CAAC,CAAE,YAAAG,KAAkBA,EAAY,kBAAkB,UAAU,EAE/FC,EAAAA,UAAU,IAAM,EACD,SAAY,CACvB,GAAI,CAAAR,IAEAP,GAAgB,SAAS,OAAOU,CAAI,CAAC,GAAM,OAAOA,CAAI,IAAM,GAAKG,GAAa,CAChF,KAAM,CACJ,oBAAqB,CAAE,WAAAG,EAAY,cAAAC,CAAA,CAAc,EAC/C,MAAMC,GAAA,EAEVb,EAAWW,GAAcC,CAAa,CACxC,CACF,GAEA,CACF,EAAG,CAACP,EAAMG,EAAYN,CAAoB,CAAC,EAE3C,MAAMY,EAAgC,IAAM,CAC1CX,EAAwB,EAAI,EAC5BH,EAAW,EAAK,CAClB,EAEA,OAAKD,EAGHgB,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,OAAQ,QAAA,EAGV,SAAAD,EAAAA,IAACE,EAAA,CAAM,QAAQ,SAAS,QAAS,IAAMH,EAAA,EAAiC,SAAS,UAC9E,SAAAjB,EAAO,4BAA4B,CAAA,CACtC,CAAA,CAAA,EAVmB,IAazB,CC9CA,SAAwBqB,IAAmB,CACzC,KAAM,CAACC,CAAQ,EAAIC,EAAA,EAEbC,EAAgBf,EAAe,CAAC,CAAE,OAAAgB,CAAA,IAAaA,EAAO,aAAa,EAEnE,CACJ,MAAO,CAAE,kBAAAC,CAAA,CAAkB,EACzBC,EAAAA,WAAWC,CAAa,EACtBC,EAAWC,EAAA,EAEXC,EAAkB,IAAM,CACxBL,GAAqB,OAAO,SAAS,OAAO,SAAS,qBAAqB,EAC5E,OAAO,SAAS,KAAO,KAEvBG,EAAS,GAAG,EACZL,GAAA,MAAAA,EAAgB,CACd,OAAQ,GACR,QAAS,EAAA,IAGb,OAAO,QAAQ,aAAa,KAAM,GAAI,OAAO,SAAS,UAAY,GAAG,CACvE,EAEML,EAAMG,EAAWU,GAAiBC,GAExC,aACGd,EAAA,CACC,SAAAD,EAAAA,IAACgB,GAAA,CACC,GAAI,CACF,MAAO,SAAA,EAET,QAASH,CAAA,CAAA,EAEb,CAEJ,CCpCA,SAAwBI,IAAS,CAC/B,KAAM,CACJ,MAAO,CAAE,KAAAC,CAAA,CAAK,EACZT,EAAAA,WAAWC,CAAa,EAEtB,CAACN,CAAQ,EAAIC,EAAA,EAEnB,OACEL,EAAAA,IAACC,EAAA,CACC,GACEG,EACI,CACE,OAAQ,OACR,MAAO,QACP,OAAQ,CACN,OAAQ,OACR,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,WAAY,MAAA,EAEd,QAAS,CACP,UAAW,MAAA,CACb,EAEF,CACE,MAAO,QACP,OAAQ,OACR,QAAS,OACT,WAAY,SACZ,UAAW,OACX,QAAS,CACP,UAAW,MAAA,CACb,EAIR,SAAAJ,EAAAA,IAACmB,GAAA,CACC,GAAI,CACF,SAAU,QACV,OAAQ,UACR,0BAA2B,CACzB,UAAW,UACX,MAAO,MAAA,CACT,EAEF,QAAS,IAAM,CACb,OAAO,SAAS,KAAO,GACzB,EAEA,SAAAnB,EAAAA,IAAC,OAAI,IAAKkB,GAAQE,GAAYC,EAAO,EAAG,IAAI,MAAA,CAAO,CAAA,CAAA,CACrD,CAAA,CAGN,CC9BA,SAASC,GACP,CACE,MAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,gBAAAC,EACA,mBAAAC,EAAsBC,GAASA,EAAK,KACpC,GAAGC,CACL,EACAC,EACA,CACA,KAAM,CAAC3B,CAAQ,EAAIC,EAAA,EACb,CAAC2B,EAAQC,CAAS,EAAI/C,EAAAA,SAAS,EAAK,EACpCgD,EAAUC,EAAAA,OAA8B,IAAI,EAElDC,EAAAA,oBAAoBL,EAAK,KAAO,CAC9B,gBAAiB,IAAME,EAAU,EAAI,CAAA,EACrC,EAEF,MAAMI,EAAQ,IAAM,CAClBJ,EAAU,EAAK,CACjB,EAEA,OACEK,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,MAAOsB,GAAS,MAAA,EAGjB,SAAA,CAACgB,GAoBAvC,EAAAA,IAACwC,EAAA,CACC,QAASf,EACT,GAAI,CACF,SAAU,CACR,WAAYrB,EAAW,IAAM,IAC7B,MAAO,SAAA,CACT,CACF,CAAA,EA1BFkC,EAAAA,KAACG,EAAA,CACC,IAAKP,EACL,QAAS,IAAMD,EAAU,EAAI,EAC7B,GAAI,CACF,GAAI,CAAA,EAGN,SAAA,CAAAjC,EAAAA,IAACwC,EAAA,CACC,QAASf,EACT,GAAI,CACF,SAAU,CACR,WAAYrB,EAAW,IAAM,IAC7B,MAAO,SAAA,CACT,CACF,CAAA,EAED4B,EAAShC,EAAAA,IAAC0C,GAAA,CAAA,CAAgB,QAAMC,GAAA,CAAA,CAAkB,CAAA,CAAA,CAAA,EAavD3C,EAAAA,IAAC4C,GAAA,CACC,SAAUV,EAAQ,QAClB,KAAMF,EACN,aAAc,CACZ,SAAU,SACV,WAAY,OAAA,EAEd,gBAAiB,CACf,SAAU,MACV,WAAY,OAAA,EAEd,GAAG,kBACH,YAAW,GACX,QAASK,EACT,GAAI,CACF,+CAAgD,CAC9C,GAAIjC,EAAW,EAAI,MACnB,GAAIA,EAAW,EAAI,MACnB,UAAWA,EAAW,OAAS,OAAA,CACjC,EAED,GAAI0B,GAAQ,CAAA,EAEZ,SAAAN,EAAK,QACJA,EAAK,IAAKK,GAAS,CACjB,KAAM,CAAE,IAAAgB,GAAQhB,EACViB,EAAQpB,IAAUmB,EAAM,UAAY,QAC1C,OACE7C,EAAAA,IAAC+C,GAAA,CACC,GAAI,CACF,MAAAD,EACA,SAAU1C,EAAW,OAASmB,GAAS,OAAA,EAGzC,QAAS,IAAM,CACbc,EAAA,EACIV,KAAiCkB,CAAG,CAC1C,EAEC,WAAmBhB,CAAI,CAAA,EANnBgB,CAAA,CASX,CAAC,CAAA,CAAA,CACL,CAAA,CAAA,CAGN,CAEA,MAAAG,GAAeC,EAAAA,WAA4C3B,EAAU,EC9H/DE,EAAyB,CAC7B,CACE,KAAM,UACN,IAAK,SACL,OAAQ,sBAAA,CAEZ,EAMA,SAAwB0B,GAAc,CAAE,aAAAC,GAAoC,CAC1E,KAAM,CAAC/C,CAAQ,EAAIC,EAAA,EAEb+C,EAAY7D,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,SAAS,EACtE6D,EAAW9D,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,QAAQ,EAEpEmB,EAAWC,EAAA,EAEX9B,EAASC,EAAA,EAET4C,EAAkB,MAAOkB,GAAyB,CACtD,MAAMhB,EAAOL,EAAK,KAAM8B,GAAMA,EAAE,MAAQT,CAAG,EAEtChB,IAEDA,EAAK,MAAQ,SACflB,EAAS,iCAAiC,EACjCkB,EAAK,OAAS,QAAUA,EAAK,KACtClB,EAASkB,EAAK,GAAG,EAEfsB,GACFA,EAAa,EAAK,EAEtB,EAEMI,EAAO,GAAG,OAAAH,EAAS,MAAK,OAAAC,GAExBG,EAA2BC,EAAAA,QAAQ,IAChCjC,EAAK,IAAKK,IACR,CACL,IAAKA,EAAK,IACV,KAAM/C,EAAO+C,EAAK,MAAM,CAAA,EAE3B,EACA,CAAC/C,CAAM,CAAC,EAEX,OACEkB,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,SAAU,QACV,QAAS,OACT,eAAgBG,EAAW,QAAU,MACrC,GAAI,OACJ,SAAU,OACV,MAAO,UACP,UAAW,SACX,WAAY,QAAA,EAGd,eAACkB,GAAA,CAAW,MAAOiC,EAAM,gBAAA5B,EAAkC,KAAM6B,CAAA,CAAS,CAAA,CAAA,CAGhF,CClEA,MAAME,EAAW,CACf,YAAa,CACX,OAAQ,sCAAA,EAEV,iBAAkB,CAChB,OAAQ,qCAAA,CAEZ,EAEA,SAASC,IAAqB,OAC5B,MAAM7E,EAASC,EAAA,EAET6E,EAAWC,EAAA,EAEX,CAACC,EAAMC,CAAO,EAAI7E,EAAAA,SAAkB,EAAK,EAEzC,CAAC8E,EAAYC,CAAa,EAAI/E,EAAAA,SAAgD,IAAI,EAElFgF,EAAc/B,EAAAA,OAAuB,IAAI,EAEzC,CACJ,MAAO,CACL,oBAAqB,CAAE,MAAAW,EAAQ,SAAA,CAAU,CAC3C,EACErC,EAAAA,WAAW0D,CAAkB,EAE3B,CAAE,GAAIC,GAAqB7E,EAAe,CAAC,CAAE,QAAAC,CAAA,IAAcA,EAAQ,WAAW,EAE9E6E,EAAoB9E,EAAe,CAAC,CAAE,YAAAG,KAAkBA,EAAY,kBAAkB,EAAE,EAExF,CAAE,4BAAA4E,GAAgC/E,EAAe,CAAC,CAAE,QAAAC,CAAA,IAAcA,CAAO,EAEzE,CAAE,yBAAA+E,EAA0B,qBAAAC,CAAA,EAAyBjF,EACzD,CAAC,CAAE,QAAAC,CAAA,IAAcA,EAAQ,oBAAA,EAGrB,CAAE,+BAAAiF,GAAmClF,EAAe,CAAC,CAAE,OAAAgB,CAAA,IAAaA,CAAM,EAE1EmE,EAAgCjB,EAAAA,QAAQ,IACrC,OAAO,KAAKa,CAA2B,EAAE,KAC7CzB,GAAQyB,EAA4BzB,CAA6C,CAAA,EAEnF,CAACyB,CAA2B,CAAC,EAEhC3E,EAAAA,UAAU,IAAM,OACV8E,IAAkCP,GAAA,MAAAA,EAAa,YACjDS,EAAAT,EAAY,UAAZ,MAAAS,EAAqB,kBAEzB,EAAG,CAACF,CAA8B,CAAC,EAEnC,MAAMG,EAAOnB,EAAAA,QAAQ,IAAM,OACzB,MAAMoB,EAAcN,GAA4BH,GAAoBC,EAE9D5C,GAAQkD,EAAAH,EAAqB,KAChChD,GAAS,OAAOA,EAAK,SAAS,IAAM,OAAOqD,CAAW,CAAA,IAD3C,YAAAF,EAEX,YAEGnD,EAAwBgD,EAAqB,IAAK3C,IAAU,CAChE,KAAMA,EAAK,YACX,IAAKA,EAAK,SAAA,EACV,EAEF,MAAO,CACL,MAAAJ,EACA,KAAAD,CAAA,CAEJ,EAAG,CAAC+C,EAA0BH,EAAkBI,EAAsBH,CAAiB,CAAC,EAElFS,EAAc,IAAM,CACxBf,EAAQ,EAAK,EACbH,EAASmB,GAAgC,EAAK,CAAC,CACjD,EACMC,EAAkBnC,GAAgB,CACtC,MAAMhB,EAAO+C,EAAK,KAAK,KAAMpD,GAAS,OAAOA,EAAK,GAAG,IAAMqB,CAAG,EACzDhB,IACLoC,EAAc,CACZ,UAAW,OAAOpC,EAAK,GAAG,EAC1B,YAAaA,EAAK,IAAA,CACnB,EACDkC,EAAQ,EAAI,EACd,EAEMnC,EAAsBC,GAAwB,CAClD,KAAM,CAAE,KAAA0B,EAAM,IAAAV,CAAA,EAAQhB,EAEhBoD,EAAWV,GAA4BH,GAAoBC,EAEjE,OACE/B,EAAAA,KAAC4C,EAAA,CACC,UAAS,GACT,UAAU,MACV,GAAI,CACF,eAAgB,eAAA,EAGlB,SAAA,CAAAlF,EAAAA,IAACkF,EAAA,CACC,GAAI,CACF,GAAI,CAAA,EAGL,SAAA3B,CAAA,CAAA,EAEHvD,EAAAA,IAACkF,EAAA,CACC,GAAI,CACF,MAAO,OACP,QAAS,OACT,eAAgB,QAAA,EAGjB,SAAArC,IAAQ,OAAOoC,CAAQ,GAAKjF,EAAAA,IAACmF,IAAU,GAAI,CAAE,SAAU,QAAA,CAAS,CAAG,CAAA,CAAA,CACtE,CAAA,CAAA,CAGN,EAEM,CAAE,OAAQC,CAAA,EAAeb,EAC3Bb,EAAS,iBACTA,EAAS,YAIb,MAFI,GAACiB,EAAAC,GAAA,YAAAA,EAAM,OAAN,MAAAD,EAAY,SAAU,CAACD,GAExB,CAACN,GAAoB,CAACC,EAA0B,KAGlD/B,EAAAA,KAAA+C,WAAA,CACE,SAAA,CAAA/C,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,SAAU,QACV,QAAS,OACT,eAAgB,QAChB,WAAY,SACZ,SAAU,OACV,MAAO,UACP,4BAA6B,CAC3B,YAAa,GAAA,CACf,EAGF,SAAA,CAAAD,EAAAA,IAACsB,GAAA,CACC,IAAK4C,EACL,aAAc,CACZ,SAAU,SACV,WAAY,MAAA,EAEd,gBAAiB,CACf,SAAU,MACV,WAAY,MAAA,EAEd,mBAAAtC,EACA,OAAOgD,GAAA,YAAAA,EAAM,QAAS,GACtB,gBAAkB/C,GAASmD,EAAe,OAAOnD,CAAI,CAAC,EACtD,MAAM+C,GAAA,YAAAA,EAAM,OAAQ,CAAA,CAAC,CAAA,EAGvB5E,EAAAA,IAACsF,GAAA,CACC,MAAOxG,EAAOsG,CAAU,EACxB,KAAK,QACL,GAAI,CACF,gBAAiBb,EAA2BzB,EAAQ,eACpD,MAAO,QACP,OAAQ,GACR,mBAAoB,CAClB,GAAI,CAAA,CACN,CACF,CAAA,CACF,CAAA,CAAA,EAGF9C,EAAAA,IAACuF,GAAA,CAAgB,KAAAzB,EAAY,YAAAgB,EAA0B,WAAAd,CAAA,CAAwB,CAAA,EACjF,CAEJ,CCrKA,MAAMwB,GAAgCC,GAAOxF,CAAG,EAAE,KAAO,CACvD,QAAS,CACP,MAAO,SAAA,CAEX,EAAE,EAEF,SAAwByF,GAAqBC,EAAkC,CAC7E,KAAM,CAAE,MAAAlE,GAAUkE,EACZ/B,EAAWC,EAAA,EACX/E,EAASC,EAAA,EAET6G,EAAYrG,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,SAAS,EACtEF,EAAOC,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,IAAI,EAC5DqG,EAAgBtG,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,YAAY,MAAM,EAC1EsG,EAAmCC,EAAW,IAAI,kCAAkC,EACpF,CAACC,CAA4B,EAAIC,GAAA,EACjC,CAACC,EAAKC,CAAM,EAAIjH,EAAAA,SAAiB,EAAE,EACnC,CAACkH,EAAQC,CAAS,EAAInH,EAAAA,SAAkB,EAAK,EAC7C,CAACoH,EAAMC,CAAO,EAAIrH,EAAAA,SAAqB,SAAS,EAChD,CAACsH,EAASC,CAAU,EAAIvH,EAAAA,SAAiB,SAAS,EAElDwH,EAAiB,IAAM,CAC3B9C,EAAS+C,GAAaC,GAAW,aAAa,CAAC,EAC/CP,EAAU,EAAK,CACjB,EAEMQ,EAA2B,CAAA,EACjC,OAAI,OAAOhB,CAAa,IAAM,IAC5BgB,EAAO,QAAUH,GAGnB/G,EAAAA,UAAU,IAAM,CACd,MAAMmH,EAAkB,OAAOjB,CAAa,IAAM,EAAI,GAAOD,IAAc,EAErEmB,EAAUzH,IAAS,IAAM,GAAQwH,EACvCT,EAAUU,CAAO,EACbA,IACE,OAAOlB,CAAa,IAAM,IACxBC,GAAoCE,GACtCG,EAAOrH,EAAOkI,EAAoB,kCAAkC,CAAC,EAGnElB,GAAoC,CAACE,GACvCG,EAAOrH,EAAOkI,EAAoB,sBAAsB,CAAC,EAGvD,CAAClB,GAAoCE,GACvCG,EAAOrH,EAAOkI,EAAoB,uBAAuB,CAAC,EAGxD,CAAClB,GAAoC,CAACE,GACxCG,EAAOrH,EAAOkI,EAAoB,yBAAyB,CAAC,EAE9DT,EAAQ,MAAM,EACdE,EAAW,SAAS,GAGlB,OAAOZ,CAAa,IAAM,IAC5BM,EAAOrH,EAAOkI,EAAoB,WAAW,CAAC,EAC9CT,EAAQ,SAAS,EACjBE,EAAW,SAAS,GAGlB,OAAOZ,CAAa,IAAM,IAC5BM,EAAOa,EAAoB,WAAW,EACtCT,EAAQ,SAAS,EACjBE,EAAW,SAAS,GAG1B,EAAG,CACDX,EACAE,EACAH,EACAD,EACAtG,EACAR,CAAA,CACD,EAEMsH,EACLpG,EAAAA,IAACwF,GAAA,CACC,GAAI,CACF,GAAI/D,EAAQ,OAAS,GAAA,EAGvB,SAAAzB,EAAAA,IAACE,EAAA,CACE,GAAG2G,EACJ,SAAUP,GAAQ,UAClB,GAAI,CACF,MAAO,UACP,gBAAiBE,CAAA,EAGlB,SAAAN,CAAA,CAAA,CACH,CAAA,EAEA,IACN,CChGA,SAAwBe,GAAW,CAAE,MAAAxF,GAA4B,CAC/D,MAAMyF,EAAY3H,EAAe4H,CAAiB,EAC5C7H,EAAOC,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,IAAI,EAC5D4H,EAAc7H,EAAe,CAAC,CAAE,QAAAC,CAAA,IAAcA,EAAQ,WAAW,EACjE6H,EAAsB9H,EAC1B,CAAC,CAAE,YAAAG,CAAA,IAAkBA,EAAY,kBAAkB,WAAA,EAE/C4H,EAAa/H,EAAe,CAAC,CAAE,OAAAgB,CAAA,IAAaA,EAAO,UAAU,EAC7DI,EAAWC,EAAA,EACX9B,EAASC,EAAA,EACT,CAACqB,CAAQ,EAAIC,EAAA,EAEb,CACJ,MAAO,CACL,YAAa,CAAE,gBAAAkH,EAAkB,SAAA,CAAU,CAC7C,EACE9G,EAAAA,WAAW0D,CAAkB,EAE3B,CAAE,yBAAAqD,CAAA,EAA6BjI,EAAekI,CAAsB,EAEpE,CAAE,0BAAAC,GAA8BnI,EACpC,CAAC,CAAE,QAAAC,CAAA,IAAcA,EAAQ,oBAAA,EAGrBmI,EAAaT,EAAYM,EAA2B,GAEpDI,EAAcC,EAAiBN,CAAe,EAE9CO,EAAc,IAAM,CACnBC,GAAc,sBAAsB,IAIzC,OAAO,SAAS,KAAOC,EACzB,EAEArI,OAAAA,EAAAA,UAAU,IAAM,CACdsI,GAAA,CACF,EAAG,CAAA,CAAE,SAGFhI,EAAA,CACC,SAAA,CAAAqC,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,MACf,eAAgB,gBAChB,OAAQ,OACR,WAAY,QAAA,EAGd,SAAA,CAAAqC,EAAAA,KAAC4C,EAAA,CACC,GAAI,CACF,WAAY,SACZ,cAAe,MACf,QAAS,MAAA,EAGX,SAAA,CAAAlF,EAAAA,IAACC,EAAA,CACC,UAAU,KACV,GAAI,CACF,SAAU,OACV,WAAY,MACZ,MAAO2H,GAAe,UACtB,GAAI,CAAA,EAGL,SAAA,OAAOtI,CAAI,IAAM,KACf8H,GAAA,YAAAA,EAAa,cACZC,GACAvI,EAAO,gCAAgC,EAAA,CAAA,EAE5C4I,SAA8B/D,GAAA,CAAA,CAAmB,CAAA,CAAA,CAAA,EAEpDrB,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,WAAY,QAAA,EAGb,SAAA,CAAAX,IAAS,WAAQ4D,GAAA,CAAA,CAAc,SAC/BjD,EAAA,CAAI,GAAI,CAAE,WAAY,OACpB,SAAA,CAAAX,IAAS,KACRU,EAAAA,IAACkI,EAAA,CACC,GAAI,CACF,MAAO,UACP,WAAY,IACZ,SAAU,MAAA,EAEZ,QAAS,IAAM,CACbvH,EAAS,QAAQ,CACnB,EAEC,WAAO,4BAA4B,CAAA,CAAA,EAGxCX,EAAAA,IAACkI,EAAA,CACC,GAAI,CACF,MAAO,UACP,WAAY,IACZ,SAAU,MAAA,EAEZ,QAAS,IAAM,CACb,OAAO,SAAS,KAAO,GACzB,EAEC,WAAO,0BAA0B,CAAA,CAAA,EAEnCP,GACCrF,EAAAA,KAAC4F,EAAA,CACC,GAAI,CACF,MAAO,UACP,WAAY,IACZ,SAAU,MAAA,EAEZ,QAASJ,EAER,SAAA,CAAAhJ,EAAO,0BAA0B,EACjCwI,EAAa,EACZtH,EAAAA,IAACmI,GAAA,CACC,GAAG,mBACH,GAAI,CACF,gBAAiB,UACjB,SAAU,OACV,OAAQ,OACR,MAAO,UACP,aAAc,OACd,SAAU,OACV,WAAY,MACZ,WAAY,OACZ,WAAY,MACZ,QAAS,WAAA,EAGV,SAAAb,CAAA,CAAA,EAED,IAAA,CAAA,CAAA,CACN,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAED7F,GACCzB,EAAAA,IAACC,EAAA,CACC,UAAU,KACV,GAAI,CACF,OAAQ,OACR,EAAG,IACH,SAAU,OACV,WAAY,IACZ,WAAY,OACZ,QAAS,OACT,WAAY,MACZ,GAAI,OACJ,GAAIG,EAAW,EAAI,OACnB,MAAOwH,CAAA,EAGR,SAAAnG,CAAA,CAAA,EAGLzB,MAAC0F,IAAqB,MAAAjE,CAAA,CAAc,CAAA,EACtC,CAEJ,CC7JA,MAAM2G,EAA6BC,GACFA,EAAO,OAAO,CAACC,EAAKC,IAAQ,OACzD,GAAIA,GAAA,MAAAA,EAAK,uBAAwB,CAC/B,MAAMC,GAAO7D,EAAA4D,EAAI,kBAAJ,MAAA5D,EAAqB,SAAS,KACvC4D,EAAI,gBAAgB,MAAM,GAAG,EAAE,CAAC,EAAE,KAAA,EAClCA,EAAI,gBAERD,EAAIC,EAAI,sBAAsB,EAAIE,GAAqC,CACrE,MAAO,EACP,KAAAD,CAAA,CACD,CACH,CAEA,OAAOF,CACT,EAAG,CAAA,CAAsC,EAK3C,SAAwBI,GAAM,CAAE,aAAAvF,GAA4B,CAC1D,KAAM,CAAC/C,CAAQ,EAAIC,EAAA,EACbM,EAAWC,EAAA,EACX+H,EAAWC,GAAA,EACX9J,EAASC,EAAA,EAET,CAAE,SAAA6E,CAAA,EAAanD,EAAAA,WAAWoI,EAA0B,EACpDvJ,EAAOC,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,IAAI,EAE5D,CAAE,yBAAA+E,EAA0B,0BAAAmD,CAAA,EAA8BnI,EAC9D,CAAC,CAAE,QAAAC,CAAA,IAAcA,EAAQ,oBAAA,EAGrB,CAAE,YAAAsJ,GAAgBvJ,EAAe,CAAC,CAAE,QAAAC,CAAA,IAAcA,CAAO,EAEzD,CAAE,MAAOuJ,GAAgBtI,EAAAA,WAAWC,CAAa,EACjD,CAAE,0BAAAsI,EAA2B,gBAAAC,CAAA,EAAoBF,EAGjDG,EADQC,GAAA,EACa,QAAQ,QAAQ,KAErCC,EAAe,IAAM,CACzBzI,EAAS,WAAW,EACpBiD,EAAS,CACP,KAAM,SACN,QAAS,CACP,oBAAqB,CACnB,KAAM,GACN,MAAO,GACP,QAAS,GACT,WAAY,QAAA,CACd,CACF,CACD,CACH,EAEMyF,EAAexH,GAA+C,CAClE,GAAIvC,IAAS,IAAK,CAChBsE,EAAS,CACP,KAAM,SACN,QAAS,CACP,oBAAqB,CACnB,KAAM,GACN,MAAO,eACP,QACE/B,EAAK,YAAc,gBACf,gEACA,mFACN,WAAY,SACZ,SAAUoH,EAAkB,WAAa,GACzC,OAAQG,CAAA,CACV,CACF,CACD,EAED,MACF,CAEAzI,EAASkB,EAAK,IAAI,EACdzB,GAAY+C,GACdA,EAAa,EAAK,CAEtB,EAEAxD,EAAAA,UAAU,IAAM,CACd,IAAI2J,EAAqC,GACzC,KAAM,CAAE,KAAAC,GAAS,OAAO,SAClBC,EAAMD,EAAK,MAAM,GAAG,EAAE,CAAC,GAAK,GAC5BlB,EAASoB,EAAiBV,CAAW,EAAE,OAAQW,GAAUA,EAAM,UAAU,EAE/E,GAAIF,EAAK,CACP,MAAMG,EAAYF,EAAiBV,CAAW,EAAE,KAAMlH,GAC7C+H,GAAU/H,EAAK,KAAM2H,CAAG,CAChC,EAED,GAAIG,IAAaA,GAAA,MAAAA,EAAW,wBAAwB,CAClD,KAAM,CAAE,gBAAAE,GAAoBF,EAEtBnB,GAAOqB,GAAA,MAAAA,EAAiB,SAAS,KACnCA,EAAgB,MAAM,GAAG,EAAE,CAAC,EAAE,KAAA,EAC9BA,EAEJP,EAAqCb,GAAqC,CACxE,KAAAD,GACA,MAAO,CAAA,CACR,CACH,CACF,CAEA,MAAMsB,EAAyB1B,EAA0BC,CAAM,EAE/D0B,EAAM,SAASC,GAA+BF,CAAsB,CAAC,EAErEC,EAAM,SACJE,GAA+B,CAC7B,2BAA4BX,CAAA,CAC7B,CAAA,CAEL,EAAG,CAAC/E,EAA0BwE,EAAapI,CAAQ,CAAC,EAEpD,MAAMuJ,EAAYzG,EAAAA,QAAQ,IAAM,CAC9B,IAAI4E,EAASoB,EAAiBV,CAAW,EAAE,OAAQW,GAAUA,EAAM,UAAU,EAE7E,MAAMI,EAAyB1B,EAA0BC,CAAM,EAE/D,OAAI9D,EACF8D,EAASA,EAAO,OAAQqB,GACtBA,GAAA,MAAAA,EAAO,uBACHI,EAAuBJ,EAAM,sBAAsB,EACnD,EAAA,EAGNrB,EAASA,EAAO,OAAQqB,IAClBA,GAAA,YAAAA,EAAO,0BAA2B,mBAC7BhC,GAA6BoC,EAAuBJ,EAAM,sBAAsB,EAElF,EACR,EAGIrB,CAIT,EAAG,CAAC9D,EAA0BuE,EAAaC,EAAarB,CAAyB,CAAC,EAE5EyC,EAAcC,GAAiB,CACnC,GAAIzB,EAAS,WAAayB,EACxB,OAAArE,EAAW,IAAI,WAAYqE,CAAI,EACxB,GAGT,GAAIzB,EAAS,SAAS,SAAS,aAAa,EAAG,CAC7C,MAAM0B,EACJtE,EAAW,IAAI,UAAU,IAAM,kBAAoB,kBAAoB,UACzE,GAAIqE,IAASC,EAAe,MAAO,EACrC,CAMA,MAJI,GAAA1B,EAAS,SAAS,SAAS,cAAc,GAAKyB,IAAS,mBAIvDzB,EAAS,SAAS,SAAS,cAAc,GAAKA,EAAS,SAAS,SAAS,aAAa,IACpFyB,IAAS,UAIjB,EAEA,OACEpK,EAAAA,IAACsK,GAAA,CACC,GAAI,CACF,MAAO,OACP,SAAU,IACV,QAASlK,EAAW,mBAAqB,qBACzC,MAAO8I,GAAgB,YACvB,sBAAuB,CACrB,qCAAsC,CACpC,MAAOrB,EAAiBqB,CAAY,GAAK,OACzC,QAAS,eACT,aAAc,KAAA,EAEhB,iDAAkD,CAChD,QAASqB,GAAWrB,EAAc,GAAI,EACtC,aAAc,KAAA,CAChB,CACF,EAEF,UAAU,MACV,kBAAgB,wBAEf,SAAAgB,EAAU,IAAKrI,GAAS,CACvB,GAAIA,EAAK,OAAS,SAAU,CAC1B,KAAM,CAAE,SAAA2I,GAAa7B,EACrB,OACE3I,EAAAA,IAACyK,EAAA,CAAyB,eAAc,GACtC,SAAAzK,EAAAA,IAAC0K,EAAA,CACC,aACE1B,GAA6BwB,EAAS,SAAS,aAAa,EAAI,GAAK,EAEvE,QAAQ,MACR,GAAI,CACF,MAAO,OACP,iCAAkC,CAChC,MAAO,EACP,OAAQ,EACR,QAAS,UACT,MAAO,GACP,IAAK,EAAA,CACP,EAGF,eAAC/H,EAAA,CAAe,QAAS,IAAM4G,EAAYxH,CAAI,EAAG,SAAUsI,EAAWtI,EAAK,IAAI,EAC9E,eAACW,EAAA,CAAa,QAAS1D,EAAO+C,EAAK,MAAM,EAAG,CAAA,CAC9C,CAAA,CAAA,CACF,EApBaA,EAAK,IAqBpB,CAEJ,CACA,OACE7B,EAAAA,IAACyK,EAAA,CAAyB,eAAc,GACtC,SAAAzK,EAAAA,IAACyC,EAAA,CAAe,QAAS,IAAM4G,EAAYxH,CAAI,EAAG,SAAUsI,EAAWtI,EAAK,IAAI,EAC9E,SAAA7B,EAAAA,IAACwC,EAAA,CAAa,QAAS1D,EAAO+C,EAAK,MAAM,CAAA,CAAG,CAAA,CAC9C,CAAA,EAHaA,EAAK,IAIpB,CAEJ,CAAC,CAAA,CAAA,CAGP,CC7OA,SAAwB8I,GAAe,CACrC,SAAAC,EACA,MAAAnJ,CACF,EAGG,CACD,MAAMyF,EAAY3H,EAAe4H,CAAiB,EAC5C,CAAC0D,EAAqBC,CAAoB,EAAI5L,EAAAA,SAAkB,EAAK,EACrEoI,EAAa/H,EAAe,CAAC,CAAE,OAAAgB,CAAA,IAAaA,EAAO,UAAU,EAC7Dd,EAAaF,EAAe,CAAC,CAAE,YAAAG,KAAkBA,EAAY,kBAAkB,UAAU,EACzF,CAAE,yBAAA8H,CAAA,EAA6BjI,EAAekI,CAAsB,EAEpEE,EAAaT,EAAYM,EAA2B,GAEpD,CACJ,MAAO,CACL,YAAa,CAAE,gBAAAD,EAAkB,SAAA,CAAU,CAC7C,EACE9G,EAAAA,WAAW0D,CAAkB,EAE3B4G,EAAgB,IAAM,CAC1BD,EAAqB,EAAI,CAC3B,EAEMlD,EAAcC,EAAiBN,CAAe,EAEpD,OACEjF,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,OAAQ,OACR,EAAG,MACH,QAAS,OACT,cAAe,QAAA,EAGjB,SAAA,CAAAqC,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,MACf,eAAgB,gBAChB,WAAY,SACZ,GAAI,OAAA,EAGN,SAAA,CAAAD,EAAAA,IAAC0K,EAAA,CAAM,aAAc,EAAG,MAAM,YAC5B,SAAA1K,EAAAA,IAACgL,GAAA,CAAO,QAASD,EAAe,GAAI,CAAE,MAAOnD,CAAA,EAAe,EAC9D,QAEC3G,GAAA,EAAO,EAERqB,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,eAAgB,gBAEhB,SAAU,CACR,YAAa,QAAA,CACf,EAGD,SAAA,CAAA0H,GACC3H,EAAAA,IAAC0K,EAAA,CACC,aAAcpD,EACd,IAAK,IACL,GAAI,CACF,oBAAqB,CACnB,MAAO,UACP,gBAAiB,UACjB,WAAY,IACZ,SAAU,OACV,SAAU,OACV,OAAQ,OACR,IAAK,MACL,MAAO,MACP,YAAa,SAAA,CACf,EAGF,SAAAtH,EAAAA,IAACiL,GAAA,CACC,GAAI,CAAE,MAAO,sBAAuB,YAAa,SAAA,EACjD,QAAS,IAAM,CACb,OAAO,SAAS,KAAOjD,CACzB,CAAA,CAAA,CACF,CAAA,EAGJhI,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,WAAY,MACZ,OAAQ,MAAA,EAGV,eAACE,GAAA,CAAA,CAAiB,CAAA,CAAA,CACpB,CAAA,CAAA,CACF,CAAA,CAAA,EAGFH,EAAAA,IAACC,EAAA,CACC,UAAU,KACV,GAAI,CACF,EAAG,EACH,EAAG,EACH,GAAI,MACJ,SAAU,OACV,WAAY,MACZ,MAAO2H,GAAe,SAAA,EAGvB,SAAAnG,CAAA,CAAA,QAEF5C,GAAA,EAAc,EACfmB,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,KAAM,EACN,QAAS,OACT,cAAeR,EAAa,OAAS,GAAA,EAGtC,SAAAmL,CAAA,CAAA,EAEFC,GACCvI,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,OAAQ,QACR,SAAU,QACV,MAAO,OACP,OAAQ,IACR,KAAM,EACN,IAAK,EACL,EAAG,MACH,gBAAiB,QACjB,UACE,qFAAA,EAGJ,SAAA,CAAAqC,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,MACf,eAAgB,gBAChB,GAAI,KAAA,EAGN,SAAA,CAAAD,EAAAA,IAACkD,GAAA,CAAc,aAAc4H,CAAA,CAAsB,QAClDI,GAAA,CAAM,QAAS,IAAMJ,EAAqB,EAAK,CAAA,CAAG,CAAA,CAAA,CAAA,EAGrD9K,EAAAA,IAAC0I,GAAA,CAAM,aAAcoC,CAAA,CAAsB,CAAA,CAAA,CAAA,CAC7C,CAAA,CAAA,CAIR,CCtJA,MAAMK,GAAqB,CACzB,sBAAuB,iCACvB,UAAW,sBACX,kBAAmB,4BACrB,EAEA,SAAwBC,GAAS,CAAE,SAAAR,GAAqC,CACtE,KAAM,CAACxK,CAAQ,EAAIC,EAAA,EACbgL,EAAiBC,GAAc,oBAAoB,EAEnD3C,EAAWC,GAAA,EAEX,CAACnH,EAAO8J,CAAQ,EAAIrM,EAAAA,SAAiB,EAAE,EAEvCJ,EAASC,EAAA,EAETyM,EAAejM,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,YAAY,EAC5EiM,EAAalM,EAAe,CAAC,CAAE,QAAAC,KAAcA,EAAQ,SAAS,EAAE,EAEhE,CACJ,MAAO,CAAE,oBAAAkM,CAAA,EACT,SAAA9H,CAAA,EACEnD,EAAAA,WAAWoI,EAA0B,EAEnClI,EAAWC,EAAA,EAEjBjB,EAAAA,UAAU,IAAM,EACT,CAAC6L,GAAgB,CAACC,IAAe,CAACE,GAAmBhD,EAAS,QAAQ,GACzEhI,EAAS,QAAQ,CAErB,EAAG,CAAC6K,EAAcC,EAAY9C,EAAUhI,CAAQ,CAAC,EAEjDhB,EAAAA,UAAU,IAAM,CACd,MAAMiM,EAAcvD,GAAO,KAAMxG,GAASA,EAAK,OAAS8G,EAAS,QAAQ,EACzE,GAAIiD,GAAejD,EAAS,WAAa,cAAe,CACtD,MAAMkD,EAAY,OAAO,QAAQV,EAAkB,EAAE,KACnD,CAAC,CAACW,CAAW,IAAMA,IAAgBnD,EAAS,QAAA,EAG5C4C,EAASzM,EADP+M,EACcA,EAAU,CAAC,EAEXD,EAAY,MAFA,CAAC,CAIjC,MACEL,EAAS,EAAE,EAEb3H,EAAS,CACP,KAAM,SACN,QAAS,CACP,WAAY,CACV,KAAM,CAAA,CAAC,CACT,CACF,CACD,CAGH,EAAG,CAAC+E,CAAQ,CAAC,EAEb,MAAMoD,EAAqB,IAAM,CAC/BnI,EAAS,CACP,KAAM,SACN,QAAS,CACP,oBAAqB,CACnB,KAAM,GACN,MAAO,GACP,QAAS,GACT,WAAY,QAAA,CACd,CACF,CACD,CACH,EAEMoI,EAAgBvI,EAAAA,QAAQ,IACA,CAAC,UAAU,EACf,SAASkF,EAAS,QAAQ,EACzC,CACL,UAAW,QAAA,EAIR,CAAA,EACN,CAACA,CAAQ,CAAC,EAEb,cACG1I,EAAA,CACE,SAAA,CAAAG,EACCJ,EAAAA,IAAC2K,GAAA,CAAe,MAAAlJ,EAAe,SAAAmJ,CAAA,CAAS,EAExCtI,EAAAA,KAACrC,EAAA,CACC,GAAG,sBACH,GAAI,CACF,QAAS,OACT,UAAW,QACX,OAAQ,OACR,MAAQoL,EAA0B,KAAT,OACzB,SAAWA,EAA0B,KAAT,OAC5B,SAAWA,EAA0B,KAAT,OAC5B,cAAe,MACf,EAAG,qBAAA,EAGL,SAAA,CAAArL,EAAAA,IAACG,GAAA,EAAiB,EAClBmC,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,SACf,MAAO,QACP,aAAc,MAAA,EAGhB,SAAA,CAAAD,EAAAA,IAACiB,GAAA,EAAO,EACRjB,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,GAAI,MAAA,EAGN,eAACyI,GAAA,CAAA,CAAM,CAAA,CAAA,CACT,CAAA,CAAA,EAGFpG,EAAAA,KAACrC,EAAA,CACC,GAAI,CACF,KAAM,EACN,QAAS,OACT,cAAe,SACf,SAAU,SACV,MAAO,OACP,EAAG,iBACH,GAAG+L,CAAA,EAGL,SAAA,CAAAhM,MAACiM,IAAa,MAAAxK,EAAc,QAC3B5C,GAAA,EAAc,EACfmB,EAAAA,IAACC,EAAA,CACC,UAAU,OACV,GAAI,CACF,GAAI,CAACG,GAAY,CAACqB,EAAQ,OAAS,GAAA,EAGpC,SAAAmJ,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EAIJ5K,EAAAA,IAACkM,GAAA,CACC,OAAQR,EAAoB,KAC5B,MAAOA,EAAoB,MAC3B,YAAaA,EAAoB,WACjC,aAAcA,EAAoB,SAClC,gBAAiBA,EAAoB,UAAYK,EACjD,eAAgBL,EAAoB,OACpC,aAAc,CAAC,CAACA,EAAoB,SAEpC,SAAA1L,EAAAA,IAACC,EAAA,CACC,GAAI,CACF,QAAS,OACT,eAAgBG,EAAW,SAAW,QACtC,MAAOA,EAAW,OAAS,QAC3B,OAAQ,MAAA,EAGT,SAAAsL,EAAoB,OAAA,CAAA,CACvB,CAAA,CACF,EACF,CAEJ"}