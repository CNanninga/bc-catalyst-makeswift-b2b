{"version":3,"file":"B3Tip-legacy-LjerPIdA.js","sources":["../../src/components/TipBody.tsx","../../src/components/B3Tip.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { Box, Button } from '@mui/material';\n\ninterface TipBodyProps {\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  message: ReactNode;\n  description?: string;\n}\n\nexport default function TipBody(props: TipBodyProps) {\n  const { action, message, description } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          mr: '15px',\n        }}\n      >\n        {message}\n        {description && (\n          <p\n            style={{\n              margin: 0,\n            }}\n          >\n            {description}\n          </p>\n        )}\n      </Box>\n      {action && (\n        <Button\n          onClick={action.onClick}\n          variant=\"text\"\n          sx={{\n            color: '#ffffff',\n            padding: 0,\n          }}\n        >\n          {action.label}\n        </Button>\n      )}\n    </Box>\n  );\n}\n","import { Alert, Box, Snackbar } from '@mui/material';\n\nimport useMobile from '@/hooks/useMobile';\nimport { MsgsProps, TipMessagesProps } from '@/shared/dynamicallyVariable/context/config';\n\nimport TipBody from './TipBody';\n\ninterface B3TipProps extends TipMessagesProps {\n  handleItemClose: (id: number | string) => void;\n  handleAllClose: (id: string | number, reason: string) => void;\n}\n\nfunction MessageAlert({\n  msg,\n  onClose,\n}: {\n  msg: MsgsProps;\n  onClose: (id: string | number) => void;\n}) {\n  return (\n    <Alert\n      sx={{\n        alignItems: 'center',\n        '& button[title=\"Close\"]': {\n          display: 'block',\n        },\n        mb: '5px',\n\n        '& .MuiAlert-message': {\n          overflow: 'unset',\n          whiteSpace: 'nowrap',\n        },\n      }}\n      variant=\"filled\"\n      key={msg.id}\n      severity={msg.type}\n      onClose={() => onClose(msg.id)}\n    >\n      <TipBody action={msg.action} message={msg.msg} description={msg.description} />\n    </Alert>\n  );\n}\n\nexport default function B3Tip({\n  handleItemClose,\n  vertical = 'bottom',\n  horizontal = 'right',\n  msgs = [],\n  handleAllClose,\n}: B3TipProps) {\n  const [isMobile] = useMobile();\n  if (!msgs || !msgs.length) return null;\n  return (\n    <Box>\n      {msgs.length > 0\n        ? msgs.map((msg: MsgsProps, index: number) => (\n            <Snackbar\n              key={msg.id}\n              open={!!msg?.id}\n              autoHideDuration={msg?.time || 5000}\n              onClose={(_, reason: string) => handleAllClose(msg.id, reason)}\n              disableWindowBlurListener\n              anchorOrigin={{\n                vertical,\n                horizontal,\n              }}\n              sx={{\n                top: `${24 + index * 10 + index * (isMobile ? 80 : 90)}px !important`,\n                width: '320px',\n                height: 'auto',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <MessageAlert msg={msg} onClose={handleItemClose} />\n              </Box>\n            </Snackbar>\n          ))\n        : null}\n    </Box>\n  );\n}\n"],"names":["TipBody","props","action","message","description","jsxs","Box","sx","display","alignItems","children","mr","jsx","style","margin","Button","onClick","variant","color","padding","label","MessageAlert","msg","onClose","Alert","mb","overflow","whiteSpace","severity","type","id","handleItemClose","vertical","horizontal","msgs","handleAllClose","isMobile","useMobile","length","map","index","Snackbar","open","autoHideDuration","time","_","reason","disableWindowBlurListener","anchorOrigin","top","width","height"],"mappings":"8MAYA,SAAwBA,EAAQC,GAC9B,MAAMC,OAAEA,EAAAC,QAAQA,EAAAC,YAASA,GAAgBH,EAEzC,OACEI,EAAAA,KAACC,EAAA,CACCC,GAAI,CACFC,QAAS,OACTC,WAAY,UAGdC,SAAA,CAAAL,EAAAA,KAACC,EAAA,CACCC,GAAI,CACFI,GAAI,QAGLD,SAAA,CAAAP,EACAC,GACCQ,EAAAA,IAAC,IAAA,CACCC,MAAO,CACLC,OAAQ,GAGTJ,SAAAN,OAINF,GACCU,EAAAA,IAACG,EAAA,CACCC,QAASd,EAAOc,QAChBC,QAAQ,OACRV,GAAI,CACFW,MAAO,UACPC,QAAS,GAGVT,SAAAR,EAAOkB,UAKlB,CCxCA,SAASC,GAAaC,IACpBA,EAAAC,QACAA,IAKA,OACEX,EAAAA,IAACY,EAAA,CACCjB,GAAI,CACFE,WAAY,SACZ,0BAA2B,CACzBD,QAAS,SAEXiB,GAAI,MAEJ,sBAAuB,CACrBC,SAAU,QACVC,WAAY,WAGhBV,QAAQ,SAERW,SAAUN,EAAIO,KACdN,QAASA,IAAMA,EAAQD,EAAIQ,IAE3BpB,SAAAE,EAAAA,IAACZ,EAAA,CAAQE,OAAQoB,EAAIpB,OAAQC,QAASmB,EAAIA,IAAKlB,YAAakB,EAAIlB,eAJ3DkB,EAAIQ,GAOf,OAEA,UAA8BC,gBAC5BA,EAAAC,SACAA,EAAW,SAAAC,WACXA,EAAa,QAAAC,KACbA,EAAO,GAACC,eACRA,IAEA,MAAOC,GAAYC,IACnB,OAAKH,GAASA,EAAKI,OAEjB1B,MAACN,GACEI,SAAAwB,EAAKI,OAAS,EACXJ,EAAKK,IAAI,CAACjB,EAAgBkB,IACxB5B,EAAAA,IAAC6B,EAAA,CAECC,OAAQpB,GAAKQ,GACba,iBAAkBrB,GAAKsB,MAAQ,IAC/BrB,QAASA,CAACsB,EAAGC,IAAmBX,EAAeb,EAAIQ,GAAIgB,GACvDC,2BAAyB,EACzBC,aAAc,CACZhB,WACAC,cAEF1B,GAAI,CACF0C,IAAQ,GAAa,GAART,EAAaA,GAASJ,EAAW,GAAK,IAA9C,gBACLc,MAAO,QACPC,OAAQ,QAGVzC,SAAAE,EAAAA,IAACN,EAAA,CACCC,GAAI,CACFC,QAAS,QAGXE,SAAAE,EAAAA,IAACS,EAAA,CAAaC,MAAUC,QAASQ,OApB9BT,EAAIQ,KAwBb,OA9B0B,IAiCpC"}