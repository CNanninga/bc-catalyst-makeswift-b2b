{"version":3,"file":"index-DOVrV7iQ.js","sources":["../../src/pages/ShoppingLists/config.ts","../../src/pages/ShoppingLists/createB2BShoppingList.ts","../../src/pages/ShoppingLists/createBcShoppingList.ts","../../src/pages/ShoppingLists/duplicateB2BShoppingList.ts","../../src/pages/ShoppingLists/duplicateB2CShoppingList.ts","../../src/pages/ShoppingLists/updateB2BShoppingListDetails.ts","../../src/pages/ShoppingLists/updateB2CShoppingListDetails.ts","../../src/pages/ShoppingLists/AddEditShoppingLists.tsx","../../src/pages/ShoppingLists/deleteB2BShoppingList.ts","../../src/pages/ShoppingLists/deleteB2CShoppingList.ts","../../src/pages/ShoppingLists/ShoppingListsCard.tsx","../../src/pages/ShoppingLists/index.tsx"],"sourcesContent":["import { LangFormatFunction, useB3Lang } from '@/lib/lang';\nimport { CompanyInfoTypes } from '@/types/invoice';\nimport { ShoppingListStatus } from '@/types/shoppingList';\n\nexport interface ShoppingListSearch {\n  search?: string;\n  createdBy?: string;\n  status?: string | number | number[];\n  offset?: number;\n  first?: number;\n}\n\ninterface ShoppingListStatusProps {\n  label: string;\n  value: number | string;\n  idLang: string;\n}\n\ninterface ShoppingListsItemsCustomerInfoProps {\n  firstName: string;\n  lastName: string;\n  userId: number;\n  email: string;\n  role: string;\n}\n\nexport interface ShoppingListsItemsProps {\n  id?: number;\n  name: string;\n  description: string;\n  status: number;\n  customerInfo: ShoppingListsItemsCustomerInfoProps;\n  products: {\n    totalCount: number;\n  };\n  updatedAt: string | number;\n  sampleShoppingListId?: number | string;\n  channelId: number;\n  approvedFlag: boolean;\n  isOwner: boolean;\n  companyInfo: CompanyInfoTypes | null;\n  companyId?: number;\n}\n\nexport interface GetFilterMoreListProps {\n  options?: Array<ShoppingListStatusProps>;\n  rows?: string | number;\n  name: string;\n  label: string;\n  required: boolean;\n  default: string;\n  fieldType: string;\n  xs: number;\n  variant: string;\n  size: string;\n  maxLength?: number;\n  idLang?: string;\n}\n\nconst useGetFilterShoppingListStatus = () => {\n  const b3Lang = useB3Lang();\n\n  return (submitShoppingListPermission: boolean) => {\n    const draftStatus = {\n      value: ShoppingListStatus.Draft,\n      label: b3Lang('global.shoppingLists.status.draft'),\n    };\n    const rejectedStatus = {\n      value: ShoppingListStatus.Rejected,\n      label: b3Lang('global.shoppingLists.status.rejected'),\n    };\n\n    // TODO: fix 99 which is used for selecting all\n    return [\n      { value: 99, label: b3Lang('global.shoppingLists.status.all') },\n      { value: ShoppingListStatus.Approved, label: b3Lang('global.shoppingLists.status.approved') },\n      ...(submitShoppingListPermission ? [draftStatus] : []),\n      {\n        value: ShoppingListStatus.ReadyForApproval,\n        label: b3Lang('global.shoppingLists.status.readyForApproval'),\n      },\n      ...(submitShoppingListPermission ? [rejectedStatus] : []),\n    ];\n  };\n};\n\ninterface CreatedByUsers {\n  createdByUser?: {\n    results: Array<{ firstName: string; lastName: string; email: string }>;\n  };\n}\n\nexport const useGetFilterMoreList = () => {\n  const b3Lang = useB3Lang();\n  const getFilterShoppingListStatus = useGetFilterShoppingListStatus();\n\n  return (submitShoppingListPermission: boolean, createdByUsers: CreatedByUsers) => {\n    const newCreatedByUsers =\n      createdByUsers?.createdByUser?.results.map((item) => ({\n        createdBy: `${item.firstName} ${item.lastName} (${item.email})`,\n      })) || [];\n\n    return [\n      {\n        name: 'createdBy',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: newCreatedByUsers,\n        replaceOptions: {\n          label: 'createdBy',\n          value: 'createdBy',\n        },\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.createdBy'),\n      },\n      {\n        name: 'status',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: getFilterShoppingListStatus(submitShoppingListPermission),\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.status'),\n      },\n    ];\n  };\n};\n\nexport const getCreatedShoppingListFiles = (\n  b3Lang: LangFormatFunction,\n): GetFilterMoreListProps[] => [\n  {\n    name: 'name',\n    label: b3Lang('shoppingLists.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('shoppingLists.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst createShoppingList = `\n  mutation CreateShoppingList ($shoppingListData: ShoppingListsInputType!){\n    shoppingListsCreate (\n      shoppingListData: $shoppingListData\n    ) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ntype CreateShoppingListResponse = {\n  data: {\n    shoppingListsCreate: {\n      shoppingList: {\n        id: string;\n      };\n    };\n  };\n};\n\ninterface CreateShoppingListVariables {\n  name: string;\n  description: string;\n  status: number;\n}\n\nexport const createB2BShoppingList = (data: CreateShoppingListVariables) =>\n  B3Request.graphqlB2B<CreateShoppingListResponse>({\n    query: createShoppingList,\n    variables: { shoppingListData: data },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst createCustomerShoppingList = `\n  mutation CreateCustomerShoppingList($shoppingListData: CustomerShoppingListsInputType!) {\n    customerShoppingListsCreate(shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface CreateCustomerShoppingListResponse {\n  data: {\n    customerShoppingListsCreate: {\n      shoppingList: {\n        id: string;\n      };\n    };\n  };\n}\n\ninterface ShoppingListParams {\n  name: string;\n  description: string;\n  channelId: number;\n}\n\nexport const createBcShoppingList = (data: ShoppingListParams) =>\n  B3Request.graphqlB2B<CreateCustomerShoppingListResponse>({\n    query: createCustomerShoppingList,\n    variables: {\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        channelId: data?.channelId ? Number(data.channelId) : 1,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst duplicateShoppingList = `\n  mutation DuplicateB2BShoppingList($sampleShoppingListId: Int!, $shoppingListData: ShoppingListsDuplicateInputType!){\n    shoppingListsDuplicate(sampleShoppingListId: $sampleShoppingListId, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface DuplicateB2BShoppingListResponse {\n  shoppingListsDuplicate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  sampleShoppingListId: string | number;\n  name: string;\n  description: string;\n}\n\nexport const duplicateB2BShoppingList = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<DuplicateB2BShoppingListResponse>({\n    query: duplicateShoppingList,\n    variables: {\n      sampleShoppingListId: Number(data.sampleShoppingListId),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst duplicateCustomerShoppingList = `\n  mutation DuplicateB2CShoppingList($sampleShoppingListId: Int!, $shoppingListData: ShoppingListsDuplicateInputType!){\n    customerShoppingListsDuplicate(sampleShoppingListId: $sampleShoppingListId, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id,\n      }\n    }\n  }\n`;\n\ninterface DuplicateB2CShoppingListResponse {\n  customerShoppingListsDuplicate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  sampleShoppingListId: string | number;\n  name: string;\n  description: string;\n}\n\nexport const duplicateB2CShoppingList = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<DuplicateB2CShoppingListResponse>({\n    query: duplicateCustomerShoppingList,\n    variables: {\n      sampleShoppingListId: Number(data.sampleShoppingListId),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst updateShoppingList = `\n  mutation UpdateB2BShoppingList ($id: Int!, $shoppingListData: ShoppingListsInputType!) {\n    shoppingListsUpdate(id: $id, shoppingListData: $shoppingListData) {\n      shoppingList {\n        id\n      }\n    }\n  }\n`;\n\ninterface B2BShoppingListUpdateResponse {\n  shoppingListsUpdate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  id: string | number;\n  name: string;\n  description: string;\n  status: number;\n}\n\nexport const updateB2BShoppingListDetails = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<B2BShoppingListUpdateResponse>({\n    query: updateShoppingList,\n    variables: {\n      id: Number(data.id),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        // passes back original status, not editable in the UI\n        status: data.status,\n      },\n    },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst updateCustomerShoppingList = `mutation UpdateB2CShoppingList($id: Int!, $shoppingListData: CustomerShoppingListsInputType!){\n  customerShoppingListsUpdate(id: $id, shoppingListData: $shoppingListData) {\n    shoppingList {\n      id\n    }\n  }\n}`;\n\ninterface B2CShoppingListUpdateResponse {\n  customerShoppingListsUpdate: {\n    shoppingList: {\n      id: number;\n    };\n  };\n}\n\ninterface ShoppingListVariables {\n  id: string | number;\n  name: string;\n  description: string;\n  channelId: number;\n}\n\nexport const updateB2CShoppingListDetails = (data: ShoppingListVariables) =>\n  B3Request.graphqlB2B<B2CShoppingListUpdateResponse>({\n    query: updateCustomerShoppingList,\n    variables: {\n      id: Number(data.id),\n      shoppingListData: {\n        name: data.name,\n        description: data.description,\n        channelId: data?.channelId ? Number(data.channelId) : 1,\n      },\n    },\n  });\n","import { forwardRef, Ref, useEffect, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { useB3Lang } from '@/lib/lang';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId, snackbar } from '@/utils';\n\nimport {\n  getCreatedShoppingListFiles,\n  GetFilterMoreListProps,\n  ShoppingListsItemsProps,\n} from './config';\nimport { createB2BShoppingList } from './createB2BShoppingList';\nimport { createBcShoppingList } from './createBcShoppingList';\nimport { duplicateB2BShoppingList } from './duplicateB2BShoppingList';\nimport { duplicateB2CShoppingList } from './duplicateB2CShoppingList';\nimport { updateB2BShoppingListDetails } from './updateB2BShoppingListDetails';\nimport { updateB2CShoppingListDetails } from './updateB2CShoppingListDetails';\n\ninterface AddEditUserProps {\n  renderList: () => void;\n  isB2BUser: boolean;\n}\n\nfunction AddEditShoppingLists(\n  { renderList, isB2BUser }: AddEditUserProps,\n  ref: Ref<unknown> | undefined,\n) {\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n  const [open, setOpen] = useState<boolean>(false);\n  const [type, setType] = useState<string>('');\n\n  const [editData, setEditData] = useState<ShoppingListsItemsProps | null>(null);\n\n  const [addUpdateLoading, setAddUpdateLoading] = useState<boolean>(false);\n\n  const [usersFiles, setUsersFiles] = useState<Array<GetFilterMoreListProps>>([]);\n  const b3Lang = useB3Lang();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    clearErrors,\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  useEffect(() => {\n    if (open && type !== 'add' && editData) {\n      usersFiles.forEach((item: GetFilterMoreListProps) => {\n        setValue(item.name, (editData as CustomFieldItems)[item.name]);\n      });\n    }\n  }, [editData, open, setValue, type, usersFiles]);\n\n  const handleCancelClick = () => {\n    usersFiles.forEach((item: GetFilterMoreListProps) => {\n      setValue(item.name, '');\n    });\n    clearErrors();\n    setOpen(false);\n  };\n\n  const handleAddUserClick = () => {\n    handleSubmit(async (data) => {\n      setAddUpdateLoading(true);\n      try {\n        const params: Partial<ShoppingListsItemsProps> = {\n          ...data,\n        };\n\n        // @ts-expect-error this all needs refactoring to give types a chance of matching\n        let fn: (params: typeof params) => Promise<unknown> = isB2BUser\n          ? createB2BShoppingList\n          : createBcShoppingList;\n        let successTip = b3Lang('shoppingLists.addSuccess');\n        if (type === 'edit') {\n          if (isB2BUser) {\n            fn = updateB2BShoppingListDetails;\n            params.status = editData?.status;\n          } else {\n            fn = updateB2CShoppingListDetails;\n            params.channelId = channelId;\n          }\n\n          params.id = editData?.id || 0;\n          successTip = b3Lang('shoppingLists.updateSuccess');\n        } else if (type === 'dup') {\n          fn = isB2BUser ? duplicateB2BShoppingList : duplicateB2CShoppingList;\n          params.sampleShoppingListId = editData?.id || 0;\n          successTip = b3Lang('shoppingLists.duplicateSuccess');\n        } else if (type === 'add') {\n          if (isB2BUser) {\n            const { submitShoppingListPermission } = b2bPermissions;\n            if (selectCompanyHierarchyId) {\n              params.companyId = Number(selectCompanyHierarchyId);\n            }\n            params.status = submitShoppingListPermission\n              ? ShoppingListStatus.Draft\n              : ShoppingListStatus.Approved;\n          } else {\n            params.channelId = channelId;\n          }\n        }\n\n        await fn(params);\n        handleCancelClick();\n        snackbar.success(successTip);\n        renderList();\n      } finally {\n        setAddUpdateLoading(false);\n      }\n    })();\n  };\n\n  const handleOpenAddEditShoppingListsClick = (type: string, data: ShoppingListsItemsProps) => {\n    const usersFiles = getCreatedShoppingListFiles(b3Lang);\n    setUsersFiles(usersFiles);\n    if (data) setEditData(data);\n    setType(type);\n    setOpen(true);\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleOpenAddEditShoppingListsClick,\n  }));\n\n  const getTitle = () => {\n    if (type === 'edit') {\n      return b3Lang('shoppingLists.edit');\n    }\n    if (type === 'add') {\n      return b3Lang('shoppingLists.createNewShoppingList');\n    }\n    return b3Lang('shoppingLists.duplicateShoppingList');\n  };\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      title={getTitle()}\n      leftSizeBtn={b3Lang('shoppingLists.cancel')}\n      rightSizeBtn={b3Lang('shoppingLists.save')}\n      handleLeftClick={handleCancelClick}\n      handRightClick={handleAddUserClick}\n      loading={addUpdateLoading}\n    >\n      <B3CustomForm\n        formFields={usersFiles}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n    </B3Dialog>\n  );\n}\n\nconst B3AddEditShoppingLists = forwardRef(AddEditShoppingLists);\n\nexport default B3AddEditShoppingLists;\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst deleteShoppingList = `\n  mutation DeleteShoppingList($id: Int!) {\n    shoppingListsDelete(id: $id) {\n      message\n    }\n  }\n`;\n\ninterface DeleteShoppingListResponse {\n  data: {\n    shoppingListsDelete: {\n      message: string;\n    };\n  };\n}\n\nexport const deleteB2BShoppingList = (id: number | string) =>\n  B3Request.graphqlB2B<DeleteShoppingListResponse>({\n    query: deleteShoppingList,\n    variables: { id: Number(id) },\n  });\n","import B3Request from '@/shared/service/request/b3Fetch';\n\nconst deleteCustomerShoppingList = `\n  mutation DeleteCustomerShoppingList ($id: Int!) {\n    customerShoppingListsDelete (id: $id) {\n      message\n    }\n  }\n`;\n\ninterface DeleteShoppingListResponse {\n  data: {\n    customerShoppingListsDelete: {\n      message: string;\n    };\n  };\n}\n\nexport const deleteB2CShoppingList = (id: number | string) =>\n  B3Request.graphqlB2B<DeleteShoppingListResponse>({\n    query: deleteCustomerShoppingList,\n    variables: { id: Number(id) },\n  });\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport {\n  ContentCopy as ContentCopyIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n} from '@mui/icons-material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { useB3Lang } from '@/lib/lang';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { displayFormat, verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { ShoppingListsItemsProps } from './config';\nimport { ShoppingListStatusTag } from './ShoppingListStatusTag';\n\ninterface OrderItemCardProps {\n  item: ShoppingListsItemsProps;\n  onEdit: (data: ShoppingListsItemsProps) => void;\n  onDelete: (data: ShoppingListsItemsProps) => void;\n  onCopy: (data: ShoppingListsItemsProps) => void;\n  isPermissions: boolean;\n  isB2BUser: boolean;\n}\n\nconst Flex = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nconst FontBold = styled(Typography)(() => ({\n  fontWeight: '500',\n  paddingRight: '5px',\n}));\n\nconst FlexItem = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'start',\n}));\n\nfunction ShoppingListsCard(props: OrderItemCardProps) {\n  const { item: shoppingList, onEdit, onDelete, onCopy, isPermissions, isB2BUser } = props;\n  const b3Lang = useB3Lang();\n\n  const [isCanEditShoppingList, setIsCanEditShoppingList] = useState<boolean>(true);\n\n  const { submitShoppingListPermission, approveShoppingListPermission } =\n    useAppSelector(rolePermissionSelector);\n\n  const getEditPermissions = (status: number) => {\n    if (submitShoppingListPermission) {\n      if (status === ShoppingListStatus.Draft || status === ShoppingListStatus.Approved)\n        return false;\n      return true;\n    }\n\n    if (status === ShoppingListStatus.ReadyForApproval) return true;\n\n    return false;\n  };\n\n  const shoppingListCanBeDeleted = (status: number) => {\n    if (!submitShoppingListPermission) {\n      return true;\n    }\n\n    // Status code 20 was previously misused as Rejected in the frontend, which is actually Deleted\n    // We need to add Deleted here so that the shopping lists that were previously rejected remain the same behavior\n    const isInDeletableStatus =\n      status === ShoppingListStatus.Deleted ||\n      status === ShoppingListStatus.Draft ||\n      status === ShoppingListStatus.Rejected;\n\n    return isInDeletableStatus;\n  };\n\n  const navigate = useNavigate();\n\n  const goToDetail = (shoppingList: ShoppingListsItemsProps) =>\n    navigate(`/shoppingList/${shoppingList.id}`, {\n      state: {\n        from: 'shoppingList',\n      },\n    });\n\n  useEffect(() => {\n    if (isB2BUser) {\n      const { companyInfo, customerInfo } = shoppingList;\n\n      const { shoppingListCreateActionsPermission } = b2bPermissionsMap;\n      const shoppingListActionsPermission = verifyLevelPermission({\n        code: shoppingListCreateActionsPermission,\n        companyId: Number(companyInfo?.companyId || 0),\n        userId: Number(customerInfo.userId),\n      });\n\n      setIsCanEditShoppingList(shoppingListActionsPermission);\n    }\n  }, [shoppingList, isB2BUser]);\n\n  return (\n    <Card\n      key={shoppingList.id}\n      sx={{\n        '& .b2b-card-content': {\n          paddingBottom: '16px',\n        },\n      }}\n    >\n      <CardContent\n        className=\"b2b-card-content\"\n        sx={{\n          color: '#313440',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{\n            color: 'rgba(0, 0, 0, 0.87)',\n            width: '100%',\n            wordBreak: 'break-all',\n          }}\n        >\n          {shoppingList.name}\n        </Typography>\n        <Box\n          sx={{\n            pt: '8px',\n            pb: '20px',\n          }}\n        >\n          {isB2BUser &&\n            (submitShoppingListPermission ||\n              (approveShoppingListPermission && shoppingList.approvedFlag)) && (\n              <Box\n                sx={{\n                  pb: '25px',\n                }}\n              >\n                <ShoppingListStatusTag status={shoppingList.status} />\n              </Box>\n            )}\n          <Box\n            sx={{\n              width: '100%',\n              wordBreak: 'break-all',\n            }}\n          >\n            {shoppingList.description}\n          </Box>\n\n          {isB2BUser && (\n            <FlexItem>\n              <FontBold>{b3Lang('shoppingLists.card.createdBy')}</FontBold>\n              {shoppingList.customerInfo.firstName} {shoppingList.customerInfo.lastName}\n            </FlexItem>\n          )}\n          <FlexItem>\n            <FontBold>{b3Lang('shoppingLists.card.products')}</FontBold>\n            {shoppingList.products.totalCount}\n          </FlexItem>\n          <FlexItem>\n            <FontBold>{b3Lang('shoppingLists.card.lastActivity')}</FontBold>\n            {`${displayFormat(shoppingList.updatedAt)}`}\n          </FlexItem>\n        </Box>\n        <Flex>\n          <CustomButton\n            sx={{\n              m: '0 0 0 -8px',\n              minWidth: 0,\n            }}\n            variant=\"text\"\n            onClick={() => goToDetail(shoppingList)}\n          >\n            {b3Lang('shoppingLists.card.view')}\n          </CustomButton>\n          <Box\n            sx={{\n              display: isPermissions ? 'block' : 'none',\n            }}\n          >\n            {!getEditPermissions(shoppingList.status) && isCanEditShoppingList && (\n              <IconButton\n                aria-label=\"edit\"\n                size=\"medium\"\n                sx={{\n                  marginRight: '8px',\n                }}\n                onClick={() => {\n                  onEdit(shoppingList);\n                }}\n              >\n                <EditIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n\n            <IconButton\n              aria-label=\"duplicate\"\n              size=\"medium\"\n              sx={{\n                marginRight: '8px',\n              }}\n              onClick={() => {\n                onCopy(shoppingList);\n              }}\n            >\n              <ContentCopyIcon fontSize=\"inherit\" />\n            </IconButton>\n            {shoppingListCanBeDeleted(shoppingList.status) && isCanEditShoppingList && (\n              <IconButton\n                aria-label=\"delete\"\n                size=\"medium\"\n                onClick={() => {\n                  onDelete(shoppingList);\n                }}\n              >\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n          </Box>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ShoppingListsCard;\n","import { useContext, useEffect, useRef, useState } from 'react';\nimport { Box } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { useCardListColumn, useMobile, useTableRef } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  getB2BShoppingList,\n  getBcShoppingList,\n  getShoppingListsCreatedByUser,\n} from '@/shared/service/b2b';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId, snackbar } from '@/utils';\n\nimport AddEditShoppingLists from './AddEditShoppingLists';\nimport { ShoppingListSearch, ShoppingListsItemsProps, useGetFilterMoreList } from './config';\nimport { deleteB2BShoppingList } from './deleteB2BShoppingList';\nimport { deleteB2CShoppingList } from './deleteB2CShoppingList';\nimport ShoppingListsCard from './ShoppingListsCard';\n\ninterface RefCurrentProps extends HTMLInputElement {\n  handleOpenAddEditShoppingListsClick: (type: string, data?: ShoppingListsItemsProps) => void;\n}\n\nfunction useData() {\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyB2BId = useAppSelector(({ company }) => company.companyInfo.id);\n  const { shoppingListCreateActionsPermission, submitShoppingListPermission } =\n    useAppSelector(rolePermissionSelector);\n  const companyId = companyB2BId || salesRepCompanyId;\n\n  const deleteShoppingList = isB2BUser ? deleteB2BShoppingList : deleteB2CShoppingList;\n\n  const getUserShoppingLists = isB2BUser\n    ? () => getShoppingListsCreatedByUser(Number(companyId), 1)\n    : () => Promise.resolve({});\n\n  return {\n    isB2BUser,\n    shoppingListCreateActionsPermission,\n    submitShoppingListPermission,\n    deleteShoppingList,\n    getUserShoppingLists,\n  };\n}\n\nfunction ShoppingLists() {\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<null | ShoppingListsItemsProps>(null);\n  const [filterMoreInfo, setFilterMoreInfo] = useState<Array<any>>([]);\n  const getFilterMoreList = useGetFilterMoreList();\n\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [paginationTableRef] = useTableRef();\n\n  const {\n    isB2BUser,\n    shoppingListCreateActionsPermission,\n    submitShoppingListPermission,\n    deleteShoppingList,\n    getUserShoppingLists,\n  } = useData();\n\n  const {\n    state: { openAPPParams },\n    dispatch,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const initFilter = async () => {\n      setFilterMoreInfo(\n        getFilterMoreList(submitShoppingListPermission, await getUserShoppingLists()),\n      );\n    };\n\n    initFilter();\n\n    if (openAPPParams.shoppingListBtn) {\n      dispatch({\n        type: 'common',\n        payload: {\n          openAPPParams: {\n            quoteBtn: '',\n            shoppingListBtn: '',\n          },\n        },\n      });\n    }\n    // disabling as we only need to run this once and values at starting render are good enough\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isExtraLarge = useCardListColumn();\n\n  const customItem = {\n    isEnabled: isB2BUser ? shoppingListCreateActionsPermission : true,\n    customLabel: b3Lang('shoppingLists.createNew'),\n    customButtonStyle: {\n      fontSize: '15px',\n      fontWeight: '500',\n      width: '140px',\n      padding: '0',\n    },\n  };\n  const statusPermissions = !submitShoppingListPermission\n    ? [ShoppingListStatus.Approved, ShoppingListStatus.ReadyForApproval]\n    : '';\n\n  const initSearch = {\n    search: '',\n    createdBy: '',\n    status: statusPermissions,\n    isDefault: true,\n  };\n\n  const [filterSearch, setFilterSearch] = useState<ShoppingListSearch>(initSearch);\n\n  const addEditShoppingListsRef = useRef<RefCurrentProps | null>(null);\n\n  const initSearchList = () => {\n    paginationTableRef.current?.refresh();\n  };\n\n  const handleChange = (key: string, value: string) => {\n    if (key === 'search') {\n      const search = {\n        ...initSearch,\n        search: value,\n      };\n\n      setFilterSearch(search);\n    }\n  };\n\n  const handleFilterChange = (data: ShoppingListSearch) => {\n    const { status } = data;\n\n    const getNewStatus = status === '' || status === 99 ? statusPermissions : status;\n    const search = {\n      ...initSearch,\n      createdBy: data.createdBy,\n      status: getNewStatus,\n      isDefault: status === '',\n    };\n\n    setFilterSearch(search);\n  };\n\n  const fetchList: GetRequestList<ShoppingListSearch, ShoppingListsItemsProps> = async (params) => {\n    const { edges, totalCount } = isB2BUser\n      ? await getB2BShoppingList(params)\n      : await getBcShoppingList({\n          offset: params.offset,\n          first: params.first,\n          search: params.search,\n          channelId,\n        });\n\n    return {\n      edges,\n      totalCount,\n    };\n  };\n\n  const handleAddShoppingListsClick = () => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('add');\n  };\n\n  const handleEdit = (shoppingList: ShoppingListsItemsProps) => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('edit', shoppingList);\n  };\n\n  const handleCopy = (shoppingList: ShoppingListsItemsProps) => {\n    addEditShoppingListsRef.current?.handleOpenAddEditShoppingListsClick('dup', shoppingList);\n  };\n\n  const handleDelete = (row: ShoppingListsItemsProps) => {\n    setDeleteItem(row);\n    setDeleteOpen(true);\n  };\n\n  const handleCancelClick = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleDeleteUserClick = async () => {\n    if (!deleteItem) return;\n    try {\n      setIsRequestLoading(true);\n      handleCancelClick();\n\n      await deleteShoppingList(deleteItem?.id || 0);\n\n      snackbar.success(b3Lang('shoppingLists.deleteSuccess'));\n    } finally {\n      setIsRequestLoading(false);\n      initSearchList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          showB3FilterMoreIcon={isB2BUser}\n          filterMoreInfo={filterMoreInfo}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n          customButtonConfig={customItem}\n          handleFilterCustomButtonClick={handleAddShoppingListsClick}\n        />\n        <B3PaginationTable\n          columnItems={[]}\n          ref={paginationTableRef}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={fetchList}\n          searchParams={filterSearch}\n          isCustomRender\n          itemXs={isExtraLarge ? 3 : 4}\n          requestLoading={setIsRequestLoading}\n          renderItem={(row) => (\n            <ShoppingListsCard\n              key={row.id || ''}\n              item={row}\n              isPermissions={isB2BUser ? shoppingListCreateActionsPermission : true}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n              onCopy={handleCopy}\n              isB2BUser={isB2BUser}\n            />\n          )}\n        />\n        <AddEditShoppingLists\n          renderList={initSearchList}\n          ref={addEditShoppingListsRef}\n          isB2BUser={isB2BUser}\n        />\n        <B3Dialog\n          isOpen={deleteOpen}\n          title={b3Lang('shoppingLists.deleteShoppingList')}\n          leftSizeBtn={b3Lang('shoppingLists.cancel')}\n          rightSizeBtn={b3Lang('shoppingLists.delete')}\n          handleLeftClick={handleCancelClick}\n          handRightClick={handleDeleteUserClick}\n          row={deleteItem}\n          rightStyleBtn={{\n            color: '#D32F2F',\n          }}\n          isShowBordered={false}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              width: isMobile ? '100%' : '450px',\n              height: '100%',\n            }}\n          >\n            {b3Lang('shoppingLists.confirmDelete')}\n          </Box>\n        </B3Dialog>\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default ShoppingLists;\n"],"names":["useGetFilterShoppingListStatus","b3Lang","useB3Lang","submitShoppingListPermission","draftStatus","ShoppingListStatus","rejectedStatus","useGetFilterMoreList","getFilterShoppingListStatus","createdByUsers","_a","item","getCreatedShoppingListFiles","createShoppingList","createB2BShoppingList","data","B3Request","createCustomerShoppingList","createBcShoppingList","duplicateShoppingList","duplicateB2BShoppingList","duplicateCustomerShoppingList","duplicateB2CShoppingList","updateShoppingList","updateB2BShoppingListDetails","updateCustomerShoppingList","updateB2CShoppingListDetails","AddEditShoppingLists","renderList","isB2BUser","ref","b2bPermissions","useAppSelector","rolePermissionSelector","selectCompanyHierarchyId","company","open","setOpen","useState","type","setType","editData","setEditData","addUpdateLoading","setAddUpdateLoading","usersFiles","setUsersFiles","control","handleSubmit","getValues","errors","clearErrors","setValue","useForm","useEffect","handleCancelClick","handleAddUserClick","params","fn","successTip","channelId","snackbar","handleOpenAddEditShoppingListsClick","useImperativeHandle","getTitle","jsx","B3Dialog","B3CustomForm","B3AddEditShoppingLists","forwardRef","deleteShoppingList","deleteB2BShoppingList","id","deleteCustomerShoppingList","deleteB2CShoppingList","Flex","styled","FontBold","Typography","FlexItem","Box","ShoppingListsCard","props","shoppingList","onEdit","onDelete","onCopy","isPermissions","isCanEditShoppingList","setIsCanEditShoppingList","approveShoppingListPermission","getEditPermissions","status","shoppingListCanBeDeleted","navigate","useNavigate","goToDetail","companyInfo","customerInfo","shoppingListCreateActionsPermission","b2bPermissionsMap","shoppingListActionsPermission","verifyLevelPermission","Card","jsxs","CardContent","ShoppingListStatusTag","displayFormat","CustomButton","IconButton","EditIcon","ContentCopyIcon","DeleteIcon","useData","salesRepCompanyId","b2bFeatures","isB2BUserSelector","companyB2BId","companyId","getShoppingListsCreatedByUser","ShoppingLists","isRequestLoading","setIsRequestLoading","deleteOpen","setDeleteOpen","deleteItem","setDeleteItem","filterMoreInfo","setFilterMoreInfo","getFilterMoreList","isMobile","useMobile","paginationTableRef","useTableRef","getUserShoppingLists","openAPPParams","dispatch","useContext","GlobalContext","isExtraLarge","useCardListColumn","customItem","statusPermissions","initSearch","filterSearch","setFilterSearch","addEditShoppingListsRef","useRef","initSearchList","handleChange","key","value","search","handleFilterChange","getNewStatus","fetchList","edges","totalCount","getB2BShoppingList","getBcShoppingList","handleAddShoppingListsClick","handleEdit","handleCopy","handleDelete","row","handleDeleteUserClick","B3Spin","B3Filter","B3PaginationTable"],"mappings":"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"}