{"version":3,"file":"index-C821icu0.js","sources":["../../src/pages/ForgotPassword/index.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, ImageListItem, Typography } from '@mui/material';\n\nimport { B3Card, B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { Captcha } from '@/components/form';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { GlobalContext } from '@/shared/global';\nimport { getStorefrontToken, requestResetPassword } from '@/shared/service/b2b/graphql/recaptcha';\nimport b2bLogger from '@/utils/b3Logger';\n\nimport { getForgotPasswordFields, sendForgotPasswordEmailFor } from '../Login/config';\nimport { B3ResetPassWordButton, LoginImage } from '../Login/styled';\nimport { type PageProps } from '../PageProps';\n\ninterface ForgotPasswordProps extends PageProps {\n  logo?: string;\n  isEnabledOnStorefront: boolean;\n  storefrontSiteKey: string;\n}\n\ninterface FormFields {\n  email: string;\n}\n\nexport function ForgotPassword({\n  setOpenPage,\n  isEnabledOnStorefront,\n  storefrontSiteKey,\n  logo,\n}: ForgotPasswordProps) {\n  const [isMobile] = useMobile();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const b3Lang = useB3Lang();\n  const forgotPasswordFields = getForgotPasswordFields(b3Lang);\n  const [isCaptchaMissing, setIsCaptchaMissing] = useState(false);\n  const [captchaKey, setCaptchaKey] = useState('');\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm<FormFields>({\n    mode: 'onSubmit',\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (captchaKey || !isEnabledOnStorefront) setIsCaptchaMissing(false);\n  }, [captchaKey, isEnabledOnStorefront]);\n\n  const handleLoginClick = handleSubmit(async ({ email }) => {\n    if (isEnabledOnStorefront && !captchaKey) {\n      setIsCaptchaMissing(true);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      if (isEnabledOnStorefront && captchaKey) {\n        try {\n          await requestResetPassword(captchaKey, email);\n          navigate('/login?loginFlag=receivePassword');\n          setLoading(false);\n        } catch (e) {\n          b2bLogger.error(e);\n        }\n      }\n\n      if (!isEnabledOnStorefront) {\n        await sendForgotPasswordEmailFor(email);\n        setLoading(false);\n        navigate('/login?loginFlag=receivePassword');\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    }\n  });\n\n  return (\n    <B3Card setOpenPage={setOpenPage}>\n      <Box\n        sx={{\n          bgcolor: '#FFFFFF',\n          borderRadius: '4px',\n          display: 'flex',\n          flexDirection: 'column',\n          mr: 'auto',\n          ml: 'auto',\n          maxWidth: '537px',\n        }}\n      >\n        <Box sx={{ mt: '20px' }}>\n          {logo && (\n            <LoginImage>\n              <ImageListItem\n                sx={{\n                  maxWidth: isMobile ? '175px' : '250px',\n                }}\n                onClick={() => {\n                  window.location.assign('/');\n                }}\n              >\n                <img src={logo} alt={b3Lang('global.tips.registerLogo')} loading=\"lazy\" />\n              </ImageListItem>\n            </LoginImage>\n          )}\n        </Box>\n        <Box\n          sx={{\n            margin: '20px 0 0 0',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h5\"\n            sx={{\n              margin: '16px 0',\n            }}\n          >\n            {b3Lang('forgotPassword.resetPassword')}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              margin: '0 16px 16px 16px',\n            }}\n          >\n            {b3Lang('forgotPassword.requestEmail')}\n          </Typography>\n          <B3CustomForm\n            formFields={forgotPasswordFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n            sx={{ margin: '0 16px', maxWidth: isMobile ? '311px' : '505px' }}\n          />\n          {isEnabledOnStorefront && isCaptchaMissing ? (\n            <Typography\n              variant=\"body1\"\n              sx={{\n                color: 'red',\n                display: 'flex',\n                alignSelf: 'flex-start',\n                marginLeft: '18px',\n                marginTop: '2px',\n                fontSize: '13px',\n              }}\n            >\n              {b3Lang('login.loginText.missingCaptcha')}\n            </Typography>\n          ) : (\n            ''\n          )}\n          {isEnabledOnStorefront ? (\n            <Box sx={{ marginTop: '20px' }}>\n              <Captcha siteKey={storefrontSiteKey} size=\"normal\" handleGetKey={setCaptchaKey} />\n            </Box>\n          ) : (\n            ''\n          )}\n          <B3Spin isSpinning={isLoading} size={20} isFlex={false}>\n            <B3ResetPassWordButton>\n              <CustomButton\n                type=\"submit\"\n                size=\"medium\"\n                onClick={handleLoginClick}\n                variant=\"contained\"\n                sx={{ width: 'auto' }}\n              >\n                {b3Lang('forgotPassword.resetPasswordBtn')}\n              </CustomButton>\n            </B3ResetPassWordButton>\n          </B3Spin>\n        </Box>\n      </Box>\n    </B3Card>\n  );\n}\n\nexport default function Page({ setOpenPage }: PageProps) {\n  const { logo } = useContext(GlobalContext).state;\n  const { loginPageDisplay } = useContext(CustomStyleContext).state;\n  const [isEnabledOnStorefront, setIsEnabledOnStorefront] = useState(false);\n  const [storefrontSiteKey, setStorefrontSiteKey] = useState('');\n\n  useEffect(() => {\n    const getIsEnabledOnStorefront = async () => {\n      try {\n        const response = await getStorefrontToken();\n\n        if (response) {\n          setIsEnabledOnStorefront(response.isEnabledOnStorefront);\n          setStorefrontSiteKey(response.siteKey);\n        }\n      } catch (e) {\n        b2bLogger.error(e);\n      }\n    };\n\n    getIsEnabledOnStorefront();\n  }, []);\n\n  return (\n    <ForgotPassword\n      setOpenPage={setOpenPage}\n      logo={loginPageDisplay.displayStoreLogo ? logo : undefined}\n      isEnabledOnStorefront={isEnabledOnStorefront}\n      storefrontSiteKey={storefrontSiteKey}\n    />\n  );\n}\n"],"names":["ForgotPassword","setOpenPage","isEnabledOnStorefront","storefrontSiteKey","logo","isMobile","useMobile","isLoading","setLoading","useState","b3Lang","useB3Lang","forgotPasswordFields","getForgotPasswordFields","isCaptchaMissing","setIsCaptchaMissing","captchaKey","setCaptchaKey","control","handleSubmit","getValues","errors","setValue","useForm","navigate","useNavigate","useEffect","handleLoginClick","email","requestResetPassword","e","b2bLogger","sendForgotPasswordEmailFor","jsx","B3Card","jsxs","Box","LoginImage","ImageListItem","Typography","B3CustomForm","Captcha","B3Spin","B3ResetPassWordButton","CustomButton","Page","useContext","GlobalContext","loginPageDisplay","CustomStyleContext","setIsEnabledOnStorefront","setStorefrontSiteKey","response","getStorefrontToken"],"mappings":"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"}