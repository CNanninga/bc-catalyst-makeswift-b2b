{"version":3,"file":"RegisteredFinish-legacy-D0ZxKc7c.js","sources":["../../src/pages/Registered/PrimaryButton.tsx","../../src/pages/Registered/RegisteredFinish.tsx","../../src/pages/Registered/styled.ts"],"sourcesContent":["import { Button, useTheme } from '@mui/material';\n\ninterface Props {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n}\n\nexport function PrimaryButton({ onClick, children }: Props) {\n  const theme = useTheme();\n\n  return (\n    <Button\n      variant=\"contained\"\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        backgroundColor: theme.palette.primary.main,\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","import { useContext, useRef } from 'react';\nimport { Box } from '@mui/material';\n\nimport { getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { GlobalContext } from '@/shared/global';\nimport { B3SStorage } from '@/utils';\n\nimport { RegisteredContext } from './context/RegisteredContext';\nimport { PrimaryButton } from './PrimaryButton';\nimport { StyleTipContainer } from './styled';\n\ninterface Props {\n  handleFinish: (shouldAutoLogin: boolean) => void;\n  isBCToB2B?: boolean;\n}\n\nexport default function RegisteredFinish({ handleFinish, isBCToB2B = false }: Props) {\n  const { state } = useContext(RegisteredContext);\n  const b3Lang = useB3Lang();\n  const shouldAutoLogin = useRef(false);\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n  const [isMobile] = useMobile();\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const { storeName } = useContext(GlobalContext).state;\n\n  const { accountType, submitSuccess, isAutoApproval } = state;\n\n  const blockPendingAccountOrderCreation = B3SStorage.get('blockPendingAccountOrderCreation');\n  const blockPendingAccountViewPrice = B3SStorage.get('blockPendingAccountViewPrice');\n\n  const renderB2BSuccessPage = () => {\n    // Business Account\n    if (accountType === '1') {\n      if (isAutoApproval) {\n        shouldAutoLogin.current = true;\n        return (\n          <StyleTipContainer>\n            {b3Lang('global.registerFinish.autoApproved.tip', { storeName })}\n          </StyleTipContainer>\n        );\n      }\n\n      // Pending approval, check feature blocks\n      shouldAutoLogin.current = false;\n\n      if (blockPendingAccountViewPrice && !blockPendingAccountOrderCreation) {\n        return (\n          <StyleTipContainer>\n            {b3Lang(\n              'global.statusNotifications.willGainAccessToBusinessFeatProductsAndPricingAfterApproval',\n            )}\n          </StyleTipContainer>\n        );\n      }\n\n      if (blockPendingAccountViewPrice && blockPendingAccountOrderCreation) {\n        return (\n          <StyleTipContainer>\n            {b3Lang(\n              'global.statusNotifications.productsPricingAndOrderingWillBeEnabledAfterApproval',\n            )}\n          </StyleTipContainer>\n        );\n      }\n\n      return (\n        <StyleTipContainer>\n          {b3Lang('global.statusNotifications.willGainAccessToBusinessFeatAfterApproval')}\n        </StyleTipContainer>\n      );\n    }\n\n    // Personal Account\n    if (accountType === '2') {\n      shouldAutoLogin.current = true;\n      return (\n        <StyleTipContainer>\n          {b3Lang('global.registerFinish.bcSuccess.tip', { storeName })}\n        </StyleTipContainer>\n      );\n    }\n\n    // Unknown account type\n    return undefined;\n  };\n\n  const onFinishClick = () => {\n    handleFinish(shouldAutoLogin.current);\n  };\n\n  return (\n    <Box\n      sx={\n        isBCToB2B\n          ? {\n              pl: 2,\n              pr: 2,\n              mt: 2,\n              '& p': {\n                color: customColor,\n              },\n              width: isMobile ? '100%' : '537px',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              background: '#FFFFFF',\n              padding: '0 0.8rem 1rem 0.8rem',\n            }\n          : {\n              mt: 2,\n              '& p': {\n                color: customColor,\n              },\n            }\n      }\n    >\n      {submitSuccess && (\n        <>\n          {renderB2BSuccessPage()}\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              pt: 2,\n            }}\n          >\n            <PrimaryButton onClick={onFinishClick}>{b3Lang('global.button.finish')}</PrimaryButton>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const StyleTipContainer = styled('p')(() => ({\n  margin: '2rem auto',\n}));\n\nexport const InformationLabels = styled('h3')(() => ({\n  margin: '1rem 0',\n  display: 'flex',\n  justifyContent: 'center',\n  fontSize: '34px',\n  fontWeight: '400',\n}));\n\nexport const InformationFourLabels = styled('h4')(() => ({\n  marginBottom: '20px',\n}));\n\nexport const TipContent = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const RegisteredContainer = styled('div')((props: CustomFieldItems) => {\n  const { isMobile = false } = props;\n  const style = isMobile\n    ? {}\n    : {\n        padding: '20px 40px',\n      };\n\n  return style;\n});\n\nexport const RegisteredImage = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100%',\n});\n"],"names":["PrimaryButton","onClick","children","theme","useTheme","jsx","Button","variant","type","sx","backgroundColor","palette","primary","main","handleFinish","isBCToB2B","state","useContext","RegisteredContext","b3Lang","useB3Lang","shouldAutoLogin","useRef","portalStyle","CustomStyleContext","isMobile","useMobile","customColor","getContrastColor","storeName","GlobalContext","accountType","submitSuccess","isAutoApproval","blockPendingAccountOrderCreation","B3SStorage","get","blockPendingAccountViewPrice","Box","pl","pr","mt","color","width","boxShadow","borderRadius","background","padding","jsxs","Fragment","current","StyleTipContainer","display","justifyContent","pt","onFinishClick","styled","margin","exports","fontSize","fontWeight","marginBottom","flexDirection","alignItems","props","height"],"mappings":"mXAOO,SAASA,GAAcC,QAAEA,EAAAC,SAASA,IACvC,MAAMC,EAAQC,IAEd,OACEC,EAAAA,IAACC,EAAA,CACCC,QAAQ,YACRC,KAAK,SACLP,UACAQ,GAAI,CACFC,gBAAiBP,EAAMQ,QAAQC,QAAQC,MAGxCX,YAGP,UCHA,UAAyCY,aAAEA,EAAAC,UAAcA,GAAY,IACnE,MAAMC,MAAEA,GAAUC,EAAAA,WAAWC,GACvBC,EAASC,IACTC,EAAkBC,EAAAA,QAAO,IAG7BN,OACEO,aAAab,gBAAEA,EAAkB,aAEjCO,EAAAA,WAAWO,IACRC,GAAYC,IAEbC,EAAcC,EAAiBlB,IAE/BmB,UAAEA,GAAcZ,aAAWa,GAAed,OAE1Ce,YAAEA,EAAAC,cAAaA,EAAAC,eAAeA,GAAmBjB,EAEjDkB,EAAmCC,EAAWC,IAAI,oCAClDC,EAA+BF,EAAWC,IAAI,gCA8DpD,OACE/B,EAAAA,IAACiC,EAAA,CACC7B,GACEM,EACI,CACEwB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ,MAAO,CACLC,MAAOf,GAETgB,MAAOlB,EAAW,OAAS,QAC3BmB,UACE,wGACFC,aAAc,MACdC,WAAY,UACZC,QAAS,wBAEX,CACEN,GAAI,EACJ,MAAO,CACLC,MAAOf,IAKhBzB,YACC8C,EAAAA,KAAAC,EAAAA,SAAA,CACG/C,SAAA,CAtFa,MAAhB6B,EACEE,GACFZ,EAAgB6B,SAAU,QAEvBC,EAAA,CACEjD,SAAAiB,EAAO,yCAA0C,CAAEU,kBAM1DR,EAAgB6B,SAAU,EAEtBb,IAAiCH,QAEhCiB,EAAA,CACEjD,SAAAiB,EACC,4FAMJkB,GAAgCH,QAE/BiB,EAAA,CACEjD,SAAAiB,EACC,qFAONd,EAAAA,IAAC8C,EAAA,CACEjD,SAAAiB,EAAO,2EAMM,MAAhBY,GACFV,EAAgB6B,SAAU,QAEvBC,EAAA,CACEjD,SAAAiB,EAAO,sCAAuC,CAAEU,sBAJvD,EA8CMxB,EAAAA,IAACiC,EAAA,CACC7B,GAAI,CACF2C,QAAS,OACTC,eAAgB,WAChBC,GAAI,GAGNpD,eAACF,EAAA,CAAcC,QAxCHsD,KACpBzC,EAAaO,EAAgB6B,UAuCmBhD,SAAAiB,EAAO,gCAM3D,IC5IO,MAAMgC,EAAoBK,EAAO,IAAPA,CAAY,KAAA,CAC3CC,OAAQ,eAGGC,EAAA,IAAoBF,EAAO,KAAPA,CAAa,KAAA,CAC5CC,OAAQ,SACRL,QAAS,OACTC,eAAgB,SAChBM,SAAU,OACVC,WAAY,UAGDF,EAAA,IAAwBF,EAAO,KAAPA,CAAa,KAAA,CAChDK,aAAc,WAGHH,EAAA,IAAaF,EAAO,MAAPA,CAAc,CACtCJ,QAAS,OACTU,cAAe,MACfC,WAAY,kBAGqBP,EAAO,MAAPA,CAAeQ,IAChD,MAAMvC,SAAEA,GAAW,GAAUuC,EAO7B,OANcvC,EACV,GACA,CACEsB,QAAS,gBAMJW,EAAA,IAAkBF,EAAO,MAAPA,CAAc,CAC3CJ,QAAS,OACTU,cAAe,SACfT,eAAgB,SAChBU,WAAY,SACZpB,MAAO,OACPsB,OAAQ"}