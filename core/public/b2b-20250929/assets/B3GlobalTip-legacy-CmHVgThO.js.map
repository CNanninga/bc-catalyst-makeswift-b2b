{"version":3,"file":"B3GlobalTip-legacy-CmHVgThO.js","sources":["../../src/components/B3GlobalTip.tsx"],"sourcesContent":["import { useContext, useEffect } from 'react';\nimport { flushSync } from 'react-dom';\n\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { MsgsProps } from '@/shared/dynamicallyVariable/context/config';\n\nimport B3Tip from './B3Tip';\n\nexport default function B3GlobalTip() {\n  const {\n    state: { globalTipMessage },\n    dispatch,\n  } = useContext(DynamicallyVariableContext);\n\n  useEffect(() => {\n    window.globalTipDispatch = dispatch;\n    // disabling cause it is not necessary to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setMsgs = (msgs: [] | Array<MsgsProps> = []) => {\n    dispatch({\n      type: 'common',\n      payload: {\n        globalTipMessage: {\n          ...globalTipMessage,\n          msgs,\n        },\n      },\n    });\n  };\n\n  const handleClose = (id: number | string) => {\n    const msgs = globalTipMessage?.msgs || [];\n    const newMsgs = msgs.filter((msg) => msg.id !== id);\n    setMsgs(newMsgs);\n  };\n\n  const closeMsgs = (id: number | string, reason: string) => {\n    const { msgs = [] } = globalTipMessage;\n\n    if (reason === 'clickaway') return;\n\n    flushSync(() => {\n      if (msgs.length) {\n        const newMsgs = msgs.filter((item: MsgsProps) => item.id !== id);\n        dispatch({\n          type: 'common',\n          payload: {\n            globalTipMessage: {\n              ...globalTipMessage,\n              msgs: newMsgs,\n            },\n          },\n        });\n      }\n    });\n  };\n\n  return (\n    <B3Tip\n      autoHideDuration={globalTipMessage?.autoHideDuration}\n      msgs={globalTipMessage?.msgs}\n      handleAllClose={closeMsgs}\n      handleItemClose={handleClose}\n      vertical=\"top\"\n      horizontal=\"right\"\n    />\n  );\n}\n"],"names":["state","globalTipMessage","dispatch","useContext","DynamicallyVariableContext","useEffect","window","globalTipDispatch","jsx","B3Tip","autoHideDuration","msgs","handleAllClose","closeMsgs","id","reason","flushSync","length","newMsgs","filter","item","type","payload","handleItemClose","setMsgs","msg","vertical","horizontal"],"mappings":"ouBAQA,WACE,MACEA,OAAOC,iBAAEA,GAAiBC,SAC1BA,GACEC,EAAAA,WAAWC,GA+Cf,OA7CAC,EAAAA,UAAU,KACRC,OAAOC,kBAAoBL,GAG1B,IA0CDM,EAAAA,IAACC,EAAA,CACCC,iBAAkBT,GAAkBS,iBACpCC,KAAMV,GAAkBU,KACxBC,eAzBcC,CAACC,EAAqBC,KACtC,MAAMJ,KAAEA,EAAO,IAAOV,EAEP,cAAXc,GAEJC,EAAAA,UAAU,KACR,GAAIL,EAAKM,OAAQ,CACf,MAAMC,EAAUP,EAAKQ,OAAQC,GAAoBA,EAAKN,KAAOA,GAC7DZ,EAAS,CACPmB,KAAM,SACNC,QAAS,CACPrB,iBAAkB,IACbA,EACHU,KAAMO,KAId,KASAK,gBAhCiBT,IAZLU,EAACb,EAA8B,MAC7CT,EAAS,CACPmB,KAAM,SACNC,QAAS,CACPrB,iBAAkB,IACbA,EACHU,YASNa,EAFavB,GAAkBU,MAAQ,IAClBQ,OAAQM,GAAQA,EAAIX,KAAOA,KA+B9CY,SAAS,MACTC,WAAW,SAGjB"}