{"version":3,"file":"B3MasqueradeGlobalTip-legacy-s2Zke2U6.js","sources":["../../src/components/outSideComponents/B3MasqueradeGlobalTip.tsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport {\n  Group as GroupIcon,\n  KeyboardArrowLeft as KeyboardArrowLeftIcon,\n  KeyboardArrowRight as KeyboardArrowRightIcon,\n} from '@mui/icons-material';\nimport { Box, Button, SnackbarOrigin, SxProps } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Cookies from 'js-cookie';\n\nimport {\n  CHECKOUT_URL,\n  END_MASQUERADE_DEFAULT_VALUE,\n  TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n} from '@/constants';\nimport { useGetButtonText } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport useStorageState from '@/hooks/useStorageState';\nimport { useB3Lang } from '@/lib/lang';\nimport { type SetOpenPage } from '@/pages/SetOpenPage';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { superAdminEndMasquerade } from '@/shared/service/b2b';\nimport { deleteCart } from '@/shared/service/bc/graphql/cart';\nimport { clearMasqueradeCompany, setCartNumber, useAppDispatch, useAppSelector } from '@/store';\n\nimport { ConfirmMasqueradeDialog } from '../ConfirmMasqueradeDialog';\n\nimport {\n  getContrastColor,\n  getLocation,\n  getPosition,\n  getStyles,\n  setMUIMediaStyle,\n  splitCustomCssValue,\n} from './utils/b3CustomStyles';\n\ninterface B3MasqueradeGlobalTipProps {\n  isOpen: boolean;\n  setOpenPage: SetOpenPage;\n}\n\nconst bottomHeightPage = ['shoppingList/', 'purchased-products'];\n\nfunction useData() {\n  const customerId = useAppSelector(({ company }) => company.customer.id);\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const {\n    state: { masqueradeButton },\n  } = useContext(CustomStyleContext);\n\n  return {\n    customerId,\n    b2bId,\n    salesRepCompanyId,\n    salesRepCompanyName,\n    isAgenting,\n    masqueradeButton,\n    cartNumber,\n  };\n}\n\nexport default function B3MasqueradeGlobalTip(props: B3MasqueradeGlobalTipProps) {\n  const { isOpen, setOpenPage } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmEndActing, setConfirmEndActing] = useState(false);\n  const dispatch = useAppDispatch();\n  const {\n    customerId,\n    b2bId,\n    salesRepCompanyId,\n    salesRepCompanyName,\n    isAgenting,\n    masqueradeButton,\n    cartNumber,\n  } = useData();\n  const { hash, href } = window.location;\n\n  const b3Lang = useB3Lang();\n\n  const {\n    text = '',\n    color = '',\n    customCss = '',\n    location = 'bottomLeft',\n    horizontalPadding = '',\n    verticalPadding = '',\n  } = masqueradeButton;\n\n  const buttonLabel = useGetButtonText(\n    TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n    text,\n    END_MASQUERADE_DEFAULT_VALUE,\n  );\n\n  const isAddBottom = bottomHeightPage.some((item: string) => hash.includes(item));\n\n  const [isExpansion, setExpansion] = useStorageState<boolean>(\n    'sf-isMasqueradeTipExpansion',\n    true,\n    sessionStorage,\n  );\n  const [isMobile] = useMobile();\n\n  const endActing = async () => {\n    setIsLoading(true);\n    if (typeof b2bId === 'number') {\n      await superAdminEndMasquerade(Number(salesRepCompanyId));\n    }\n\n    const cartEntityId = Cookies.get('cartId');\n    if (cartEntityId) {\n      await deleteCart({ deleteCartInput: { cartEntityId } });\n      Cookies.remove('cartId');\n      dispatch(setCartNumber(0));\n    }\n\n    setIsLoading(false);\n    dispatch(clearMasqueradeCompany());\n    setOpenPage({\n      isOpen: true,\n      openUrl: '/dashboard',\n    });\n  };\n\n  const onEndActing = async () => {\n    if (cartNumber > 0) {\n      setConfirmEndActing(true);\n    } else {\n      await endActing();\n    }\n  };\n\n  if (href.includes(CHECKOUT_URL) || !customerId) return null;\n\n  if (!isAgenting) return null;\n\n  const defaultLocation: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n  };\n\n  let sx: SxProps = {};\n\n  if (isMobile && isOpen) {\n    sx = {\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      borderRadius: '0px',\n    };\n  } else if (!isMobile && isAddBottom) {\n    sx = {\n      bottom: '90px !important',\n    };\n  }\n\n  const cssInfo = splitCustomCssValue(customCss);\n  const {\n    cssValue,\n    mediaBlocks,\n  }: {\n    cssValue: string;\n    mediaBlocks: string[];\n  } = cssInfo;\n  const MUIMediaStyle = setMUIMediaStyle(mediaBlocks);\n\n  const customStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n    padding: '0',\n    ...getStyles(cssValue),\n  };\n\n  const isMobileCustomStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n  };\n\n  const customBuyerPortalPagesStyles: SxProps = {\n    bottom: '24px',\n    left: '24px',\n    right: 'auto',\n    top: 'unset',\n  };\n\n  return (\n    <>\n      {!isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '99999999993',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Button\n            sx={{\n              height: '42px',\n              marginTop: '10px',\n              ...customStyles,\n              ...MUIMediaStyle,\n            }}\n            onClick={onEndActing}\n            variant=\"contained\"\n            startIcon={<GroupIcon />}\n          >\n            {salesRepCompanyName}\n          </Button>\n        </Snackbar>\n      )}\n\n      {!isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            fontSize: '16px',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n            ...sx,\n            ...customStyles,\n            ...MUIMediaStyle,\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            {!isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 400,\n                    }}\n                  >\n                    {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 500,\n                      fontSize: '13px',\n                      cursor: 'pointer',\n                    }}\n                    onClick={onEndActing}\n                  >\n                    {buttonLabel}\n                  </Box>\n                )}\n\n                {isExpansion ? (\n                  <KeyboardArrowLeftIcon\n                    onClick={() => setExpansion(false)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                ) : (\n                  <KeyboardArrowRightIcon\n                    onClick={() => setExpansion(true)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                )}\n              </Box>\n            )}\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...customStyles,\n            ...customBuyerPortalPagesStyles,\n            ...sx,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n              }}\n            >\n              <GroupIcon\n                sx={{\n                  mr: '12px',\n                }}\n              />\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 400,\n                  }}\n                >\n                  {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                </Box>\n              )}\n              <Box\n                sx={{\n                  fontWeight: '600',\n                  m: '0 15px 0 10px',\n                }}\n              >\n                {salesRepCompanyName}\n              </Box>\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 500,\n                    fontSize: '13px',\n                    cursor: 'pointer',\n                  }}\n                  onClick={onEndActing}\n                >\n                  {buttonLabel}\n                </Box>\n              )}\n\n              {isExpansion ? (\n                <KeyboardArrowLeftIcon\n                  onClick={() => setExpansion(false)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              ) : (\n                <KeyboardArrowRightIcon\n                  onClick={() => setExpansion(true)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              )}\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...sx,\n            ...isMobileCustomStyles,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n                width: '100%',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n              </Box>\n\n              <Box\n                sx={{\n                  fontWeight: 500,\n                  fontSize: '13px',\n                  cursor: 'pointer',\n                }}\n                onClick={onEndActing}\n              >\n                {buttonLabel}\n              </Box>\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n      <ConfirmMasqueradeDialog\n        title={b3Lang('dashboard.masqueradeModal.title.end')}\n        isOpen={confirmEndActing}\n        isRequestLoading={isLoading}\n        handleClose={() => setConfirmEndActing(false)}\n        handleConfirm={async () => {\n          await endActing();\n          setConfirmEndActing(false);\n        }}\n      />\n    </>\n  );\n}\n"],"names":["props","isOpen","setOpenPage","isLoading","setIsLoading","useState","confirmEndActing","setConfirmEndActing","dispatch","useAppDispatch","customerId","b2bId","salesRepCompanyId","salesRepCompanyName","isAgenting","masqueradeButton","cartNumber","useAppSelector","company","customer","id","b2bFeatures","masqueradeCompany","global","companyName","state","useContext","CustomStyleContext","useData","hash","href","window","location","b3Lang","useB3Lang","text","color","customCss","horizontalPadding","verticalPadding","buttonLabel","useGetButtonText","TRANSLATION_MASQUERADE_BUTTON_VARIABLE","END_MASQUERADE_DEFAULT_VALUE","isAddBottom","bottomHeightPage","some","item","includes","isExpansion","setExpansion","useStorageState","sessionStorage","isMobile","useMobile","endActing","async","superAdminEndMasquerade","Number","cartEntityId","Cookies","get","deleteCart","deleteCartInput","remove","setCartNumber","clearMasqueradeCompany","openUrl","onEndActing","CHECKOUT_URL","defaultLocation","vertical","horizontal","sx","width","bottom","left","borderRadius","cssInfo","splitCustomCssValue","cssValue","mediaBlocks","MUIMediaStyle","setMUIMediaStyle","customStyles","backgroundColor","getContrastColor","padding","getStyles","isMobileCustomStyles","jsxs","Fragment","children","jsx","Snackbar","zIndex","getPosition","anchorOrigin","getLocation","open","Button","height","marginTop","onClick","variant","startIcon","GroupIcon","fontSize","Box","display","alignItems","mr","fontWeight","m","cursor","KeyboardArrowLeftIcon","ml","KeyboardArrowRightIcon","right","top","justifyContent","ConfirmMasqueradeDialog","title","isRequestLoading","handleClose","handleConfirm"],"mappings":"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"}