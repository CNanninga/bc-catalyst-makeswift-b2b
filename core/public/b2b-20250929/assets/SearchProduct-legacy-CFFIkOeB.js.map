{"version":3,"file":"SearchProduct-legacy-CFFIkOeB.js","sources":["../../src/pages/ShoppingListDetails/components/QuickAdd.tsx","../../src/pages/ShoppingListDetails/components/SearchProduct.tsx","../../src/pages/ShoppingListDetails/components/ChooseOptionsDialog.tsx","../../src/pages/ShoppingListDetails/components/ProductListDialog.tsx"],"sourcesContent":["import { KeyboardEventHandler, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getVariantInfoBySkus } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { compareOption } from '@/utils/b3Product/b3Product';\nimport { getAllModifierDefaultValue, getQuickAddRowFields } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\n\ninterface AddToListContentProps {\n  updateList: () => void;\n  quickAddToList: (products: CustomFieldItems[]) => Promise<void>;\n  level?: number;\n  buttonText?: string;\n  buttonLoading?: boolean;\n  type?: string;\n}\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const {\n    updateList,\n    quickAddToList,\n    level = 3,\n    buttonText = b3Lang('shoppingList.quickAdd.addToShoppingList'),\n    buttonLoading = false,\n    type,\n  } = props;\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const draftQuoteList = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const [rows, setRows] = useState(level);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n    // disabling since b3Lang since it has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const handleAddRowsClick = () => {\n    setRows(rows + level);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = useCallback(\n    (variantInfoList: CustomFieldItems, skuValue: SimpleObject, skus: string[]) => {\n      const notFoundSku: string[] = [];\n      const notPurchaseSku: string[] = [];\n      const productItems: CustomFieldItems[] = [];\n      const passSku: string[] = [];\n      const notAddAble: string[] = [];\n      const numberLimit: string[] = [];\n\n      skus.forEach((sku) => {\n        const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n          (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n        );\n\n        if (!variantInfo) {\n          notFoundSku.push(sku);\n          return;\n        }\n\n        const {\n          productId,\n          variantId,\n          option: options,\n          purchasingDisabled = '1',\n          modifiers,\n          variantSku,\n        } = variantInfo;\n        const defaultModifiers = getAllModifierDefaultValue(modifiers);\n\n        const quantity = (skuValue[sku] as number) || 0;\n\n        if (purchasingDisabled === '1' && type !== 'shoppingList') {\n          notPurchaseSku.push(sku);\n          return;\n        }\n\n        const notPassedModifier = defaultModifiers.filter(\n          (modifier: CustomFieldItems) => !modifier.isVerified,\n        );\n        if (notPassedModifier.length > 0) {\n          notAddAble.push(sku);\n\n          return;\n        }\n\n        if (Number(quantity) < 1 || Number(quantity) > 1000000) {\n          numberLimit.push(sku);\n          return;\n        }\n\n        const optionList = (options || []).reduce(\n          (arr: ShoppingListAddProductOption[], optionStr: string) => {\n            try {\n              const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n              arr.push({\n                optionId: `attribute[${option.option_id}]`,\n                optionValue: `${option.id}`,\n              });\n              return arr;\n            } catch (error) {\n              return arr;\n            }\n          },\n          [],\n        );\n\n        defaultModifiers.forEach((modifier: CustomFieldItems) => {\n          const { type } = modifier;\n\n          if (type === 'date') {\n            const { defaultValue } = modifier;\n            Object.keys(defaultValue).forEach((key) => {\n              optionList.push({\n                optionId: `attribute[${modifier.option_id}][${key}]`,\n                optionValue: `${modifier.defaultValue[key]}`,\n              });\n            });\n          } else {\n            optionList.push({\n              optionId: `attribute[${modifier.option_id}]`,\n              optionValue: `${modifier.defaultValue}`,\n            });\n          }\n        });\n\n        passSku.push(sku);\n\n        const quoteDraftItem = draftQuoteList.find((item) => item.node.variantSku === variantSku);\n        if (quoteDraftItem) {\n          const oldOptionList = JSON.parse(quoteDraftItem.node.optionList);\n          let { quantity: quoteDraftItemQuantity } = quoteDraftItem.node;\n\n          const isAdd =\n            oldOptionList.length > optionList.length\n              ? compareOption(oldOptionList, optionList)\n              : compareOption(optionList, oldOptionList);\n\n          if (isAdd) {\n            quoteDraftItemQuantity += quantity;\n          }\n          if (quoteDraftItemQuantity > 1000000) {\n            numberLimit.push(sku);\n            return;\n          }\n        }\n\n        productItems.push({\n          ...variantInfo,\n          newSelectOptionList: optionList,\n          productId: parseInt(productId, 10) || 0,\n          quantity,\n          variantId: parseInt(variantId, 10) || 0,\n        });\n      });\n\n      return {\n        notFoundSku,\n        notPurchaseSku,\n        productItems,\n        passSku,\n        notAddAble,\n        numberLimit,\n      };\n    },\n    [draftQuoteList, type],\n  );\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySkus(skus);\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n        const { notFoundSku, notPurchaseSku, productItems, notAddAble, passSku, numberLimit } =\n          getProductItems(variantInfoList, skuValue, skus);\n\n        if (notFoundSku.length > 0) {\n          showErrors(value, notFoundSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotFound', {\n              notFoundSku: notFoundSku.join(', '),\n            }),\n          );\n        }\n\n        if (notPurchaseSku.length > 0) {\n          showErrors(value, notPurchaseSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotPurchasable', {\n              notPurchaseSku: notPurchaseSku.join(', '),\n            }),\n          );\n        }\n\n        if (notAddAble.length > 0) {\n          showErrors(value, notAddAble, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotAddable', {\n              notAddAble: notAddAble.join(', '),\n            }),\n          );\n        }\n\n        if (numberLimit.length > 0) {\n          numberLimit.forEach((sku) => {\n            showErrors(value, [sku], 'qty', '');\n          });\n\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuLimitQuantity', {\n              numberLimit: numberLimit.join(', '),\n            }),\n          );\n        }\n\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n\n          updateList();\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('shoppingList.quickAdd.quickAdd')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n                fontWeight: '400',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('shoppingList.quickAdd.showMoreRows')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={buttonLoading ? isLoading : false} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { calculateProductListPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListProductItem } from '../../../types';\n\nimport ChooseOptionsDialog from './ChooseOptionsDialog';\nimport ProductListDialog from './ProductListDialog';\n\ninterface SearchProductProps {\n  updateList?: () => void;\n  addToList: (products: CustomFieldItems[]) => Promise<void>;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  type?: string;\n}\n\nexport default function SearchProduct({\n  updateList = () => {},\n  addToList,\n  searchDialogTitle,\n  addButtonText,\n  type,\n}: SearchProductProps) {\n  const b3Lang = useB3Lang();\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const companyId = companyInfoId || salesRepCompanyId;\n  const [isLoading, setIsLoading] = useState(false);\n  const [productListOpen, setProductListOpen] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [productList, setProductList] = useState<ShoppingListProductItem[]>([]);\n  const [chooseOptionsOpen, setChooseOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<ShoppingListProductItem>();\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleSearchTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const searchProduct = async () => {\n    if (!searchText || isLoading) {\n      return;\n    }\n\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('global.searchProductAddProduct.businessAccountPendingApproval'));\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { productsSearch } = await searchProducts({\n        search: searchText,\n        companyId,\n        customerGroupId,\n        categoryFilter: true,\n      });\n\n      const product = conversionProductsList(productsSearch);\n\n      setProductList(product);\n      setProductListOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchTextKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchProduct();\n    }\n  };\n\n  const handleSearchButtonClicked = () => {\n    searchProduct();\n  };\n\n  const clearProductInfo = () => {\n    setProductList([]);\n  };\n\n  const handleProductListDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(false);\n\n    if (isAdded) {\n      setIsAdded(false);\n      updateList();\n    }\n\n    clearProductInfo();\n  };\n\n  const handleProductQuantityChange = (id: number, newQuantity: number) => {\n    const product = productList.find((product) => product.id === id);\n    if (product) {\n      product.quantity = newQuantity;\n    }\n\n    setProductList([...productList]);\n  };\n\n  const handleAddToListClick = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await addToList(products);\n\n      updateList();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleProductListAddToList = async (products: CustomFieldItems[]) => {\n    await handleAddToListClick(products);\n  };\n\n  const handleChangeOptionsClick = (productId: number) => {\n    const product = productList.find((product) => product.id === productId);\n    if (product) {\n      setOptionsProduct({\n        ...product,\n      });\n    }\n    setProductListOpen(false);\n    setChooseOptionsOpen(true);\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(true);\n  };\n\n  const handleChooseOptionsDialogConfirm = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await handleAddToListClick(products);\n      setChooseOptionsOpen(false);\n      setProductListOpen(true);\n    } catch (error) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: '24px 0',\n      }}\n    >\n      <Typography>{b3Lang('global.searchProductAddProduct.searchBySkuOrName')}</Typography>\n      <TextField\n        hiddenLabel\n        placeholder={b3Lang(`global.searchProduct.placeholder.${type}`)}\n        variant=\"filled\"\n        fullWidth\n        size=\"small\"\n        value={searchText}\n        onChange={handleSearchTextChange}\n        onKeyDown={handleSearchTextKeyDown}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          margin: '12px 0',\n          '& input': {\n            padding: '12px 12px 12px 0',\n          },\n        }}\n      />\n      <CustomButton\n        variant=\"outlined\"\n        fullWidth\n        disabled={isLoading}\n        onClick={handleSearchButtonClicked}\n      >\n        <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n          <Box\n            sx={{\n              flex: 1,\n              textAlign: 'center',\n            }}\n          >\n            {b3Lang('global.searchProductAddProduct.searchProduct')}\n          </Box>\n        </B3Spin>\n      </CustomButton>\n\n      <ProductListDialog\n        isOpen={productListOpen}\n        isLoading={isLoading}\n        productList={productList}\n        searchText={searchText}\n        type={type}\n        onSearchTextChange={handleSearchTextChange}\n        onSearch={handleSearchButtonClicked}\n        onCancel={handleProductListDialogCancel}\n        onProductQuantityChange={handleProductQuantityChange}\n        onChooseOptionsClick={handleChangeOptionsClick}\n        onAddToListClick={handleProductListAddToList}\n        searchDialogTitle={searchDialogTitle}\n        addButtonText={addButtonText}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isLoading}\n        type={type}\n        setIsLoading={setIsLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={handleChooseOptionsDialogConfirm}\n        addButtonText={addButtonText}\n      />\n    </Box>\n  );\n}\n","import {\n  ChangeEvent,\n  Dispatch,\n  KeyboardEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport styled from '@emotion/styled';\nimport { Box, Divider, TextField, Typography } from '@mui/material';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useB3Lang } from '@/lib/lang';\nimport { searchProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { currencyFormat, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  calculateProductListPrice,\n  getBCPrice,\n  getProductInfoDisplayPrice,\n  getVariantInfoDisplayPrice,\n} from '@/utils/b3Product/b3Product';\n\nimport { AllOptionProps, ShoppingListProductItem, SimpleObject, Variant } from '../../../types';\nimport {\n  Base64,\n  getOptionRequestData,\n  getProductOptionsFields,\n} from '../../../utils/b3Product/shared/config';\n\nconst Flex = styled('div')({\n  display: 'flex',\n  wordBreak: 'break-word',\n  gap: '8px',\n  flexWrap: 'wrap',\n  padding: '12px 0 12px',\n  '&:first-of-type': {\n    marginTop: '12px',\n  },\n});\n\ninterface FlexItemProps {\n  padding?: string;\n}\n\nconst FlexItem = styled('div')(({ padding }: FlexItemProps) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexShrink: 1,\n  alignItems: 'flex-start',\n  width: '100%',\n  padding: padding || '0 0 0 16px',\n}));\n\nconst ProductImage = styled('img')(() => ({\n  width: '60px',\n  height: '60px',\n  borderRadius: '4px',\n  marginTop: '12px',\n  flexShrink: 0,\n}));\n\nconst ProductOptionText = styled('div')(() => ({\n  fontSize: '0.75rem',\n  lineHeight: '1.5',\n  color: '#455A64',\n}));\n\nconst StyleTextField = styled(TextField)(() => ({\n  '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n    marginTop: '-8px',\n    marginBottom: '8px',\n  },\n}));\n\ninterface ChooseOptionsDialogProps {\n  isOpen: boolean;\n  product?: ShoppingListProductItem;\n  onCancel: () => void;\n  onConfirm: (products: CustomFieldItems[]) => void;\n  isEdit?: boolean;\n  isLoading: boolean;\n  setIsLoading: Dispatch<SetStateAction<boolean>>;\n  addButtonText?: string;\n  type?: string;\n}\n\ninterface ChooseOptionsProductProps extends ShoppingListProductItem {\n  newSelectOptionList: {\n    optionId: string;\n    optionValue: any;\n  }[];\n  productId: number;\n  quantity: number;\n  variantId: number;\n  additionalProducts: CustomFieldItems;\n}\n\nexport default function ChooseOptionsDialog(props: ChooseOptionsDialogProps) {\n  const {\n    isOpen,\n    onCancel,\n    onConfirm,\n    product,\n    isEdit = false,\n    isLoading,\n    setIsLoading,\n    type,\n    ...restProps\n  } = props;\n\n  const b3Lang = useB3Lang();\n  const { addButtonText = b3Lang('shoppingList.chooseOptionsDialog.addToList') } = restProps;\n\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const [quantity, setQuantity] = useState<number | string>(1);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [variantInfo, setVariantInfo] = useState<Partial<Variant> | null>(null);\n  const [variantSku, setVariantSku] = useState('');\n  const [currentImage, setCurrentImage] = useState<string>(product?.imageUrl || '');\n  const [isShowPrice, setShowPrice] = useState<boolean>(true);\n  const [additionalProducts, setAdditionalProducts] = useState<CustomFieldItems>({});\n  const [productPriceChangeOptions, setProductPriceChangeOptions] = useState<\n    Partial<AllOptionProps>[]\n  >([]);\n  const [newPrice, setNewPrice] = useState<number>(0);\n  const [chooseOptionsProduct, setChooseOptionsProduct] = useState<ChooseOptionsProductProps[]>([]);\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === 'quote' && product) {\n      if (variantSku) {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getVariantInfoDisplayPrice(newProduct.base_price, newProduct, {\n          sku: variantSku,\n        });\n        setShowPrice(isPrice);\n      } else {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getProductInfoDisplayPrice(newProduct.base_price, newProduct);\n        if (!isPrice) {\n          setShowPrice(false);\n        }\n      }\n    } else if ((type === 'shoppingList' || type === 'quickOrder') && product) {\n      setShowPrice(!product?.isPriceHidden);\n    }\n  }, [variantSku, quantity, product, type]);\n\n  const setChooseOptionsForm = async (product: ShoppingListProductItem) => {\n    try {\n      setIsLoading(true);\n\n      const modifiers =\n        product?.modifiers?.filter(\n          (modifier) =>\n            modifier.type === 'product_list_with_images' || modifier.type === 'product_list',\n        ) || [];\n      const productImages: SimpleObject = {};\n      const additionalProductsParams: CustomFieldItems = {};\n      if (modifiers.length > 0) {\n        const productIds = modifiers.reduce((arr: number[], modifier) => {\n          const { option_values: optionValues } = modifier;\n          optionValues.forEach((option) => {\n            if (option?.value_data?.product_id) {\n              arr.push(option.value_data.product_id);\n            }\n          });\n          return arr;\n        }, []);\n\n        if (productIds.length > 0) {\n          const companyId = companyInfoId || salesRepCompanyId;\n          const { productsSearch } = await searchProducts({\n            productIds,\n            companyId,\n            customerGroupId,\n          });\n\n          productsSearch.forEach((product: CustomFieldItems) => {\n            productImages[product.id] = product.imageUrl;\n            additionalProductsParams[product.id] = product;\n          });\n        }\n      }\n\n      setAdditionalProducts(additionalProductsParams);\n\n      setQuantity(product.quantity);\n      if (product.variants?.length === 1 && product.variants[0]) {\n        setVariantInfo(product.variants[0]);\n      }\n\n      const productOptionsFields = getProductOptionsFields(product, productImages);\n      setFormFields([...productOptionsFields]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getProductPriceOptions = (product: ShoppingListProductItem) => {\n    const newProductPriceChangeOptionLists: Partial<AllOptionProps>[] = [];\n    product.allOptions?.forEach((item) => {\n      if (\n        item.type === 'product_list_with_images' ||\n        item.type === 'product_list' ||\n        item.type === 'checkbox' ||\n        item.type === 'rectangles' ||\n        item.type === 'swatch' ||\n        item.type === 'radio_buttons' ||\n        item.type === 'dropdown'\n      ) {\n        newProductPriceChangeOptionLists.push(item);\n      }\n    });\n\n    setProductPriceChangeOptions(newProductPriceChangeOptionLists);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setChooseOptionsForm(product);\n      setChooseOptionsProduct([]);\n      setNewPrice(0);\n      if (product?.allOptions?.length) {\n        getProductPriceOptions(product);\n      }\n    } else {\n      setQuantity(1);\n      setFormFields([]);\n    }\n    // disabling as we don't need dispatchers here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [product]);\n\n  const getProductPrice = (product: ShoppingListProductItem) => {\n    const { variants = [] } = product;\n\n    let priceNumber = 0;\n    if (variantSku) {\n      const variantCalculatePrice = variants.find(\n        (variant) => variant.sku === variantSku,\n      )?.bc_calculated_price;\n      priceNumber =\n        (showInclusiveTaxPrice\n          ? variantCalculatePrice?.tax_inclusive\n          : variantCalculatePrice?.tax_exclusive) || 0;\n    } else {\n      const variantCalculatePrice = variants[0]?.bc_calculated_price;\n      priceNumber =\n        parseFloat(\n          (showInclusiveTaxPrice\n            ? variantCalculatePrice?.tax_inclusive\n            : variantCalculatePrice?.tax_exclusive\n          )?.toString(),\n        ) || 0;\n    }\n\n    return priceNumber;\n  };\n\n  const handleProductQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value || parseInt(e.target.value, 10) > 0) {\n      setQuantity(e.target.value);\n    }\n  };\n\n  const handleNumberInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (['KeyE', 'Equal', 'Minus'].indexOf(event.code) > -1) {\n      event.preventDefault();\n    }\n  };\n\n  const handleNumberInputBlur = () => {\n    if (!quantity) {\n      setQuantity(1);\n    }\n\n    if (Number(quantity) > 1000000) {\n      setQuantity(1000000);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const formValues = watch();\n  const cache = useRef(formValues);\n\n  const getProductVariantId = useCallback(\n    async (value: CustomFieldItems, changeName = '') => {\n      const isVariantOptionChange =\n        formFields.find((item: CustomFieldItems) => item.name === changeName)?.isVariantOption ||\n        false;\n\n      if (!isVariantOptionChange || !product || !changeName) {\n        return;\n      }\n\n      const { variants = [] } = product || {};\n\n      const variantInfo =\n        variants.find((variant) => {\n          const { option_values: optionValues = [] } = variant;\n\n          const isSelectVariant = optionValues.reduce((isSelect, option) => {\n            if (\n              value[Base64.encode(`attribute[${option.option_id}]`)].toString() !==\n              (option.id || '').toString()\n            ) {\n              return false;\n            }\n            return isSelect;\n          }, true);\n\n          return isSelectVariant;\n        }) || null;\n\n      setVariantSku(variantInfo ? variantInfo.sku : '');\n      setVariantInfo(variantInfo);\n\n      if (variantInfo && (variantInfo.sku || variantInfo.variant_id)) {\n        const currentVariant = variants.find(\n          (variant) =>\n            variant.sku === variantInfo.sku || variant.variant_id === variantInfo.variant_id,\n        );\n\n        setCurrentImage(currentVariant?.image_url || product.imageUrl || '');\n      }\n    },\n    [formFields, product],\n  );\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      getProductVariantId(value, name);\n    });\n\n    if (formFields[0]) {\n      const defaultValues: SimpleObject = formFields.reduce((value: SimpleObject, fields) => {\n        const formFieldValue = value;\n        formFieldValue[fields.name] = fields.default;\n        setValue(fields.name, fields.default);\n        return value;\n      }, {});\n      getProductVariantId(defaultValues, formFields[0].name);\n    }\n\n    return () => subscription.unsubscribe();\n    // disabling as we don't need dispatchers or subscribers in the dep array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formFields, getProductVariantId]);\n\n  const validateQuantityNumber = useCallback(() => {\n    const { purchasing_disabled: purchasingDisabled = true } = variantInfo || {};\n\n    if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n      snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n      return false;\n    }\n\n    return true;\n    // disabling as b3Lang will render errors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableProduct, type, variantInfo]);\n\n  const getOptionList = useCallback(\n    (value: FieldValues) => {\n      const optionsData = getOptionRequestData(formFields, {}, value);\n      return Object.keys(optionsData).map((optionId) => ({\n        optionId,\n        optionValue: optionsData[optionId]?.toString(),\n      }));\n    },\n    [formFields],\n  );\n\n  useEffect(() => {\n    if (cache?.current && isEqual(cache?.current, formValues)) {\n      return;\n    }\n\n    cache.current = formValues;\n    if (Object.keys(formValues).length && formFields.length && productPriceChangeOptions.length) {\n      const optionList = getOptionList(formValues);\n      const { variant_id: variantId = '' } = variantInfo || {};\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      const newChooseOptionsProduct = [\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ];\n\n      if (chooseOptionsProduct[0]) {\n        let optionChangeFlag = false;\n        const { newSelectOptionList } = chooseOptionsProduct[0];\n        newSelectOptionList.forEach((option) => {\n          const findAttributeId = productPriceChangeOptions.findIndex((item) =>\n            option.optionId.includes(String(item.id)),\n          );\n          optionList.forEach((newOption) => {\n            if (\n              option.optionId === newOption.optionId &&\n              option.optionValue !== newOption.optionValue &&\n              findAttributeId !== -1\n            ) {\n              optionChangeFlag = true;\n            }\n          });\n        });\n        if (optionChangeFlag) {\n          setChooseOptionsProduct(newChooseOptionsProduct);\n        }\n      } else {\n        setChooseOptionsProduct(newChooseOptionsProduct);\n      }\n    }\n  }, [\n    additionalProducts,\n    chooseOptionsProduct,\n    formFields.length,\n    formValues,\n    getOptionList,\n    product,\n    productPriceChangeOptions,\n    quantity,\n    validateQuantityNumber,\n    variantInfo,\n  ]);\n\n  useEffect(() => {\n    const getNewProductPrice = async () => {\n      try {\n        if (chooseOptionsProduct.length) {\n          setIsRequestLoading(true);\n          const products = await calculateProductListPrice(chooseOptionsProduct);\n\n          if (products[0]) {\n            const { basePrice, taxPrice } = products[0];\n            const price = getBCPrice(Number(basePrice), Number(taxPrice));\n            setNewPrice(price);\n          }\n        }\n      } catch (err) {\n        b2bLogger.error(err);\n      } finally {\n        setIsRequestLoading(false);\n      }\n    };\n\n    getNewProductPrice();\n  }, [chooseOptionsProduct]);\n\n  const handleConfirmClicked = () => {\n    handleSubmit((value) => {\n      const optionList = getOptionList(value);\n\n      const { variant_id: variantId = '' } = variantInfo || {};\n\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      onConfirm([\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ]);\n    })();\n  };\n\n  const handleCancelClicked = () => {\n    setQuantity(1);\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n    // disabling as reset does not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <B3Dialog\n      isOpen={isOpen}\n      rightSizeBtn={isEdit ? b3Lang('shoppingList.chooseOptionsDialog.saveOption') : addButtonText}\n      handleLeftClick={handleCancelClicked}\n      handRightClick={handleConfirmClicked}\n      title={b3Lang('shoppingList.chooseOptionsDialog.chooseOptions')}\n      loading={isLoading || isRequestLoading}\n    >\n      <B3Spin isSpinning={isLoading}>\n        {product && (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <ProductImage src={currentImage || product.imageUrl || PRODUCT_DEFAULT_IMAGE} />\n                <Flex>\n                  <FlexItem padding=\"0\">\n                    <Box\n                      sx={{\n                        marginLeft: '16px',\n                      }}\n                    >\n                      <Typography variant=\"body1\" color=\"#212121\">\n                        {product.name}\n                      </Typography>\n                      <Typography variant=\"body1\" color=\"#616161\">\n                        {variantSku || product.sku}\n                      </Typography>\n                      {(product.product_options || []).map((option) => (\n                        <ProductOptionText\n                          key={`${option.option_id}`}\n                        >{`${option.display_name}: ${option.display_value}`}</ProductOptionText>\n                      ))}\n                    </Box>\n                  </FlexItem>\n\n                  <FlexItem>\n                    <span>{b3Lang('shoppingList.chooseOptionsDialog.price')}</span>\n                    {!isShowPrice\n                      ? ''\n                      : currencyFormat(newPrice * Number(quantity) || getProductPrice(product))}\n                  </FlexItem>\n\n                  <FlexItem>\n                    <StyleTextField\n                      type=\"number\"\n                      variant=\"filled\"\n                      label={b3Lang('shoppingList.chooseOptionsDialog.quantity')}\n                      value={quantity}\n                      onChange={handleProductQuantityChange}\n                      onKeyDown={handleNumberInputKeyDown}\n                      onBlur={handleNumberInputBlur}\n                      size=\"small\"\n                      sx={{\n                        width: '60%',\n                        maxWidth: '100px',\n                      }}\n                    />\n                  </FlexItem>\n                </Flex>\n              </Box>\n\n              <Divider\n                sx={{\n                  margin: '16px 0 24px',\n                }}\n              />\n\n              <B3CustomForm\n                formFields={formFields}\n                errors={errors}\n                control={control}\n                getValues={getValues}\n                setValue={setValue}\n              />\n            </Box>\n          </Box>\n        )}\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useCallback, useContext } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport { B3ProductList } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\n\nimport { ShoppingListProductItem } from '../../../types';\nimport { ShoppingListDetailsContext } from '../context/ShoppingListDetailsContext';\n\ninterface ProductTableActionProps {\n  product: ShoppingListProductItem;\n  onAddToListClick: (id: number) => void;\n  onChooseOptionsClick: (id: number) => void;\n  addButtonText: string;\n}\n\nfunction ProductTableAction(props: ProductTableActionProps) {\n  const {\n    product: { id, allOptions: productOptions },\n    onAddToListClick,\n    onChooseOptionsClick,\n    addButtonText,\n  } = props;\n\n  const {\n    state: { isLoading = false },\n  } = useContext(ShoppingListDetailsContext);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  return productOptions && productOptions.length > 0 ? (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onChooseOptionsClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {b3Lang('global.searchProduct.chooseOptionsButton')}\n    </CustomButton>\n  ) : (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onAddToListClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {addButtonText}\n    </CustomButton>\n  );\n}\n\ninterface ProductListDialogProps {\n  isOpen: boolean;\n  searchText: string;\n  productList: ShoppingListProductItem[];\n  onCancel: () => void;\n  onSearchTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n  onProductQuantityChange: (id: number, newQuantity: number) => void;\n  onAddToListClick: (products: CustomFieldItems[]) => void;\n  onChooseOptionsClick: (id: number) => void;\n  isLoading: boolean;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  type?: string;\n}\n\nconst ProductTable = B3ProductList<ShoppingListProductItem>;\n\nexport default function ProductListDialog(props: ProductListDialogProps) {\n  const b3Lang = useB3Lang();\n  const {\n    isOpen,\n    onCancel,\n    searchText,\n    productList,\n    onSearchTextChange,\n    onSearch,\n    onProductQuantityChange,\n    onAddToListClick,\n    onChooseOptionsClick,\n    isLoading,\n    type,\n    searchDialogTitle = b3Lang('shoppingLists.title'),\n    addButtonText = b3Lang('shoppingLists.addButtonText'),\n  } = props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const [isMobile] = useMobile();\n\n  const handleCancelClicked = () => {\n    onCancel();\n  };\n\n  const handleSearchKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  const validateQuantityNumber = useCallback(\n    (product: ShoppingListProductItem) => {\n      const { variants = [] } = product || {};\n      const { purchasing_disabled: purchasingDisabled = true } = variants[0] || {};\n\n      if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n        snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n        return false;\n      }\n\n      return true;\n    },\n    // ignore b3Lang it's not reactive\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isEnableProduct, type],\n  );\n\n  const handleAddToList = (id: number) => {\n    const product = productList.find((product) => product.id === id);\n\n    if (product && validateQuantityNumber(product || {})) {\n      let variantId: number | string = product.variantId || 0;\n\n      if (!product.variantId && product.variants?.[0]) {\n        variantId = product.variants[0].variant_id;\n      }\n\n      onAddToListClick([\n        {\n          ...product,\n          newSelectOptionList: [],\n          quantity: parseInt(product.quantity.toString(), 10) || 1,\n          variantId,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={searchDialogTitle}\n      showRightBtn={false}\n      loading={isLoading}\n      maxWidth=\"md\"\n      leftSizeBtn={b3Lang('shoppingLists.close')}\n    >\n      <B3Spin isSpinning={isLoading}>\n        <Box\n          sx={{\n            minWidth: isMobile ? 'initial' : '100%',\n            flex: 1,\n          }}\n        >\n          <TextField\n            hiddenLabel\n            variant=\"filled\"\n            fullWidth\n            size=\"small\"\n            value={searchText}\n            onChange={onSearchTextChange}\n            onKeyDown={handleSearchKeyDown}\n            error={!productList || productList.length <= 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              margin: '12px 0',\n              '& input': {\n                padding: '12px 12px 12px 0',\n              },\n            }}\n          />\n\n          {productList && productList.length > 0 ? (\n            <ProductTable\n              products={productList}\n              quantityEditable\n              type={type}\n              textAlign={isMobile ? 'left' : 'right'}\n              canToProduct\n              onProductQuantityChange={onProductQuantityChange}\n              renderAction={(product) => (\n                <ProductTableAction\n                  product={product}\n                  onAddToListClick={handleAddToList}\n                  onChooseOptionsClick={onChooseOptionsClick}\n                  addButtonText={addButtonText}\n                />\n              )}\n              actionWidth=\"180px\"\n            />\n          ) : (\n            <Typography>No products found</Typography>\n          )}\n        </Box>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n"],"names":["props","b3Lang","useB3Lang","updateList","quickAddToList","level","buttonText","buttonLoading","type","companyStatus","useAppSelector","company","companyInfo","status","draftQuoteList","quoteInfo","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","rows","setRows","useState","formFields","setFormFields","isLoading","setIsLoading","loopRows","fn","Array","fill","forEach","_","index","useEffect","getQuickAddRowFields","control","handleSubmit","getValues","formState","errors","setError","setValue","useForm","mode","getProductData","value","skuValue","isValid","sku","qty","validateSkuInput","quantity","parseInt","message","label","skus","Object","keys","getProductItems","useCallback","variantInfoList","notFoundSku","notPurchaseSku","productItems","passSku","notAddAble","numberLimit","variantInfo","find","variant","variantSku","toUpperCase","push","productId","variantId","option","options","purchasingDisabled","modifiers","defaultModifiers","getAllModifierDefaultValue","filter","modifier","isVerified","length","Number","optionList","reduce","arr","optionStr","JSON","parse","optionId","option_id","optionValue","id","error","defaultValue","key","quoteDraftItem","item","node","oldOptionList","quoteDraftItemQuantity","compareOption","newSelectOptionList","showErrors","inputType","skuFieldName","name","replace","handleAddToList","snackbar","info","async","getVariantInfoBySkus","getVariantList","join","clearInputValue","jsx","B3Spin","isSpinning","spinningHeight","children","jsxs","Box","sx","width","Grid","container","margin","flex","display","alignItems","Typography","color","CustomButton","textTransform","ml","fontWeight","onClick","handleAddRowsClick","onKeyDown","e","zIndex","B3CustomForm","fullWidth","disabled","tip","size","textAlign","addToList","searchDialogTitle","addButtonText","companyInfoId","customerGroupId","state","customer","salesRepCompanyId","b2bFeatures","masqueradeCompany","companyId","productListOpen","setProductListOpen","isAdded","setIsAdded","searchText","setSearchText","productList","setProductList","chooseOptionsOpen","setChooseOptionsOpen","optionsProduct","setOptionsProduct","handleSearchTextChange","target","searchProduct","productsSearch","searchProducts","search","categoryFilter","product","conversionProductsList","handleSearchButtonClicked","handleAddToListClick","calculateProductListPrice","products","TextField","hiddenLabel","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","padding","ProductListDialog","isOpen","onSearchTextChange","onSearch","onCancel","handleProductListDialogCancel","onProductQuantityChange","handleProductQuantityChange","newQuantity","onChooseOptionsClick","onAddToListClick","ChooseOptionsDialog","handleChooseOptionsDialogCancel","onConfirm","Flex","styled","wordBreak","gap","flexWrap","marginTop","FlexItem","flexGrow","flexShrink","ProductImage","height","borderRadius","ProductOptionText","fontSize","lineHeight","StyleTextField","marginBottom","isEdit","restProps","showInclusiveTaxPrice","global","isEnableProduct","blockPendingQuoteNonPurchasableOOS","setQuantity","setVariantInfo","setVariantSku","currentImage","setCurrentImage","imageUrl","isShowPrice","setShowPrice","additionalProducts","setAdditionalProducts","productPriceChangeOptions","setProductPriceChangeOptions","newPrice","setNewPrice","chooseOptionsProduct","setChooseOptionsProduct","isRequestLoading","setIsRequestLoading","newProduct","isPrice","getVariantInfoDisplayPrice","base_price","getProductInfoDisplayPrice","isPriceHidden","productImages","additionalProductsParams","productIds","option_values","optionValues","value_data","product_id","variants","productOptionsFields","getProductOptionsFields","setChooseOptionsForm","allOptions","newProductPriceChangeOptionLists","getProductPriceOptions","watch","reset","formValues","cache","useRef","getProductVariantId","changeName","isVariantOption","isSelect","Base64","encode","toString","variant_id","currentVariant","image_url","subscription","defaultValues","fields","default","unsubscribe","validateQuantityNumber","purchasing_disabled","getOptionList","optionsData","getOptionRequestData","map","current","isEqual","newChooseOptionsProduct","optionChangeFlag","findAttributeId","findIndex","includes","String","newOption","basePrice","taxPrice","price","getBCPrice","err","b2bLogger","getNewProductPrice","B3Dialog","rightSizeBtn","handleLeftClick","handleCancelClicked","handRightClick","handleConfirmClicked","title","loading","flexDirection","src","PRODUCT_DEFAULT_IMAGE","marginLeft","product_options","display_name","display_value","currencyFormat","priceNumber","variantCalculatePrice","bc_calculated_price","tax_inclusive","tax_exclusive","parseFloat","getProductPrice","event","indexOf","code","preventDefault","onBlur","handleNumberInputBlur","maxWidth","Divider","ProductTableAction","productOptions","useContext","ShoppingListDetailsContext","isMobile","useMobile","ProductTable","B3ProductList","showRightBtn","leftSizeBtn","minWidth","quantityEditable","canToProduct","renderAction","actionWidth"],"mappings":"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"}