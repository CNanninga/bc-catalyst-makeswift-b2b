{"version":3,"file":"OrderShoppingList-DWTsHiKm.js","sources":["../../src/utils/b3ShoppingList/b3ShoppingList.ts","../../src/pages/OrderDetail/components/CreateShoppingList.tsx","../../src/pages/OrderDetail/components/OrderShoppingList.tsx"],"sourcesContent":["import { createB2BShoppingList, createBcShoppingList } from '@/shared/service/b2b';\nimport { store } from '@/store';\nimport { ShoppingListStatus } from '@/types/shoppingList';\n\nimport { b2bPermissionsMap, validatePermissionWithComparisonType } from '../b3CheckPermissions';\nimport { channelId } from '../basicConfig';\n\ninterface CreateShoppingListParams {\n  data: { name: string; description: string };\n  isB2BUser: boolean;\n}\n\nconst createShoppingList = ({\n  data,\n  isB2BUser,\n}: // currentChannelId,\nCreateShoppingListParams) => {\n  const createShoppingData: Record<string, string | number> = data;\n\n  const createSL = isB2BUser ? createB2BShoppingList : createBcShoppingList;\n\n  if (isB2BUser) {\n    const submitShoppingListPermission = validatePermissionWithComparisonType({\n      containOrEqual: 'contain',\n      code: b2bPermissionsMap.submitShoppingListPermission,\n    });\n    const selectCompanyHierarchyId =\n      store.getState()?.company?.companyHierarchyInfo?.selectCompanyHierarchyId || 0;\n    createShoppingData.status = submitShoppingListPermission\n      ? ShoppingListStatus.Draft\n      : ShoppingListStatus.Approved;\n    if (selectCompanyHierarchyId) {\n      createShoppingData.companyId = selectCompanyHierarchyId;\n    }\n  } else {\n    createShoppingData.channelId = channelId;\n  }\n\n  return createSL({ ...createShoppingData, channelId });\n};\n\nexport default createShoppingList;\n","import { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { LangFormatFunction, useB3Lang } from '@/lib/lang';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport createShoppingList from '@/utils/b3ShoppingList/b3ShoppingList';\n\nconst getList = (b3Lang: LangFormatFunction) => [\n  {\n    name: 'name',\n    label: b3Lang('global.createShoppingList.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('global.createShoppingList.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n\ninterface CreateShoppingListProps {\n  open: boolean;\n  onChange: () => void;\n  onClose: () => void;\n}\n\nfunction CreateShoppingList({ open, onChange, onClose }: CreateShoppingListProps) {\n  const container = useRef<HTMLInputElement | null>(null);\n\n  const b3Lang = useB3Lang();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleConfirm = () => {\n    handleSubmit(async (data) => {\n      const { name, description } = data;\n\n      setLoading(true);\n      await createShoppingList({\n        data: { name, description },\n        isB2BUser,\n      });\n      setLoading(false);\n      onChange();\n    })();\n  };\n\n  return (\n    <Box\n      sx={{\n        ml: 3,\n        cursor: 'pointer',\n        width: '50%',\n      }}\n    >\n      <Box ref={container} />\n\n      <B3Dialog\n        isOpen={open}\n        fullWidth\n        title={b3Lang('global.createShoppingList.createNew')}\n        loading={loading}\n        handleLeftClick={handleClose}\n        handRightClick={handleConfirm}\n      >\n        <Box\n          sx={{\n            minHeight: 'auto',\n            display: 'flex',\n            alignItems: 'flex-start',\n          }}\n        >\n          <B3CustomForm\n            formFields={getList(b3Lang)}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n      </B3Dialog>\n    </Box>\n  );\n}\n\nexport default CreateShoppingList;\n","import { useEffect, useState } from 'react';\nimport { Add as AddIcon } from '@mui/icons-material';\nimport { Box, ListItemText, MenuItem, MenuList, useTheme } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport { b3HexToRgb } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { getB2BShoppingList, getBcShoppingList } from '@/shared/service/b2b';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { ShoppingListItem, ShoppingListStatus } from '@/types/shoppingList';\nimport { channelId } from '@/utils';\n\ninterface OrderShoppingListProps {\n  isOpen: boolean;\n  dialogTitle?: string;\n  confirmText?: string;\n  onClose?: () => void;\n  onCreate?: () => void;\n  onConfirm?: (id: string) => void;\n  isLoading?: boolean;\n  setLoading?: (val: boolean) => void;\n}\n\ninterface ListItem {\n  node: ShoppingListItem;\n}\n\nconst noop = () => {};\n\nexport default function OrderShoppingList(props: OrderShoppingListProps) {\n  const b3Lang = useB3Lang();\n  const {\n    isOpen,\n    dialogTitle = b3Lang('global.orderShoppingList.confirm'),\n    confirmText = b3Lang('global.orderShoppingList.ok'),\n    onClose = noop,\n    onConfirm = noop,\n    onCreate = noop,\n    isLoading = false,\n    setLoading = noop,\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const { submitShoppingListPermission } = useAppSelector(rolePermissionSelector);\n\n  const theme = useTheme();\n  const [isMobile] = useMobile();\n  const primaryColor = theme.palette.primary.main;\n\n  const [list, setList] = useState([]);\n  const [activeId, setActiveId] = useState('');\n\n  useEffect(() => {\n    if (!isOpen) return;\n    const getList = async () => {\n      setLoading(true);\n      setList([]);\n\n      try {\n        const filterStatus = submitShoppingListPermission\n          ? ShoppingListStatus.Draft\n          : ShoppingListStatus.Approved;\n\n        const { edges: list = [] } = isB2BUser\n          ? await getB2BShoppingList({ status: filterStatus })\n          : await getBcShoppingList({ channelId });\n\n        setList(list);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getList();\n    // Disabling as the setLoading dispatcher does not need to be here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isB2BUser, isOpen, role]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleConfirm = () => {\n    onConfirm(activeId);\n  };\n\n  const handleCreate = () => {\n    onCreate();\n  };\n\n  const handleListItemClicked = (item: ListItem) => () => {\n    setActiveId(item.node.id);\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      title={dialogTitle}\n      disabledSaveBtn={!activeId}\n      handleLeftClick={handleClose}\n      handRightClick={handleConfirm}\n      rightSizeBtn={confirmText}\n    >\n      <B3Spin isSpinning={isLoading} isFlex={false}>\n        <Box\n          sx={\n            isMobile\n              ? {\n                  height: '430px',\n                }\n              : {\n                  padding: isLoading ? '4rem 0' : 'unset',\n                  maxHeight: '430PX',\n                }\n          }\n        >\n          <MenuList\n            sx={{\n              maxHeight: '400px',\n              width: '100%',\n              overflowY: 'auto',\n            }}\n          >\n            {list.map((item: ListItem) => (\n              <MenuItem\n                key={item.node.id}\n                className={activeId === item.node.id ? 'active' : ''}\n                onClick={handleListItemClicked(item)}\n                sx={{\n                  '&:hover': {\n                    backgroundColor: b3HexToRgb(primaryColor, 0.12),\n                  },\n                  '&.active': {\n                    backgroundColor: b3HexToRgb(primaryColor, 0.12),\n                  },\n                }}\n              >\n                <ListItemText>{item.node.name}</ListItemText>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Box>\n\n        <CustomButton\n          variant=\"text\"\n          onClick={handleCreate}\n          sx={{\n            textTransform: 'none',\n          }}\n        >\n          <AddIcon\n            sx={{\n              fontSize: '17px',\n            }}\n          />\n          {` ${b3Lang('global.orderShoppingList.createNew')}`}\n        </CustomButton>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n"],"names":["createShoppingList","data","isB2BUser","createShoppingData","createSL","createB2BShoppingList","createBcShoppingList","submitShoppingListPermission","validatePermissionWithComparisonType","b2bPermissionsMap","selectCompanyHierarchyId","_c","_b","_a","store","ShoppingListStatus","channelId","getList","b3Lang","CreateShoppingList","open","onChange","onClose","container","useRef","useB3Lang","loading","setLoading","useState","useAppSelector","isB2BUserSelector","control","handleSubmit","getValues","errors","setValue","useForm","handleClose","handleConfirm","name","description","jsxs","Box","jsx","B3Dialog","B3CustomForm","noop","OrderShoppingList","props","isOpen","dialogTitle","confirmText","onConfirm","onCreate","isLoading","role","company","rolePermissionSelector","theme","useTheme","isMobile","useMobile","primaryColor","list","setList","activeId","setActiveId","useEffect","filterStatus","getB2BShoppingList","getBcShoppingList","handleCreate","handleListItemClicked","item","B3Spin","MenuList","MenuItem","b3HexToRgb","ListItemText","CustomButton","AddIcon"],"mappings":"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"}