{"version":3,"file":"index-_8OnaPnf.js","sources":["../../src/pages/quote/shared/config.ts","../../src/pages/QuotesList/QuoteItemCard.tsx","../../src/pages/QuotesList/index.tsx"],"sourcesContent":["import { store } from '@/store';\nimport { getActiveCurrencyInfo } from '@/utils';\nimport { getBCPrice } from '@/utils/b3Product/b3Product';\n\nexport interface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  offeredPrice: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n}\n\ninterface Summary {\n  subtotal: number;\n  shipping: number;\n  tax: number;\n  grandTotal: number;\n}\n\nconst defaultSummary: Summary = {\n  subtotal: 0,\n  shipping: 0,\n  tax: 0,\n  grandTotal: 0,\n};\n\nconst { decimal_places: decimalPlaces = 2 } = getActiveCurrencyInfo();\n\nconst priceCalc = (price: number) => parseFloat(price.toFixed(decimalPlaces));\n\nexport const addPrice = () => {\n  const { draftQuoteList } = store.getState().quoteInfo;\n  const { showInclusiveTaxPrice } = store.getState().global;\n\n  const newQuoteSummary = draftQuoteList.reduce(\n    (summary: Summary, product: CustomFieldItems) => {\n      const {\n        basePrice,\n        taxPrice: productTax = 0,\n        quantity,\n        additionalCalculatedPrices = [],\n      } = product.node;\n\n      let { subtotal, grandTotal, tax } = summary;\n\n      const { shipping } = summary;\n\n      let additionalCalculatedPriceTax = 0;\n\n      let additionalCalculatedPrice = 0;\n\n      additionalCalculatedPrices.forEach((item: CustomFieldItems) => {\n        additionalCalculatedPriceTax += item.additionalCalculatedPriceTax;\n        additionalCalculatedPrice += item.additionalCalculatedPrice;\n      });\n\n      subtotal += priceCalc(\n        getBCPrice(Number(basePrice) + additionalCalculatedPrice, Number(productTax)) * quantity,\n      );\n      tax += priceCalc((Number(productTax) + additionalCalculatedPriceTax) * quantity);\n\n      grandTotal = showInclusiveTaxPrice ? subtotal + shipping : subtotal + shipping + tax;\n\n      return {\n        grandTotal,\n        shipping,\n        tax,\n        subtotal,\n      };\n    },\n    {\n      ...defaultSummary,\n    },\n  );\n\n  return newQuoteSummary;\n};\n","import styled from '@emotion/styled';\nimport { useTheme } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { useB3Lang } from '@/lib/lang';\nimport { currencyFormat, displayFormat } from '@/utils';\n\nimport QuoteStatus from '../quote/components/QuoteStatus';\n\ninterface ListItem {\n  [key: string]: string | Object;\n  status: string;\n  quoteNumber: string;\n}\n\ninterface QuoteItemCardProps {\n  goToDetail: (val: ListItem, status: number) => void;\n  item: ListItem;\n}\n\nconst Flex = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'start',\n  marginBottom: '1rem',\n});\n\nexport function QuoteItemCard(props: QuoteItemCardProps) {\n  const { item, goToDetail } = props;\n  const theme = useTheme();\n  const b3Lang = useB3Lang();\n\n  const primaryColor = theme.palette.primary.main;\n\n  const columnAllItems: TableColumnItem<ListItem>[] = [\n    {\n      key: 'quoteTitle',\n      title: b3Lang('quotes.quoteItemCard.title'),\n    },\n    {\n      key: 'salesRepEmail',\n      title: b3Lang('quotes.quoteItemCard.salesRep'),\n    },\n    {\n      key: 'createdBy',\n      title: b3Lang('quotes.quoteItemCard.createdBy'),\n    },\n    {\n      key: 'createdAt',\n      title: b3Lang('quotes.quoteItemCard.dateCreated'),\n      render: () =>\n        `${Number(item.status) !== 0 ? displayFormat(Number(item.createdAt)) : item.createdAt}`,\n    },\n    {\n      key: 'updatedAt',\n      title: b3Lang('quotes.quoteItemCard.lastUpdate'),\n      render: () =>\n        `${Number(item.status) !== 0 ? displayFormat(Number(item.updatedAt)) : item.updatedAt}`,\n    },\n    {\n      key: 'expiredAt',\n      title: b3Lang('quotes.quoteItemCard.expirationDate'),\n      render: () =>\n        `${Number(item.status) !== 0 ? displayFormat(Number(item.expiredAt)) : item.expiredAt}`,\n    },\n    {\n      key: 'totalAmount',\n      title: b3Lang('quotes.quoteItemCard.subtotal'),\n      render: () => {\n        const { totalAmount } = item;\n\n        return currencyFormat(Number(totalAmount));\n      },\n    },\n  ];\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          color: 'rgba(0, 0, 0, 0.6)',\n        }}\n      >\n        <Flex>\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              mb: '1rem',\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n              sx={{\n                color: 'rgba(0, 0, 0, 0.87)',\n              }}\n            >\n              {item.quoteNumber}\n            </Typography>\n          </Box>\n          <Box>\n            <QuoteStatus code={item.status} />\n          </Box>\n        </Flex>\n\n        {columnAllItems.map((list: any) => (\n          <Box\n            key={list.key}\n            sx={{\n              display: 'flex',\n            }}\n          >\n            <Typography\n              sx={{\n                fontWeight: 'bold',\n                color: 'rgba(0, 0, 0, 0.87)',\n                mr: '5px',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              {`${list.title}:`}\n            </Typography>\n            <Typography\n              sx={{\n                color: 'black',\n                wordBreak: 'break-all',\n              }}\n            >\n              {list?.render ? list.render() : item[list.key]}\n            </Typography>\n          </Box>\n        ))}\n\n        <Box\n          onClick={() => goToDetail(item, Number(item.status))}\n          sx={{\n            mt: '1rem',\n            pl: 0,\n            color: primaryColor || '#1976D2',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            display: 'inline-block',\n          }}\n        >\n          {b3Lang('quotes.quoteItemCard.view')}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box } from '@mui/material';\n\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { useMobile, useSort } from '@/hooks';\nimport { useB3Lang } from '@/lib/lang';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  getB2BQuotesList,\n  getBCQuotesList,\n  getShoppingListsCreatedByUser,\n} from '@/shared/service/b2b';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { channelId, currencyFormatConvert, displayFormat } from '@/utils';\n\nimport QuoteStatus from '../quote/components/QuoteStatus';\nimport { addPrice } from '../quote/shared/config';\n\nimport { QuoteItemCard } from './QuoteItemCard';\n\ninterface ListItem {\n  [key: string]: string | Object;\n  status: string;\n  quoteNumber: string;\n}\n\ninterface FilterSearchProps {\n  first: number;\n  offset: number;\n  q: string;\n  orderBy: string;\n  createdBy: string;\n  status: string | number;\n  salesRep: string;\n  dateCreatedBeginAt: string;\n  dateCreatedEndAt: string;\n  startValue: string;\n  endValue: string;\n}\n\nconst quotesStatuses = [\n  {\n    idLangCustomLabel: 'quotes.open',\n    statusCode: 1,\n  },\n  {\n    idLangCustomLabel: 'quotes.ordered',\n    statusCode: 4,\n  },\n  {\n    idLangCustomLabel: 'quotes.expired',\n    statusCode: 5,\n  },\n];\n\nconst defaultSortKey = 'quoteNumber';\n\nconst sortKeys = {\n  quoteNumber: 'quoteNumber',\n  quoteTitle: 'quoteTitle',\n  salesRep: 'salesRep',\n  createdBy: 'createdBy',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt',\n  expiredAt: 'expiredAt',\n  status: 'status',\n};\n\nfunction useData() {\n  const companyB2BId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customer = useAppSelector(({ company }) => company.customer);\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const draftQuoteListLength = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList.length);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const b3Lang = useB3Lang();\n\n  const companyId = companyB2BId || salesRepCompanyId;\n\n  const getQuotesList = (\n    params: Partial<FilterSearchProps>,\n  ): ReturnType<typeof getB2BQuotesList | typeof getBCQuotesList> => {\n    return isB2BUser\n      ? getB2BQuotesList({ ...params, channelId })\n      : getBCQuotesList({ ...params, channelId });\n  };\n\n  const getFilters = () => [\n    {\n      name: 'status',\n      label: b3Lang('quotes.quoteStatus'),\n      required: false,\n      default: '',\n      fieldType: 'dropdown',\n      options: quotesStatuses.map(({ idLangCustomLabel, ...restQuoteStatuses }) => ({\n        customLabel: b3Lang(idLangCustomLabel),\n        ...restQuoteStatuses,\n      })),\n      replaceOptions: {\n        label: 'customLabel',\n        value: 'statusCode',\n      },\n      xs: 12,\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  const getB2BFilters = async () => {\n    const createdByUsers = await getShoppingListsCreatedByUser(Number(companyId), 2);\n\n    const newCreatedByUsers =\n      createdByUsers?.createdByUser?.results?.createdBy.map((item: any) => ({\n        createdBy: item.email ? `${item.name} (${item.email})` : `${item.name}`,\n      })) || [];\n\n    const newCreatedBySalesReps =\n      createdByUsers?.createdByUser?.results?.salesRep.map((item: any) => ({\n        salesRep: `${item.salesRep || item.salesRepEmail}`,\n      })) || [];\n\n    return [\n      ...getFilters(),\n      {\n        name: 'createdBy',\n        label: b3Lang('quotes.createdBy'),\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: newCreatedByUsers,\n        replaceOptions: {\n          label: 'createdBy',\n          value: 'createdBy',\n        },\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n      },\n      {\n        name: 'salesRep',\n        label: b3Lang('quotes.salesRep'),\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: newCreatedBySalesReps,\n        replaceOptions: {\n          label: 'salesRep',\n          value: 'salesRep',\n        },\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n      },\n    ];\n  };\n\n  const getAvailableFilters = async () => {\n    if (isB2BUser) {\n      return getB2BFilters();\n    }\n\n    return getFilters();\n  };\n\n  return {\n    companyId,\n    isB2BUser,\n    draftQuoteListLength,\n    customer,\n    getQuotesList,\n    getAvailableFilters,\n  };\n}\n\nconst useColumnList = (): Array<TableColumnItem<ListItem>> => {\n  const b3Lang = useB3Lang();\n\n  return useMemo(\n    () => [\n      {\n        key: 'quoteNumber',\n        title: b3Lang('quotes.quoteNumber'),\n        isSortable: true,\n      },\n      {\n        key: 'quoteTitle',\n        title: b3Lang('quotes.title'),\n        isSortable: true,\n      },\n      {\n        key: 'salesRep',\n        title: b3Lang('quotes.salesRep'),\n        render: (item: ListItem) => `${item.salesRep || item.salesRepEmail}`,\n        isSortable: true,\n      },\n      {\n        key: 'createdBy',\n        title: b3Lang('quotes.createdBy'),\n        isSortable: true,\n      },\n      {\n        key: 'createdAt',\n        title: b3Lang('quotes.dateCreated'),\n        render: (item: ListItem) =>\n          `${Number(item.status) !== 0 ? displayFormat(Number(item.createdAt)) : item.createdAt}`,\n        isSortable: true,\n      },\n      {\n        key: 'updatedAt',\n        title: b3Lang('quotes.lastUpdate'),\n        render: (item: ListItem) =>\n          `${Number(item.status) !== 0 ? displayFormat(Number(item.updatedAt)) : item.updatedAt}`,\n        isSortable: true,\n      },\n      {\n        key: 'expiredAt',\n        title: b3Lang('quotes.expirationDate'),\n        render: (item: ListItem) =>\n          `${Number(item.status) !== 0 ? displayFormat(Number(item.expiredAt)) : item.expiredAt}`,\n        isSortable: true,\n      },\n      {\n        key: 'totalAmount',\n        title: b3Lang('quotes.subtotal'),\n        render: (item: ListItem) => {\n          const { totalAmount, currency } = item;\n          const newCurrency = currency as CurrencyProps;\n          return currencyFormatConvert(Number(totalAmount), {\n            currency: newCurrency,\n            isConversionRate: false,\n            useCurrentCurrency: !!currency,\n          });\n        },\n        style: {\n          textAlign: 'right',\n        },\n      },\n      {\n        key: 'status',\n        title: b3Lang('quotes.status'),\n        render: (item: ListItem) => <QuoteStatus code={item.status} />,\n        isSortable: true,\n      },\n    ],\n    [b3Lang],\n  );\n};\n\nfunction QuotesList() {\n  const { getAvailableFilters, draftQuoteListLength, customer, getQuotesList } = useData();\n  const columns = useColumnList();\n\n  const initSearch = {\n    q: '',\n    orderBy: `-${sortKeys[defaultSortKey]}`,\n    createdBy: '',\n    salesRep: '',\n    status: '',\n    dateCreatedBeginAt: '',\n    dateCreatedEndAt: '',\n  };\n\n  const [filterData, setFilterData] = useState<Partial<FilterSearchProps>>(initSearch);\n\n  const [isRequestLoading, setIsRequestLoading] = useState(false);\n\n  const [filterMoreInfo, setFilterMoreInfo] = useState<Array<any>>([]);\n\n  const [handleSetOrderBy, order, orderBy] = useSort(\n    sortKeys,\n    defaultSortKey,\n    filterData,\n    setFilterData,\n  );\n\n  const navigate = useNavigate();\n\n  const b3Lang = useB3Lang();\n\n  const [isMobile] = useMobile();\n\n  const {\n    state: { openAPPParams },\n    dispatch,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getAvailableFilters().then((filters) => setFilterMoreInfo(filters));\n\n    if (openAPPParams.quoteBtn) {\n      dispatch({\n        type: 'common',\n        payload: {\n          openAPPParams: {\n            quoteBtn: '',\n            shoppingListBtn: '',\n          },\n        },\n      });\n    }\n    // disabling as we only need to run this once and values at starting render are good enough\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const goToDetail = (item: ListItem, status: number) => {\n    if (Number(status) === 0) {\n      navigate('/quoteDraft');\n    } else {\n      navigate(`/quoteDetail/${item.id}?date=${item.createdAt}`);\n    }\n  };\n\n  const fetchList: GetRequestList<Partial<FilterSearchProps>, ListItem> = useCallback(\n    async (params) => {\n      const { edges = [], totalCount } = await getQuotesList(params);\n\n      if (params.offset === 0 && draftQuoteListLength) {\n        const summaryPrice = addPrice();\n\n        const quoteDraft = {\n          node: {\n            quoteNumber: '—',\n            quoteTitle: '—',\n            createdAt: '—',\n            salesRepEmail: '—',\n            createdBy: `${customer.firstName} ${customer.lastName}`,\n            updatedAt: '—',\n            expiredAt: '—',\n            totalAmount: summaryPrice?.grandTotal,\n            status: 0,\n            taxTotal: summaryPrice?.tax,\n          },\n        };\n\n        const { status, createdBy, salesRep, dateCreatedBeginAt, dateCreatedEndAt } = filterData;\n\n        const showDraft = !status && !salesRep && !dateCreatedBeginAt && !dateCreatedEndAt;\n\n        if (createdBy && showDraft) {\n          const getCreatedByReg = /^[^(]+/;\n          const createdByUserRegArr = getCreatedByReg.exec(createdBy);\n          const createdByUser = createdByUserRegArr?.length ? createdByUserRegArr[0].trim() : '';\n          if (createdByUser === quoteDraft.node.createdBy) edges.unshift(quoteDraft);\n        } else if (showDraft) {\n          edges.unshift(quoteDraft);\n        }\n      }\n\n      return {\n        edges,\n        totalCount,\n      };\n    },\n    [getQuotesList, draftQuoteListLength, customer.firstName, customer.lastName, filterData],\n  );\n\n  const handleChange = (key: string, value: string) => {\n    if (key === 'search') {\n      setFilterData({\n        ...filterData,\n        q: value,\n      });\n    }\n  };\n\n  const handleFilterChange = (value: Partial<FilterSearchProps>) => {\n    const search: Partial<FilterSearchProps> = {\n      createdBy: value?.createdBy || '',\n      status: value?.status || '',\n      salesRep: value?.salesRep || '',\n      dateCreatedBeginAt: value?.startValue || '',\n      dateCreatedEndAt: value?.endValue || '',\n    };\n\n    setFilterData({\n      ...filterData,\n      ...search,\n    });\n  };\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          filterMoreInfo={filterMoreInfo}\n          startPicker={{\n            isEnabled: true,\n            label: b3Lang('quotes.from'),\n            defaultValue: filterData?.dateCreatedBeginAt || '',\n            pickerKey: 'start',\n          }}\n          endPicker={{\n            isEnabled: true,\n            label: b3Lang('quotes.to'),\n            defaultValue: filterData?.dateCreatedEndAt || '',\n            pickerKey: 'end',\n          }}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n        />\n        <B3PaginationTable\n          columnItems={columns}\n          rowsPerPageOptions={[10, 20, 30]}\n          getRequestList={fetchList}\n          searchParams={filterData}\n          isCustomRender={false}\n          requestLoading={setIsRequestLoading}\n          tableKey=\"quoteNumber\"\n          sortDirection={order}\n          orderBy={orderBy}\n          sortByFn={handleSetOrderBy}\n          labelRowsPerPage={\n            isMobile ? b3Lang('quotes.cardsPerPage') : b3Lang('quotes.quotesPerPage')\n          }\n          renderItem={(row) => <QuoteItemCard item={row} goToDetail={goToDetail} />}\n          onClickRow={(row) => {\n            goToDetail(row, Number(row.status));\n          }}\n          hover\n        />\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default QuotesList;\n"],"names":["defaultSummary","decimalPlaces","getActiveCurrencyInfo","priceCalc","price","addPrice","draftQuoteList","store","showInclusiveTaxPrice","summary","product","basePrice","productTax","quantity","additionalCalculatedPrices","subtotal","grandTotal","tax","shipping","additionalCalculatedPriceTax","additionalCalculatedPrice","item","getBCPrice","Flex","styled","QuoteItemCard","props","goToDetail","theme","useTheme","b3Lang","useB3Lang","primaryColor","columnAllItems","displayFormat","totalAmount","currencyFormat","Card","jsxs","CardContent","jsx","Box","Typography","QuoteStatus","list","quotesStatuses","defaultSortKey","sortKeys","useData","companyB2BId","useAppSelector","company","customer","isB2BUser","isB2BUserSelector","draftQuoteListLength","quoteInfo","salesRepCompanyId","b2bFeatures","companyId","getQuotesList","params","getB2BQuotesList","channelId","getBCQuotesList","getFilters","idLangCustomLabel","restQuoteStatuses","getB2BFilters","createdByUsers","getShoppingListsCreatedByUser","newCreatedByUsers","_b","_a","newCreatedBySalesReps","_d","_c","useColumnList","useMemo","currency","newCurrency","currencyFormatConvert","QuotesList","getAvailableFilters","columns","initSearch","filterData","setFilterData","useState","isRequestLoading","setIsRequestLoading","filterMoreInfo","setFilterMoreInfo","handleSetOrderBy","order","orderBy","useSort","navigate","useNavigate","isMobile","useMobile","openAPPParams","dispatch","useContext","GlobalContext","useEffect","filters","status","fetchList","useCallback","edges","totalCount","summaryPrice","quoteDraft","createdBy","salesRep","dateCreatedBeginAt","dateCreatedEndAt","showDraft","createdByUserRegArr","handleChange","key","value","handleFilterChange","search","B3Spin","B3Filter","B3PaginationTable","row"],"mappings":"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"}