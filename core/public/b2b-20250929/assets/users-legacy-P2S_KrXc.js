System.register(["./react-setup-legacy-D2JRzxdF.js","./load-functions-legacy-rxJ-MsEG.js","./intl-legacy-f5dGU49Z.js"],function(e,n){"use strict";var a,l,s;return{setters:[e=>{a=e.B,l=e.aI,s=e.ai},null,null],execute:function(){const n=e=>`\n  query UserEmailCheck {\n    userEmailCheck (\n      email: "${e.email}"\n      companyId: ${e.companyId||null}\n      storeHash: "${l}"\n      channelId: ${e.channelId||null}\n    ){\n      userType,\n      userInfo{\n        id\n        email\n        firstName\n        lastName\n        phoneNumber\n        role\n        companyName\n        originChannelId\n        forcePasswordReset\n      }\n    }\n  }\n`,r=e=>`{\n  customerEmailCheck (\n    email: "${e.email}"\n    storeHash: "${l}"\n    channelId: ${e.channelId||null}\n  ){\n    userType,\n  }\n}`;e("a",e=>a.graphqlB2B({query:n(e)}).then(e=>({...e.userEmailCheck,isValid:e.userEmailCheck.userType===s.DOES_NOT_EXIST}))),e("c",e=>a.graphqlB2B({query:r(e)}).then(e=>({...e.customerEmailCheck,isValid:e.customerEmailCheck.userType!==s.B2C})))}}});
//# sourceMappingURL=users-legacy-P2S_KrXc.js.map
